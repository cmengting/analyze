// Code generated by running "go generate" in golang.org/x/text. DO NOT EDIT.

package main

import (
	"golang.org/x/text/language"
	"golang.org/x/text/message"
	"golang.org/x/text/message/catalog"
)

type dictionary struct {
	index []uint32
	data  string
}

func (d *dictionary) Lookup(key string) (data string, ok bool) {
	p, ok := messageKeyToIndex[key]
	if !ok {
		return "", false
	}
	start, end := d.index[p], d.index[p+1]
	if start == end {
		return "", false
	}
	return d.data[start:end], true
}

func init() {
	dict := map[string]catalog.Dictionary{
		"en": &dictionary{index: enIndex, data: enData},
		"zh": &dictionary{index: zhIndex, data: zhData},
	}
	fallback := language.MustParse("en")
	cat, err := catalog.NewFromMap(dict, catalog.Fallback(fallback))
	if err != nil {
		panic(err)
	}
	message.DefaultCatalog = cat
}

var messageKeyToIndex = map[string]int{
	"%d lines of C code":                               440,
	"%d lines of C++ code":                             441,
	"%d lines of headers":                              442,
	"%s BuildAction preparation completed (%v/%v)":     450,
	"%s CTU information generated (%v/%v)":             453,
	"%s STU information preparation completed (%v/%v)": 447,
	"Analysis completed [%s]":                          449,
	"Analysis of %s completed (%s, %v/%v) [%s]":        8,
	"Analyzing C/C++ files completed [%s]":             6,
	"BuildAction preparation completed [%s]":           451,
	"CTU information generated successfully [%s]":      454,
	"CTU information preparation completed [%s]":       445,
	"Preprocessing C/C++ files completed [%s]":         3,
	"STU information preparation completed [%s]":       448,
	"Start analyzing C/C++ files":                      5,
	"Start analyzing for %s (%v/%v)":                   7,
	"Start parsing compilation database":               1,
	"Start preparing CTU information":                  444,
	"Start preparing STU information":                  446,
	"Start preprocessing C/C++ files":                  2,
	"Start to generate compilation database":           0,
	"Starting generating CTU infomation":               452,
	"Starting writing CTU information":                 455,
	"Total time for analysis: %s":                      4,
	"Use %d CPU(s)":                                    443,
	"Violation of MISRA C++:2008 Rule 0-1-10: Every defined function shall be called at least once.":                                                                                                                                                                                              221,
	"Violation of MISRA C++:2008 Rule 0-1-11: There shall be no unused parameters (named or unnamed) in non-virtual functions.":                                                                                                                                                                   222,
	"Violation of MISRA C++:2008 Rule 0-1-12: There shall be no unused parameters (named or unnamed) in the set of parameters for a virtual function and all the functions that override it.":                                                                                                     223,
	"Violation of MISRA C++:2008 Rule 0-1-1: A project shall not contain unreachable code.":                                                                                                                                                                                                       212,
	"Violation of MISRA C++:2008 Rule 0-1-2: A project shall not contain infeasible paths.":                                                                                                                                                                                                       213,
	"Violation of MISRA C++:2008 Rule 0-1-3: A project shall not contain unused variables.":                                                                                                                                                                                                       214,
	"Violation of MISRA C++:2008 Rule 0-1-4: A project shall not contain non-volatile POD variables having only one use.":                                                                                                                                                                         215,
	"Violation of MISRA C++:2008 Rule 0-1-5: A project shall not contain unused type declarations.":                                                                                                                                                                                               216,
	"Violation of MISRA C++:2008 Rule 0-1-6: A project shall not contain instances of non-volatile variables being given values that are never subsequently used.":                                                                                                                                217,
	"Violation of MISRA C++:2008 Rule 0-1-7: The value returned by a function having a non-void return type that is not an overloaded operator shall always be used.":                                                                                                                             218,
	"Violation of MISRA C++:2008 Rule 0-1-8: All functions with void return type shall have external side effect(s).":                                                                                                                                                                             219,
	"Violation of MISRA C++:2008 Rule 0-1-9: There shall be no dead code.":                                                                                                                                                                                                                        220,
	"Violation of MISRA C++:2008 Rule 0-2-1: An object shall not be assigned to an overlapping object.":                                                                                                                                                                                           224,
	"Violation of MISRA C++:2008 Rule 0-3-1: Minimization of run-time failures shall be ensured by the use of at least one of: (a) static analysis tools/techniques; (b) dynamic tools/techniques; (c) explicit coding of checks to handle run-time faults.":                                      225,
	"Violation of MISRA C++:2008 Rule 0-3-2: If a function generates error information, then that error information shall be tested.":                                                                                                                                                             226,
	"Violation of MISRA C++:2008 Rule 0-4-1: Use of scaled-integer or fixed-point arithmetic shall be documented.":                                                                                                                                                                                227,
	"Violation of MISRA C++:2008 Rule 0-4-2: Use of floating-point arithmetic shall be documented.":                                                                                                                                                                                               228,
	"Violation of MISRA C++:2008 Rule 0-4-3: Floating-point implementations shall comply with a defined floating-point standard.":                                                                                                                                                                 229,
	"Violation of MISRA C++:2008 Rule 1-0-1: All code shall conform to ISO/IEC 14882:2003 \"The C++ Standard Incorporating Technical Corrigendum 1\".":                                                                                                                                            230,
	"Violation of MISRA C++:2008 Rule 1-0-2: Multiple compilers shall only be used if they have a common, defined interface.":                                                                                                                                                                     231,
	"Violation of MISRA C++:2008 Rule 1-0-3: The implementation of integer division in the chosen compiler shall be determined and documented.":                                                                                                                                                   232,
	"Violation of MISRA C++:2008 Rule 10-1-1: Classes should not be derived from virtual bases.":                                                                                                                                                                                                  366,
	"Violation of MISRA C++:2008 Rule 10-1-2: A base class shall only be declared virtual if it is used in a diamond hierarchy.":                                                                                                                                                                  367,
	"Violation of MISRA C++:2008 Rule 10-1-3: An accessible base class shall not be both virtual and non-virtual in the same hierarchy.":                                                                                                                                                          368,
	"Violation of MISRA C++:2008 Rule 10-2-1: All accessible entity names within a multiple inheritance hierarchy should be unique.":                                                                                                                                                              369,
	"Violation of MISRA C++:2008 Rule 10-3-1: There shall be no more than one definition of each virtual function on each path through the inheritance hierarchy.":                                                                                                                                370,
	"Violation of MISRA C++:2008 Rule 10-3-2: Each overriding virtual function shall be declared with the virtual keyword.":                                                                                                                                                                       371,
	"Violation of MISRA C++:2008 Rule 10-3-3: A virtual function shall only be overridden by a pure virtual function if it is itself declared as pure virtual.":                                                                                                                                   372,
	"Violation of MISRA C++:2008 Rule 11-0-1: Member data in non-POD class types shall be private.":                                                                                                                                                                                               373,
	"Violation of MISRA C++:2008 Rule 12-1-1: An object's dynamic type shall not be used from the body of its constructor or destructor.":                                                                                                                                                         374,
	"Violation of MISRA C++:2008 Rule 12-1-2: AlI constructors of a class should explicitly call a constructor for all of its immediate base classes and all virtual base classes.":                                                                                                               375,
	"Violation of MISRA C++:2008 Rule 12-1-3: All constructors that are callable with a single argument of fundamental type shall be declared explicit.":                                                                                                                                          376,
	"Violation of MISRA C++:2008 Rule 12-8-1: A copy constructor shall only initialize its base classes and the non-static members of the class of which it is a member.":                                                                                                                         377,
	"Violation of MISRA C++:2008 Rule 12-8-2: The copy assignment operator shall be declared protected or private in an abstract class.":                                                                                                                                                          378,
	"Violation of MISRA C++:2008 Rule 14-5-1: A non-member genericfunction shall only be declared in a namespace that is not an associated namespace.":                                                                                                                                            379,
	"Violation of MISRA C++:2008 Rule 14-5-2: A copy constructor shall be declared when there is a template constuctor with a single parameter that is a generic parameter.":                                                                                                                      380,
	"Violation of MISRA C++:2008 Rule 14-5-3: A copy assignment operator shall be declared when there is a template assignment operator with a parameter that is a generic parameter:":                                                                                                            381,
	"Violation of MISRA C++:2008 Rule 14-6-1: In a class template with a dependent base, any name that may be found in that dependent base shall be referred to using a qualified-id or this->.":                                                                                                  382,
	"Violation of MISRA C++:2008 Rule 14-6-2: The function chosen by overload resolution shall resolve to a function declared previously in the translation unit.":                                                                                                                                383,
	"Violation of MISRA C++:2008 Rule 14-7-1: All class templates, function templates, class template member functions and class template static members shall be instantiated at least once.":                                                                                                    384,
	"Violation of MISRA C++:2008 Rule 14-7-2: For any given template specialization, an explicit instantiation of the template with the template arguments used in the specializaion shall not render the program ill-formed":                                                                     385,
	"Violation of MISRA C++:2008 Rule 14-7-3: All partial and explicit specializations for a template shall be declared in the same file as the declaration of their primary template.":                                                                                                           386,
	"Violation of MISRA C++:2008 Rule 14-8-1: Overloaded function templates shall not be explicitly specialized.":                                                                                                                                                                                 387,
	"Violation of MISRA C++:2008 Rule 14-8-2: The viable function set for a function call should either contain no function specializaions, or only contain function specializations.":                                                                                                            388,
	"Violation of MISRA C++:2008 Rule 15-0-1: Exceptions shall only be used for error handling.":                                                                                                                                                                                                  389,
	"Violation of MISRA C++:2008 Rule 15-0-2: An exception object should not have pointer type.":                                                                                                                                                                                                  390,
	"Violation of MISRA C++:2008 Rule 15-0-3: Control shall not be transferred into a try or catch block using a goto or a switch statement.":                                                                                                                                                     391,
	"Violation of MISRA C++:2008 Rule 15-1-1: The assignment-expression of a throw statement shall not itself cause an exception to be thrown.":                                                                                                                                                   392,
	"Violation of MISRA C++:2008 Rule 15-1-2: NULL shall not be thrown explicitly.":                                                                                                                                                                                                               393,
	"Violation of MISRA C++:2008 Rule 15-1-3: An empty throw (throw;) shall only be used in the compound-statement of a catch handler.":                                                                                                                                                           394,
	"Violation of MISRA C++:2008 Rule 15-3-1: Exceptions shall be raised only after start-up and before termination of the program.":                                                                                                                                                              395,
	"Violation of MISRA C++:2008 Rule 15-3-2: There should be at least one exception handler to catch all otherwise unhandled exceptions.":                                                                                                                                                        396,
	"Violation of MISRA C++:2008 Rule 15-3-3: Handlers of a function-try-block implementation of a class constructor or destructor shall not reference non-static members from this class or its bases.":                                                                                          397,
	"Violation of MISRA C++:2008 Rule 15-3-4: Each exception explicitly thrown in the code shall have a handler of a compatible type in all calll paths that could lead to that point.":                                                                                                           398,
	"Violation of MISRA C++:2008 Rule 15-3-5: A class type exception shall always be caught by reference.":                                                                                                                                                                                        399,
	"Violation of MISRA C++:2008 Rule 15-3-6: Where multiple handlers are provided in a single try-catch statement or, fuction-try-block for a derived class and some or all of its bases, the handlers shall be ordered most-derived to base class.":                                             400,
	"Violation of MISRA C++:2008 Rule 15-3-7: Where multiple handlers are provided in a single try-catch statement or function-try-block, any elipsis (catch-all) handler shall occur last.":                                                                                                      401,
	"Violation of MISRA C++:2008 Rule 15-4-1: If a function is declared with an exception-specification, then all declarations of the same function (in other translaion units) shall be declared with the same set of type -ids.":                                                                402,
	"Violation of MISRA C++:2008 Rule 15-5-1: A class destructor shall not exit with an exception.":                                                                                                                                                                                               403,
	"Violation of MISRA C++:2008 Rule 15-5-2: Where a function's declaration includes an exception-specification, the function shall only be capable of throwing exceptions of the indicated type(s).":                                                                                            404,
	"Violation of MISRA C++:2008 Rule 15-5-3: The terminate() function shall not be called implicitly.":                                                                                                                                                                                           405,
	"Violation of MISRA C++:2008 Rule 16-0-1: #include directives in a file shall only be preceded by other preprocessor directives or comments.":                                                                                                                                                 406,
	"Violation of MISRA C++:2008 Rule 16-0-2: Macros shall only be #define’d or #undef'd in the global namespace.":                                                                                                                                                                                407,
	"Violation of MISRA C++:2008 Rule 16-0-3: #undef shall not be used.":                                                                                                                                                                                                                          408,
	"Violation of MISRA C++:2008 Rule 16-0-4: Function-like macros shall not be defined.":                                                                                                                                                                                                         409,
	"Violation of MISRA C++:2008 Rule 16-0-5: Arguments to a function-like macro shall not contain tokens that look like preprocessing directives.":                                                                                                                                               410,
	"Violation of MISRA C++:2008 Rule 16-0-6: In the definition of a function-like macro, each instance of a parameter shall be enclosed in parentheses, unless it is used as the operand of # or ##.":                                                                                            411,
	"Violation of MISRA C++:2008 Rule 16-0-7: Undefined macro identifiers shall not be used in #if or #elif preprocessor directives, except as operands to the defined operator.":                                                                                                                 412,
	"Violation of MISRA C++:2008 Rule 16-0-8: If the # token appears as the first token on a line, then it shall be immediately followed by a preprocessing token.":                                                                                                                               413,
	"Violation of MISRA C++:2008 Rule 16-1-1: The defined preprocessor operator shall only be used in one of the two standard forms.":                                                                                                                                                             414,
	"Violation of MISRA C++:2008 Rule 16-1-2: All #else, #elif and #endif preprocessor directives shall reside in the same file as the #if or #ifdef directive to which they are related.":                                                                                                        415,
	"Violation of MISRA C++:2008 Rule 16-2-1: The pre-processor shall only be used for file inclusion and include guards.":                                                                                                                                                                        416,
	"Violation of MISRA C++:2008 Rule 16-2-2: C++ macros shall only be used for include guards, type qualifiers, or storage class specifiers.":                                                                                                                                                    417,
	"Violation of MISRA C++:2008 Rule 16-2-3: Include guards shall be provided.":                                                                                                                                                                                                                  418,
	"Violation of MISRA C++:2008 Rule 16-2-4: The ', \", /* or // characters shall not occur in a header file name.":                                                                                                                                                                              419,
	"Violation of MISRA C++:2008 Rule 16-2-5: The \\ character should not occur in a header file name.":                                                                                                                                                                                           420,
	"Violation of MISRA C++:2008 Rule 16-2-6: The #include directive shall be followed by either a <filename> or \"filename\" sequence.":                                                                                                                                                          421,
	"Violation of MISRA C++:2008 Rule 16-3-1: There shall be at most one occurrence of the # or ## operators in a single macro definition.":                                                                                                                                                       422,
	"Violation of MISRA C++:2008 Rule 16-3-2: The # and ## operators should not be used.":                                                                                                                                                                                                         423,
	"Violation of MISRA C++:2008 Rule 16-6-1: All uses of the #pragma directive shall be documented.":                                                                                                                                                                                             424,
	"Violation of MISRA C++:2008 Rule 17-0-1: Reserved identifiers, macros and functions in the standard library shall not be defined, redefined or undefined.":                                                                                                                                   425,
	"Violation of MISRA C++:2008 Rule 17-0-2: The names of standard library macros and objects shall not be reused.":                                                                                                                                                                              426,
	"Violation of MISRA C++:2008 Rule 17-0-3: The names of standard library functions shall not be overridden.":                                                                                                                                                                                   427,
	"Violation of MISRA C++:2008 Rule 17-0-4: All library code shall conform to MISRA C++.":                                                                                                                                                                                                       428,
	"Violation of MISRA C++:2008 Rule 17-0-5: The setjmp macro and the longjmp function shall not be used.":                                                                                                                                                                                       429,
	"Violation of MISRA C++:2008 Rule 18-0-1: The C library shall not be used.":                                                                                                                                                                                                                   430,
	"Violation of MISRA C++:2008 Rule 18-0-2: The library functions atof, atoi and atol from library <cstdlib> shall not be used.":                                                                                                                                                                431,
	"Violation of MISRA C++:2008 Rule 18-0-3: The library functions abort, exit, getenv and system from library <cstdlib> shall not be used.":                                                                                                                                                     432,
	"Violation of MISRA C++:2008 Rule 18-0-4: The time handling functions of library <ctime> shall not be used.":                                                                                                                                                                                  433,
	"Violation of MISRA C++:2008 Rule 18-0-5: The unbounded functions of library <cstring> shall not be used.":                                                                                                                                                                                    434,
	"Violation of MISRA C++:2008 Rule 18-2-1: The macro offsetof shall not be used.":                                                                                                                                                                                                              435,
	"Violation of MISRA C++:2008 Rule 18-4-1: Dynamic heap memory allocation shall not be used.":                                                                                                                                                                                                  436,
	"Violation of MISRA C++:2008 Rule 18-7-1: The signal handling facilities of <csignal> shall not be used.":                                                                                                                                                                                     437,
	"Violation of MISRA C++:2008 Rule 19-3-1: The error indicator errno shall not be used.":                                                                                                                                                                                                       438,
	"Violation of MISRA C++:2008 Rule 2-10-1: Different identifiers shall be typographically unambiguous.":                                                                                                                                                                                        239,
	"Violation of MISRA C++:2008 Rule 2-10-2: Identifiers declared in an inner scope shall not hide an identifier declared in an outer scope.":                                                                                                                                                    240,
	"Violation of MISRA C++:2008 Rule 2-10-3: A typedef name (including qualification, if any) shall be a unique identifier.":                                                                                                                                                                     241,
	"Violation of MISRA C++:2008 Rule 2-10-4: A class, union or enum name (including qualification, if any) shall be a unique identifier.":                                                                                                                                                        242,
	"Violation of MISRA C++:2008 Rule 2-10-5: The identifier name of a non-member object or function with static storage duration should not be reused.":                                                                                                                                          243,
	"Violation of MISRA C++:2008 Rule 2-10-6: If an identifier refers to a type, it shall not also refer to an object or a function in the same scope.":                                                                                                                                           244,
	"Violation of MISRA C++:2008 Rule 2-13-1: Only those escape sequences that are defined in ISO/IEC 14882:2003 shall be used.":                                                                                                                                                                  245,
	"Violation of MISRA C++:2008 Rule 2-13-2: Octal constants (other than zero) and octal escape sequences (other than \"\\0\") shall not be used.":                                                                                                                                               246,
	"Violation of MISRA C++:2008 Rule 2-13-3: A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type.":                                                                                                                                                     247,
	"Violation of MISRA C++:2008 Rule 2-13-4: Literal suffixes shall be upper case.":                                                                                                                                                                                                              248,
	"Violation of MISRA C++:2008 Rule 2-13-5: Narrow and wide string literals shall not be concatenated.":                                                                                                                                                                                         249,
	"Violation of MISRA C++:2008 Rule 2-2-1: The character set and the corresponding encoding shall be documented.":                                                                                                                                                                               233,
	"Violation of MISRA C++:2008 Rule 2-3-1: Trigraphs shall not be used.":                                                                                                                                                                                                                        234,
	"Violation of MISRA C++:2008 Rule 2-5-1: Digraphs should not be used.":                                                                                                                                                                                                                        235,
	"Violation of MISRA C++:2008 Rule 2-7-1: The character sequence /* shall not be used within a C-style comment.":                                                                                                                                                                               236,
	"Violation of MISRA C++:2008 Rule 2-7-2: Sections of code shall not be \"commented out\" using C-style comments.":                                                                                                                                                                             237,
	"Violation of MISRA C++:2008 Rule 2-7-3: Sections of code should not be \"commented out\" using C++ comments.":                                                                                                                                                                                238,
	"Violation of MISRA C++:2008 Rule 27-0-1: The stream input/output library <cstdio> shall not be used.":                                                                                                                                                                                        439,
	"Violation of MISRA C++:2008 Rule 3-1-1: It shall be possible to include any header file in multiple translation units without violaing the One Definition Rule.":                                                                                                                             250,
	"Violation of MISRA C++:2008 Rule 3-1-2: Functions shall not be declared at block scope.":                                                                                                                                                                                                     251,
	"Violation of MISRA C++:2008 Rule 3-1-3: When an array is declared, its size shall either be stated explicitly or defined implicitly by initialization.":                                                                                                                                      252,
	"Violation of MISRA C++:2008 Rule 3-2-1: All declarations of an object or function shall have compatible types.":                                                                                                                                                                              253,
	"Violation of MISRA C++:2008 Rule 3-2-2: The One Definition Rule shall not be violated.":                                                                                                                                                                                                      254,
	"Violation of MISRA C++:2008 Rule 3-2-3: A type, object or function that is used in multiple translation units shall be declared in one and only one file.":                                                                                                                                   255,
	"Violation of MISRA C++:2008 Rule 3-2-4: An identifier with external linkage shall have exactly one definition.":                                                                                                                                                                              256,
	"Violation of MISRA C++:2008 Rule 3-3-1: Objects or functions with external linkage shall be declared in a header file.":                                                                                                                                                                      257,
	"Violation of MISRA C++:2008 Rule 3-3-2: If a function has internal linkage then all re-declarations shall include the static storage class specifier.":                                                                                                                                       258,
	"Violation of MISRA C++:2008 Rule 3-4-1: An identfier declared to be an object or type shall be defined in a block that minimizes its visibility.":                                                                                                                                            259,
	"Violation of MISRA C++:2008 Rule 3-9-1: The types used for an object, a function return type, or a function parameter shalll be token-for-token identical in all declarations and re-declarations.":                                                                                          260,
	"Violation of MISRA C++:2008 Rule 3-9-2: typedefs that indicate size and signedness should be used in place of the basic numerical types.":                                                                                                                                                    261,
	"Violation of MISRA C++:2008 Rule 3-9-3: The underlying bit representations of floating-point values shall not be used .":                                                                                                                                                                     262,
	"Violation of MISRA C++:2008 Rule 4-10-1: NULL shall not be used as an integer value.":                                                                                                                                                                                                        266,
	"Violation of MISRA C++:2008 Rule 4-10-2: Literal zero (0) shall not be used as the null-pointer-constant":                                                                                                                                                                                    267,
	"Violation of MISRA C++:2008 Rule 4-5-1: Expressions with type bool shall not be used as operands to built-in operators other than the assignment operator =, the logical operators &&, ||, !, the equality operators == and !=, the unary & operator, and the conditional operator.":         263,
	"Violation of MISRA C++:2008 Rule 4-5-2: Expressions with type enum shall not be used as operands to built-in operators other than the subscript operator [ ], the assignment operator =, the equality operators == and !=, the unary & operator, and the relational operators <, <=, >, >=.": 264,
	"Violation of MISRA C++:2008 Rule 4-5-3: Expressions with type (plain) char and wchar_t shall not be used as operands to built-in operators other than the assignment operator =, the equality operators == and !=, and the unary & operator.":                                                265,
	"Violation of MISRA C++:2008 Rule 5-0-10: If the bitwise operators ~ and << are applied to an operand with an underlying type of unsigned char or unsigned short, the result shall be immediately cast to the underlying type of the operand.":                                                277,
	"Violation of MISRA C++:2008 Rule 5-0-11: The plain char type shall only be used for the storage and use of character values.":                                                                                                                                                                278,
	"Violation of MISRA C++:2008 Rule 5-0-12: signed char and unsigned char type shall only be used for the storage and use of numeric values.":                                                                                                                                                   279,
	"Violation of MISRA C++:2008 Rule 5-0-13: The condition of an if-statement and the condition of an iteration-statement shall have type bool.":                                                                                                                                                 280,
	"Violation of MISRA C++:2008 Rule 5-0-14: The first operand of a conditional-operator shall have type bool.":                                                                                                                                                                                  281,
	"Violation of MISRA C++:2008 Rule 5-0-15: Array indexing shall be the only form of pointer arithmetic.":                                                                                                                                                                                       282,
	"Violation of MISRA C++:2008 Rule 5-0-16: A pointer operand and any pointer resulting from pointer arithmetic using that operand shall both address elements of the same array.":                                                                                                              283,
	"Violation of MISRA C++:2008 Rule 5-0-17: Subtraction between pointers shall only be applied to pointers that address elements of the same array.":                                                                                                                                            284,
	"Violation of MISRA C++:2008 Rule 5-0-18: >, >=, <, <= shall not be applied to objects of pointer type, except where they point to the same array.":                                                                                                                                           285,
	"Violation of MISRA C++:2008 Rule 5-0-19: The declaration of objects shall contain no more than two levels of pointer indirection.":                                                                                                                                                           286,
	"Violation of MISRA C++:2008 Rule 5-0-1: The value of an expression shall be the same under any order of evaluation that the standard permits.":                                                                                                                                               268,
	"Violation of MISRA C++:2008 Rule 5-0-20: Non-constant operands to a binary bitwise operator shall have the same underlying type.":                                                                                                                                                            287,
	"Violation of MISRA C++:2008 Rule 5-0-21: Bitwise operators shall only be applied to operands of unsigned underlying type.":                                                                                                                                                                   288,
	"Violation of MISRA C++:2008 Rule 5-0-2: Limited dependence should be placed on C++ operator precedence rules in expressions.":                                                                                                                                                                269,
	"Violation of MISRA C++:2008 Rule 5-0-3: A cvalue expression shall not be implicitly converted to a different underlying type.":                                                                                                                                                               270,
	"Violation of MISRA C++:2008 Rule 5-0-4: An implicit integral conversion shall not change the signedness of the underlying type.":                                                                                                                                                             271,
	"Violation of MISRA C++:2008 Rule 5-0-5: There shall be no implicit floating-integral conversions.":                                                                                                                                                                                           272,
	"Violation of MISRA C++:2008 Rule 5-0-6: An implicit integral or floating-point conversion shall not reduce the size of the underlying type.":                                                                                                                                                 273,
	"Violation of MISRA C++:2008 Rule 5-0-7: There shall be no explicit floating-integral conversions of a cvalue expression.":                                                                                                                                                                    274,
	"Violation of MISRA C++:2008 Rule 5-0-8: An explicit integral or floating-point conversion shall not increase the size of the underlying type of a cvalue expression.":                                                                                                                        275,
	"Violation of MISRA C++:2008 Rule 5-0-9: An explicit integral conversion shall not change the signedness of the underlying type of a cvalue expression.":                                                                                                                                      276,
	"Violation of MISRA C++:2008 Rule 5-14-1: The right hand operand of a logical && or || operator shall not contain side effects.":                                                                                                                                                              306,
	"Violation of MISRA C++:2008 Rule 5-17-1: The semantic equivalence between a binary operator and its asignment operator form shall be preserved.":                                                                                                                                             307,
	"Violation of MISRA C++:2008 Rule 5-18-1: The comma operator shall not be used.":                                                                                                                                                                                                              308,
	"Violation of MISRA C++:2008 Rule 5-19-1: Evaluation of constant unsigned integer expressions should not lead to wrap-around.":                                                                                                                                                                309,
	"Violation of MISRA C++:2008 Rule 5-2-10: The increment (++) and decrement (--) operators should not be mixed with other operators in an exression.":                                                                                                                                          298,
	"Violation of MISRA C++:2008 Rule 5-2-11: The comma operator, && operator and the || operator shall not be overloaded.":                                                                                                                                                                       299,
	"Violation of MISRA C++:2008 Rule 5-2-12: An identifier with array type passed as a function argument shall not decay to a pointer.":                                                                                                                                                          300,
	"Violation of MISRA C++:2008 Rule 5-2-1: Each operand of a logical && or | | shall be a postfix-expression.":                                                                                                                                                                                  289,
	"Violation of MISRA C++:2008 Rule 5-2-2: A pointer to a virtual base class shall only be cast to a pointer to a derived class by means of dynamic_cast.":                                                                                                                                      290,
	"Violation of MISRA C++:2008 Rule 5-2-3: Casts from a base class to a derived class should not be performed on polymorphic types.":                                                                                                                                                            291,
	"Violation of MISRA C++:2008 Rule 5-2-4: C-style casts (other than void casts) and functional notation casts (other than explicit constructor call) shall not be used.":                                                                                                                       292,
	"Violation of MISRA C++:2008 Rule 5-2-5: A cast shall not remove any const or volatile qualification from the type of a pointer or reference.":                                                                                                                                                293,
	"Violation of MISRA C++:2008 Rule 5-2-6: A cast shall not convert a pointer to a function to any other pointer type, including a pointer to function type.":                                                                                                                                   294,
	"Violation of MISRA C++:2008 Rule 5-2-7: An object with pointer type shall not be converted to an unrelated pointer type, either directly or indirectly.":                                                                                                                                     295,
	"Violation of MISRA C++:2008 Rule 5-2-8: An object with integer type or pointer to void type shall not be converted to an object with poiner type.":                                                                                                                                           296,
	"Violation of MISRA C++:2008 Rule 5-2-9: A cast should not convert a pointer type to an integral type.":                                                                                                                                                                                       297,
	"Violation of MISRA C++:2008 Rule 5-3-1: Each operand of the ! operator, the logical && or the logical operators shall have type bool.":                                                                                                                                                       301,
	"Violation of MISRA C++:2008 Rule 5-3-2: The unary minus operator shall not be applied to an expression whose underlying type is unsigned.":                                                                                                                                                   302,
	"Violation of MISRA C++:2008 Rule 5-3-3: The unary & operator shall not be overloaded.":                                                                                                                                                                                                       303,
	"Violation of MISRA C++:2008 Rule 5-3-4: Evaluation of the operand to the sizeof operator shall not contain side effects.":                                                                                                                                                                    304,
	"Violation of MISRA C++:2008 Rule 5-8-1: The right hand operand of a shift operator shall lie between zero and one less than the width in bits of the underlying type of the left hand operand.":                                                                                              305,
	"Violation of MISRA C++:2008 Rule 6-2-1: Assignment operators shall not be used in sub-expressions.":                                                                                                                                                                                          310,
	"Violation of MISRA C++:2008 Rule 6-2-2: Floating-point expressions shall not be directly or indirectly tested for equality or inequality.":                                                                                                                                                   311,
	"Violation of MISRA C++:2008 Rule 6-2-3: Before preprocessing, a null statement shall only occur on a line by itself; it may be followed by a comment, provided that the first character following the null statement is a white-space character.":                                            312,
	"Violation of MISRA C++:2008 Rule 6-3-1: The statement forming the body of a switch, while, do ... while or for statement shall be a compound statement.":                                                                                                                                     313,
	"Violation of MISRA C++:2008 Rule 6-4-1: An if (condition) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement.":                                                                                  314,
	"Violation of MISRA C++:2008 Rule 6-4-2: All if ... else if constructs shall be terminated with an else clause.":                                                                                                                                                                              315,
	"Violation of MISRA C++:2008 Rule 6-4-3: A switch statement shall be a well-formed switch statement.":                                                                                                                                                                                         316,
	"Violation of MISRA C++:2008 Rule 6-4-4: A switch-label shall only be used when the most closely-enclosing compound statement is the body of a switch statement.":                                                                                                                             317,
	"Violation of MISRA C++:2008 Rule 6-4-5: An unconditional throw or break statement shall terminate every non-empty switch-clause.":                                                                                                                                                            318,
	"Violation of MISRA C++:2008 Rule 6-4-6: The final clause of a switch statement shall be the default-clause.":                                                                                                                                                                                 319,
	"Violation of MISRA C++:2008 Rule 6-4-7: The condition of a switch statement shall not have bool type.":                                                                                                                                                                                       320,
	"Violation of MISRA C++:2008 Rule 6-4-8: Every switch statement shall have at least one case-clause,":                                                                                                                                                                                         321,
	"Violation of MISRA C++:2008 Rule 6-5-1: A for loop shall contain a single loop-counter which shall not have floating type.":                                                                                                                                                                  322,
	"Violation of MISRA C++:2008 Rule 6-5-2: If loop-counter is not modified by -- or ++, then, within condition, the loop-counter shall only be used as an operand to <=, <, > or >=.":                                                                                                           323,
	"Violation of MISRA C++:2008 Rule 6-5-3: The loop-counter shall not be modified within statement.":                                                                                                                                                                                            324,
	"Violation of MISRA C++:2008 Rule 6-5-4: The loop-counter shall be modified by one of: --, ++,-=n, or +=n; where n remains constant for the duration of the loop.":                                                                                                                            325,
	"Violation of MISRA C++:2008 Rule 6-5-5: A loop-control-variable other than the loop-counter shall not be modified within condition or expression.":                                                                                                                                           326,
	"Violation of MISRA C++:2008 Rule 6-5-6: A loop-control-variable other than the loop-counter which is modified in statement shall have type bool.":                                                                                                                                            327,
	"Violation of MISRA C++:2008 Rule 6-6-1: Any label referenced by a goto statement shall be declared in the same block, or in a block enclosing the goto statement.":                                                                                                                           328,
	"Violation of MISRA C++:2008 Rule 6-6-2: The goto statement shall jump to a label declared later in the same function body.":                                                                                                                                                                  329,
	"Violation of MISRA C++:2008 Rule 6-6-3: The continue statement shall only be used within a well-formed for loop.":                                                                                                                                                                            330,
	"Violation of MISRA C++:2008 Rule 6-6-4: For any iteration statement there shall be no more than one break or goto statement used for loop termination.":                                                                                                                                      331,
	"Violation of MISRA C++:2008 Rule 6-6-5: A function shall have a single point of exit at the end of the function.":                                                                                                                                                                            332,
	"Violation of MISRA C++:2008 Rule 7-1-1: A variable which is not modified shall be const qualified.":                                                                                                                                                                                          333,
	"Violation of MISRA C++:2008 Rule 7-1-2: A pointer or reference parameter in a function shall be declared as pointer to const or reference to const if the corresponding object is not modified.":                                                                                             334,
	"Violation of MISRA C++:2008 Rule 7-2-1: An expression with enum underlying type shall only have values corresponding to the enumerators of the enumeration.":                                                                                                                                 335,
	"Violation of MISRA C++:2008 Rule 7-3-1: The global namespace shall only contain main, namespace declarations and extern \"C\" declarations.":                                                                                                                                                 336,
	"Violation of MISRA C++:2008 Rule 7-3-2: The identifier main shall not be used for a function other than the global function main.":                                                                                                                                                           337,
	"Violation of MISRA C++:2008 Rule 7-3-3: There shall be no unnamed namespaces in header files.":                                                                                                                                                                                               338,
	"Violation of MISRA C++:2008 Rule 7-3-4: using-directives shall not be used.":                                                                                                                                                                                                                 339,
	"Violation of MISRA C++:2008 Rule 7-3-5: Multiple declarations for an identifier in the same namespace shall not straddle a using-declaration for that idenifier.":                                                                                                                            340,
	"Violation of MISRA C++:2008 Rule 7-3-6: using-directives and using-declarations (excluding class scope or function scope using-declarations) shall not be used in header files.":                                                                                                             341,
	"Violation of MISRA C++:2008 Rule 7-4-1: All usage of assembler shall be documented.":                                                                                                                                                                                                         342,
	"Violation of MISRA C++:2008 Rule 7-4-2: Assembler instructions shall only be introduced using the asm declaration.":                                                                                                                                                                          343,
	"Violation of MISRA C++:2008 Rule 7-4-3: Assembly language shall be encapsulated and isolated.":                                                                                                                                                                                               344,
	"Violation of MISRA C++:2008 Rule 7-5-1: A function shall not return a reference or a pointer to an automatic variable (including parameters) defined within the function.":                                                                                                                   345,
	"Violation of MISRA C++:2008 Rule 7-5-2: The address of an object with automatic storage shall not be assigned to another object that may persist after the first object has ceased to exist.":                                                                                                346,
	"Violation of MISRA C++:2008 Rule 7-5-3: A function shall not return a reference or a pointer to a parameter that is passed by reference or const reference.":                                                                                                                                 347,
	"Violation of MISRA C++:2008 Rule 7-5-4: Functions should not call themselves, either directly or indirectly.":                                                                                                                                                                                348,
	"Violation of MISRA C++:2008 Rule 8-0-1: An init-declarator-list or a member-declarator-list shall consist of a single init-declarator or member-declarator respectively.":                                                                                                                    349,
	"Violation of MISRA C++:2008 Rule 8-3-1: Parameters in an overriding virtual function shall either use the same default arguments as the function they ovrride, or else shall not specify any default arguments.":                                                                             350,
	"Violation of MISRA C++:2008 Rule 8-4-1: Functions shall not be defined using the ellipsis notation.":                                                                                                                                                                                         351,
	"Violation of MISRA C++:2008 Rule 8-4-2: The identifiers used for the parameters in a re-declaration of a function shall be identical to those in the declaration.":                                                                                                                           352,
	"Violation of MISRA C++:2008 Rule 8-4-3: All exit paths from a function with non-void return type shall have an explicit return statement with an expression.":                                                                                                                                353,
	"Violation of MISRA C++:2008 Rule 8-4-4: A function identifier shall either be used to call the function or it shall be preceded by &.":                                                                                                                                                       354,
	"Violation of MISRA C++:2008 Rule 8-5-1: All variables shall have a defined value before they are used.":                                                                                                                                                                                      355,
	"Violation of MISRA C++:2008 Rule 8-5-2: Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures.":                                                                                                                                   356,
	"Violation of MISRA C++:2008 Rule 8-5-3: In an enumerator list, the = construct shall not be used to explicitly initialize members other than the first, unless all items are explicitly initialized.":                                                                                        357,
	"Violation of MISRA C++:2008 Rule 9-3-1: const member functions shall not return non-const pointers or references to class-data.":                                                                                                                                                             358,
	"Violation of MISRA C++:2008 Rule 9-3-2: Member functions shall not return non-const handles to class-data.":                                                                                                                                                                                  359,
	"Violation of MISRA C++:2008 Rule 9-3-3: If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const.":                                                                                                                360,
	"Violation of MISRA C++:2008 Rule 9-5-1: Unions shall not be used.":                                                                                                                                                                                                                           361,
	"Violation of MISRA C++:2008 Rule 9-6-1: When the absolute positioning of bits representing a bit-field is required, then the behaviour and packing of bit-fields shall be documented.":                                                                                                       362,
	"Violation of MISRA C++:2008 Rule 9-6-2: Bit-fields shall be either bool type or an explicitly unsigned or signed integral type.":                                                                                                                                                             363,
	"Violation of MISRA C++:2008 Rule 9-6-3: Bit-fields shall not have enum type.":                                                                                                                                                                                                                364,
	"Violation of MISRA C++:2008 Rule 9-6-4: Named bit-fields with signed integer type shall have a length of more than one bit.":                                                                                                                                                                 365,
	"Writing CTU information completed [%s]":                                                     456,
	"[C0101][misra-c2012-20.14]: violation of misra-c2012-20.14":                                 169,
	"[C0102][misra-c2012-20.13]: violation of misra-c2012-20.13":                                 168,
	"[C0103][misra-c2012-20.12]: violation of misra-c2012-20.12":                                 167,
	"[C0104][misra-c2012-20.11]: violation of misra-c2012-20.11":                                 166,
	"[C0105][misra-c2012-20.10]: violation of misra-c2012-20.10":                                 165,
	"[C0106][misra-c2012-20.9]: violation of misra-c2012-20.9":                                   164,
	"[C0107][misra-c2012-20.8]: violation of misra-c2012-20.8":                                   163,
	"[C0108][misra-c2012-20.7]: violation of misra-c2012-20.7":                                   162,
	"[C0109][misra-c2012-20.6]: violation of misra-c2012-20.6":                                   161,
	"[C0110][misra-c2012-20.5]: violation of misra-c2012-20.5":                                   160,
	"[C0111][misra-c2012-20.4]: violation of misra-c2012-20.4":                                   159,
	"[C0112][misra-c2012-20.3]: violation of misra-c2012-20.3":                                   158,
	"[C0113][misra-c2012-20.2]: violation of misra-c2012-20.2":                                   157,
	"[C0114][misra-c2012-20.1]: violation of misra-c2012-20.1":                                   156,
	"[C0201][misra-c2012-22.10]: violation of misra-c2012-22.10\n%s":                             202,
	"[C0202][misra-c2012-22.9]: violation of misra-c2012-22.9\n%s":                               201,
	"[C0203][misra-c2012-22.8]: violation of misra-c2012-22.8\n%s":                               200,
	"[C0204][misra-c2012-22.7]: violation of misra-c2012-22.7\n%s":                               199,
	"[C0205][misra-c2012-22.6]: violation of misra-c2012-22.6\n%s":                               198,
	"[C0206][misra-c2012-22.5]: violation of misra-c2012-22.5\n%s":                               197,
	"[C0207][misra-c2012-22.4]: violation of misra-c2012-22.4\n%s":                               196,
	"[C0208][misra-c2012-22.3]: violation of misra-c2012-22.3\n%s":                               195,
	"[C0209][misra-c2012-22.2]: violation of misra-c2012-22.2\n%s":                               194,
	"[C0210][misra-c2012-22.1]: violation of misra-c2012-22.1\n%s":                               193,
	"[C0301][misra-c2012-19.2]: violation of misra-c2012-19.2":                                   155,
	"[C0302][misra-c2012-19.1]: violation of misra-c2012-19.1, assign or copy is overlapped\n":   153,
	"[C0302][misra-c2012-19.1]: violation of misra-c2012-19.1, assign or copy is overlapped\n%s": 154,
	"[C0401][misra-c2012-21.20]: violation of misra-c2012-21.20\n%s":                             191,
	"[C0402][misra-c2012-21.19]: the return value of function is assigned to non-const qualified type\nsource pointer object type: %s\ndestination object type: %s\nLocation: %s": 189,
	"[C0402][misra-c2012-21.19]: violation of misra-c2012-21.19\n%s":                                                                                    190,
	"[C0403][misra-c2012-21.18]: size_t value invalid as function argument.\nsource pointer object type: %s\ndestination object type: %s\nLocation: %s": 187,
	"[C0403][misra-c2012-21.18]: violation of misra-c2012-21.18\n%s":                                                                                    188,
	"[C0404][misra-c2012-21.17]: The cstring function call may cause read or write out of bound.\n%s":                                                   186,
	"[C0405][misra-c2012-21.16]: violation of misra-c2012-21.16":                                                                                        185,
	"[C0406][misra-c2012-21.15]: violation of misra-c2012-21.15":                                                                                        184,
	"[C0407][misra-c2012-21.14]: violation of misra-c2012-21.14\n%s":                                                                                    183,
	"[C0408][misra-c2012-21.13]: violation of misra-c2012-21.13\n%s":                                                                                    182,
	"[C0409][misra-c2012-21.12]: violation of misra-c2012-21.12":                                                                                        181,
	"[C0410][misra-c2012-21.11]: violation of misra-c2012-21.11":                                                                                        180,
	"[C0411][misra-c2012-21.10]: violation of misra-c2012-21.10":                                                                                        179,
	"[C0412][misra-c2012-21.9]: violation of misra-c2012-21.9":                                                                                          178,
	"[C0413][misra-c2012-21.8]: violation of misra-c2012-21.8":                                                                                          177,
	"[C0414][misra-c2012-21.7]: violation of misra-c2012-21.7":                                                                                          176,
	"[C0415][misra-c2012-21.6]: violation of misra-c2012-21.6":                                                                                          175,
	"[C0416][misra-c2012-21.5]: violation of misra-c2012-21.5":                                                                                          174,
	"[C0417][misra-c2012-21.4]: violation of misra-c2012-21.4":                                                                                          173,
	"[C0418][misra-c2012-21.3]: violation of misra-c2012-21.3":                                                                                          172,
	"[C0419][misra-c2012-21.2]: violation of misra-c2012-21.2":                                                                                          171,
	"[C0420][misra-c2012-21.1]: violation of misra-c2012-21.1":                                                                                          170,
	"[C0421][misra-c2012-21.21]: violation of misra-c2012-21.21":                                                                                        192,
	"[C0501][misra-c2012-8.14]: violation of misra-c2012-8.14":                                                                                          64,
	"[C0503][misra-c2012-8.12]: violation of misra-c2012-8.12":                                                                                          63,
	"[C0504][misra-c2012-8.11]: violation of misra-c2012-8.11":                                                                                          62,
	"[C0505][misra-c2012-8.10]: violation of misra-c2012-8.10":                                                                                          61,
	"[C0506][misra-c2012-8.9]: violation of misra-c2012-8.9":                                                                                            60,
	"[C0507][misra-c2012-8.8]: violation of misra-c2012-8.8":                                                                                            59,
	"[C0508][misra-c2012-8.7]: violation of misra-c2012-8.7\nExtern function or variable is only called at one translation unit\nfunction name: %s\nlocation: %s":                58,
	"[C0509][misra-c2012-8.6]: error duplicated definition\nduplicated variable name: %s\nfirst definition location: %s\nduplicated definition location: %s":                     57,
	"[C0510][misra-c2012-8.5]: External function shall be declared in one header file.\nName: %s\nLocation: %s":                                                                  54,
	"[C0510][misra-c2012-8.5]: External function shall be declared once in one and only one file.\nName: %s\nLocation: %s\nOther Location: %s":                                   56,
	"[C0510][misra-c2012-8.5]: External object shall be declared in one header file.\n, Name: %s\n, Location: %s":                                                                53,
	"[C0510][misra-c2012-8.5]: External object shall be declared once in one and only one file.\nName: %s\nLocation: %s\nOther Location: %s":                                     55,
	"[C0511][misra-c2012-8.4]: violation of misra-c2012-8.4\nFunction declaration and definition type do not match\nfunction name: %s\ndefinition location: %s":                  52,
	"[C0511][misra-c2012-8.4]: violation of misra-c2012-8.4\nMissing function declaration\nfunction name: %s\nlocation: %s":                                                      50,
	"[C0511][misra-c2012-8.4]: violation of misra-c2012-8.4\nMissing variable declaration\nvariable name: %s\nlocation: %s":                                                      51,
	"[C0512][misra-c2012-8.3]: violation of misra-c2012-8.3\nName: %s":                                                                                                           48,
	"[C0512][misra-c2012-8.3]: violation of misra-c2012-8.3\nName: %s\nLocation: %s\nOther location: %s":                                                                         49,
	"[C0513][misra-c2012-8.2]: function types shall be in prototype form with named parameters\nK&R style is fobidden.\nfunction name: %s":                                       46,
	"[C0513][misra-c2012-8.2]: function types shall be in prototype form with named parameters\nMissing 'void'.\nfunction name: %s":                                              47,
	"[C0513][misra-c2012-8.2]: function types shall be in prototype form with named parameters\nfunction pointer with unnamed parameter.":                                        45,
	"[C0513][misra-c2012-8.2]: function types shall be in prototype form with named parameters\nunnamed parameter.\nfunction name: %s":                                           44,
	"[C0514][misra-c2012-8.1]: violation of misra-c2012-8.1\n%s":                                                                                                                 43,
	"[C0601][misra-c2012-12.5]: violation of misra-c2012-12.5":                                                                                                                   97,
	"[C0602][misra-c2012-12.4]: violation of misra-c2012-12.4":                                                                                                                   96,
	"[C0603][misra-c2012-12.3]: violation of misra-comma operator should not be used":                                                                                            95,
	"[C0604][misra-c2012-12.2]: violation of misra-c2012-12.2\n%s":                                                                                                               94,
	"[C0605][misra-c2012-12.1]: violation of misra-c2012-12.1":                                                                                                                   93,
	"[C0701][misra-c2012-6.2]: violation of misra-c2012-6.2":                                                                                                                     36,
	"[C0702][misra-c2012-6.1]: violation of misra-c2012-6.1":                                                                                                                     35,
	"[C0801][misra-c2012-10.8]: violation of misra-c2012-10.8":                                                                                                                   77,
	"[C0802][misra-c2012-10.7]: violation of misra-c2012-10.7":                                                                                                                   76,
	"[C0803][misra-c2012-10.6]: violation of misra-c2012-10.6":                                                                                                                   75,
	"[C0804][misra-c2012-10.5]: violation of misra-c2012-10.5":                                                                                                                   74,
	"[C0805][misra-c2012-10.4]: violation of misra-c2012-10.4":                                                                                                                   73,
	"[C0806][misra-c2012-10.3]: violation of misra-c2012-10.3":                                                                                                                   72,
	"[C0807][misra-c2012-10.2]: violation of misra-c2012-10.2":                                                                                                                   71,
	"[C0808][misra-c2012-10.1]: violation of misra-c2012-10.1":                                                                                                                   70,
	"[C0901][misra-c2012-7.4]: Assignment violation of misra-c2012-7.4\ntry to assign string literal to object with improper type\nLocation: %s":                                 41,
	"[C0901][misra-c2012-7.4]: violation of misra-c2012-7.4":                                                                                                                     40,
	"[C0901][misra-c2012-7.4]: violation of misra-c2012-7.4\n%s":                                                                                                                 42,
	"[C0902][misra-c2012-7.3]: violation of misra-c2012-7.3":                                                                                                                     39,
	"[C0903][misra-c2012-7.2]: violation of misra-c2012-7.2":                                                                                                                     38,
	"[C0904][misra-c2012-7.1]: violation of misra-c2012-7.1":                                                                                                                     37,
	"[C1001][misra-c2012-4.2]: violation of misra-c2012-4.2":                                                                                                                     23,
	"[C1002][misra-c2012-4.1]: violation of misra-c2012-4.1":                                                                                                                     22,
	"[C1101][misra-c2012-5.9]: %s with internal linkage shall be unique\nName: %s\nLocation: %s\nOther location: %s":                                                             34,
	"[C1102][misra-c2012-5.8]: %s with external linkage shall be unique\nName: %s\nLocation: %s\nOther location: %s":                                                             33,
	"[C1103][misra-c2012-5.7]: error tag name is not unique\nDuplicated tag name: %s\nFirst identifier location: %s\nDuplicated identifier location: %s":                         31,
	"[C1103][misra-c2012-5.7]: error tag name is not unique\nInvalid declaration: at %s":                                                                                         32,
	"[C1104][misra-c2012-5.6]: violation of misra-c2012-5.6\nTypedef: %s\nFirst typedef location: %s\nDuplicated typedef location: %s":                                           30,
	"[C1105][misra-c2012-5.5]: violation of misra-c2012-5.5":                                                                                                                     29,
	"[C1106][misra-c2012-5.4]: violation of misra-c2012-5.4":                                                                                                                     28,
	"[C1107][misra-c2012-5.3]: violation of misra-c2012-5.3":                                                                                                                     27,
	"[C1108][misra-c2012-5.2]: violation of misra-c2012-5.2":                                                                                                                     26,
	"[C1109][misra-c2012-5.1]: violation of misra-c2012-5.1\n%s: %s\nFirst identifier location: %s\nDuplicated identifier location: %s":                                          25,
	"[C1109][misra-c2012-5.1]: violation of misra-contain non-ASCII characters\n%s: %s":                                                                                          24,
	"[C1201][misra-c2012-9.5]: violation of misra-c2012-9.5":                                                                                                                     69,
	"[C1202][misra-c2012-9.4]: violation of misra-c2012-9.4":                                                                                                                     68,
	"[C1203][misra-c2012-9.3]: violation of misra-c2012-9.3":                                                                                                                     67,
	"[C1204][misra-c2012-9.2]: violation of misra-c2012-9.2":                                                                                                                     66,
	"[C1205][misra-c2012-9.1]: violation of misra-c2012-9.1\n%s":                                                                                                                 65,
	"[C1301][misra-c2012-18.8]: violation of misra-c2012-18.8":                                                                                                                   152,
	"[C1302][misra-c2012-18.7]: violation of misra-c2012-18.7":                                                                                                                   151,
	"[C1303][misra-c2012-18.6]: violation of misra-c2012-18.6\n%s":                                                                                                               150,
	"[C1304][misra-c2012-18.5]: violation of misra-c2012-18.5":                                                                                                                   149,
	"[C1305][misra-c2012-18.4]: violation of misra-c2012-18.4":                                                                                                                   148,
	"[C1306][misra-c2012-18.3]: violation of misra-c2012-18.3\n%s":                                                                                                               147,
	"[C1307][misra-c2012-18.2]: violation of misra-c2012-18.2\n%s":                                                                                                               146,
	"[C1308][misra-c2012-18.1]: Pointer arithmetic may cause array out of bound.\n%s":                                                                                            145,
	"[C1401][misra-c2012-11.9]: violation of misra-c2012-11.9":                                                                                                                   92,
	"[C1402][misra-c2012-11.8]: violation of misra-conversions violation of misra-c2012-11.8\nsource pointer object type: %s\ndestination pointer object type: %s":               91,
	"[C1403][misra-c2012-11.7]: violation of misra-conversions violation of misra-c2012-11.7\n%s":                                                                                90,
	"[C1403][misra-c2012-11.7]: violation of misra-conversions violation of misra-c2012-11.7\nsource type: %s\ndestination type: %s\nLocation: %s":                               89,
	"[C1404][misra-c2012-11.6]: violation of misra-conversions violation of misra-c2012-11.6\n%s":                                                                                88,
	"[C1404][misra-c2012-11.6]: violation of misra-conversions violation of misra-c2012-11.6\nsource object type: %s\ndestination object type: %s\nLocation: %s":                 87,
	"[C1405][misra-c2012-11.5]: violation of misra-c2012-11.5":                                                                                                                   85,
	"[C1405][misra-c2012-11.5]: violation of misra-conversions violation of misra-c2012-11.5\nsource pointer object type: %s\ndestination pointer object type: %s\nLocation: %s": 86,
	"[C1406][misra-c2012-11.4]: violation of misra-c2012-11.4":                                                                                                                   82,
	"[C1406][misra-c2012-11.4]: violation of misra-conversions violation of misra-c2012-11.4\nsource pointer object type: %s\ndestination type: %s\nLocation: %s":                84,
	"[C1406][misra-c2012-11.4]: violation of misra-conversions violation of misra-c2012-11.4\nsource type: %s\ndestination pointer object type: %s\nLocation: %s":                83,
	"[C1407][misra-c2012-11.3]: violation of misra-conversions violation of misra-c2012-11.3\nsource pointer object type: %s\ndestination pointer object type: %s\nLocation: %s": 81,
	"[C1408][misra-c2012-11.2]: violation of misra-conversions violation of misra-c2012-11.2\nsource pointer object type: %s\ndestination pointer object type: %s\nLocation: %s": 80,
	"[C1409][misra-c2012-11.1]: violation of misra-conversions violation of misra-c2012-11.1\n%s":                                                                                79,
	"[C1409][misra-c2012-11.1]: violation of misra-conversions violation of misra-c2012-11.1\nsource type: %s\ndestination type: %s\nLocation: %s":                               78,
	"[C1501][misra-c2012-17.8]: parameters should not be modified":                                                                                                               144,
	"[C1501][misra-c2012-17.8]: violation of misra-c2012-17.8":                                                                                                                   143,
	"[C1502][misra-c2012-17.7]: violation of misra-c2012-17.7":                                                                                                                   142,
	"[C1503][misra-c2012-17.6]: violation of misra-c2012-17.6":                                                                                                                   141,
	"[C1504][misra-c2012-17.5]: argument with improper array size used for parameter with array type":                                                                            139,
	"[C1504][misra-c2012-17.5]: null pointer argument used for parameter with array type":                                                                                        138,
	"[C1504][misra-c2012-17.5]: violation of misra-c2012-17.5\n%s":                                                                                                               140,
	"[C1505][misra-c2012-17.4]: violation of misra-c2012-17.4":                                                                                                                   136,
	"[C1505][misra-c2012-17.4]: violation of rule_17_4\n%s":                                                                                                                      137,
	"[C1506][misra-c2012-17.3]: implicit declaration of function\nfunction name: %s\ncall location: %s":                                                                          135,
	"[C1507][misra-c2012-17.2]: violation of misra-c2012-17.2\n%s":                                                                                                               134,
	"[C1507][misra-c2012-17.2]: violation of misra-c2012-17.2\nfound a recursive chain %s":                                                                                       133,
	"[C1508][misra-c2012-17.1]: violation of misra-c2012-17.1":                                                                                                                   132,
	"[C1601][misra-c2012-13.6]: violation of misra-c2012-13.6":                                                                                                                   106,
	"[C1602][misra-c2012-13.5]: Right hand operand may have persistent side effect, Location: %s":                                                                                104,
	"[C1602][misra-c2012-13.5]: violation of misra-c2012-13.5\nFunction %s may have persistent side effect":                                                                      105,
	"[C1603][misra-c2012-13.4]: Result of assignment operator should not be used":                                                                                                102,
	"[C1603][misra-c2012-13.4]: violation of rule_13_4\n%s":                                                                                                                      103,
	"[C1604][misra-c2012-13.3]: expression has more than one side effects":                                                                                                       101,
	"[C1605][misra-c2012-13.2]: multiple related functions should not be called in the same expression":                                                                          99,
	"[C1605][misra-c2012-13.2]: violation of misra-c2012-13.2\n%s":                                                                                                               100,
	"[C1606][misra-c2012-13.1]: Init list has volatile referenced member":                                                                                                        98,
	"[C1701][misra-c2012-14.4]: violation of misra-c2012-14.4":                                                                                                                   117,
	"[C1702][misra-c2012-14.3]: violation of misra-c2012-14.3":                                                                                                                   115,
	"[C1702][misra-c2012-14.3]: violation of misra-c2012-14.3\n%s":                                                                                                               116,
	"[C1703][misra-c2012-14.2]: %s clause in for loop may have persistent side effect":                                                                                           109,
	"[C1703][misra-c2012-14.2]: %s clause should set and only set the value of loop counter":                                                                                     113,
	"[C1703][misra-c2012-14.2]: %s clause uses reference '%s' modified in loop body":                                                                                             112,
	"[C1703][misra-c2012-14.2]: loop counter '%s' is modified in loop body":                                                                                                      111,
	"[C1703][misra-c2012-14.2]: loop counter '%s' is not used in %s clause":                                                                                                      110,
	"[C1703][misra-c2012-14.2]: second clause uses non-boolean control flag":                                                                                                     114,
	"[C1704][misra-c2012-14.1]: loop counter cannot be float":                                                                                                                    107,
	"[C1704][misra-c2012-14.1]: violation of misra-c2012-14.1\n%s":                                                                                                               108,
	"[C1801][misra-c2012-15.7]: violation of misra-c2012-15.7":                                                                                                                   124,
	"[C1802][misra-c2012-15.6]: violation of misra-c2012-15.6":                                                                                                                   123,
	"[C1803][misra-c2012-15.5]: violation of misra-c2012-15.5":                                                                                                                   122,
	"[C1804][misra-c2012-15.4]: violation of misra-c2012-15.4":                                                                                                                   121,
	"[C1805][misra-c2012-15.3]: violation of misra-c2012-15.3":                                                                                                                   120,
	"[C1806][misra-c2012-15.2]: violation of misra-c2012-15.2":                                                                                                                   119,
	"[C1807][misra-c2012-15.1]: violation of misra-c2012-15.1":                                                                                                                   118,
	"[C1901][misra-c2012-16.7]: violation of misra-c2012-16.7":                                                                                                                   131,
	"[C1902][misra-c2012-16.6]: violation of misra-c2012-16.6":                                                                                                                   130,
	"[C1903][misra-c2012-16.5]: violation of misra-c2012-16.5":                                                                                                                   129,
	"[C1904][misra-c2012-16.4]: violation of misra-c2012-16.4":                                                                                                                   128,
	"[C1905][misra-c2012-16.3]: violation of misra-c2012-16.3":                                                                                                                   127,
	"[C1906][misra-c2012-16.2]: violation of misra-c2012-16.2":                                                                                                                   126,
	"[C1907][misra-c2012-16.1]: violation of misra-c2012-16.1":                                                                                                                   125,
	"[C2001][misra-c2012-2.7]: violation of misra-c2012-2.7":                                                                                                                     19,
	"[C2002][misra-c2012-2.6]: violation of misra-c2012-2.6":                                                                                                                     18,
	"[C2003][misra-c2012-2.5]: violation of misra-c2012-2.5":                                                                                                                     17,
	"[C2004][misra-c2012-2.4]: violation of misra-c2012-2.4":                                                                                                                     16,
	"[C2005][misra-c2012-2.3]: violation of misra-c2012-2.3\nunused typedef name: %s":                                                                                            15,
	"[C2006][misra-c2012-2.2]: A call to empty function is dead code":                                                                                                            13,
	"[C2006][misra-c2012-2.2]: violation of misra-c2012-2.2\n%s":                                                                                                                 14,
	"[C2007][misra-c2012-2.1]: violation of misra-c2012-2.1\n%s":                                                                                                                 12,
	"[C2101][misra-c2012-3.2]: violation of misra-c2012-3.2":                                                                                                                     21,
	"[C2102][misra-c2012-3.1]: violation of misra-c2012-3.1":                                                                                                                     20,
	"[C2201][misra-c2012-1.1]: violation of misra-c2012-1.1\n%s%s%s":                                                                                                             9,
	"[C2203][misra-c2012-1.3]: violation of misra-c2012-1.3\n%s":                                                                                                                 10,
	"[C2204][misra-c2012-1.4]: violation of misra-c2012-1.4":                                                                                                                     11,
	"[C2306][misra-c2012-dir-4.3]: assembly code should be encapsulated":                                                                                                         204,
	"[C2306][misra-c2012-dir-4.3]: assembly code should be isolated":                                                                                                             203,
	"[C2310][misra-c2012-dir-4.7]: error should be tested":                                                                                                                       205,
	"[C2313][misra-c2012-dir-4.10]: %s and %s has same file identifier":                                                                                                          207,
	"[C2313][misra-c2012-dir-4.10]: %s has no precaution":                                                                                                                        206,
	"[C2314][misra-c2012-dir-4.11]: violation of misra-c2012-dir-4.11\n%s":                                                                                                       208,
	"[C2315][misra-c2012-dir-4.12]: dynamic allocation should not be used":                                                                                                       209,
	"[C2317][misra-c2012-dir-4.14]: violation of misra-c2012-dir-4.14\n%s":                                                                                                       210,
	"[C7966][NAIVESYSTEMS_C7966]: violation of NAIVESYSTEMS_C7966\n%s":                                                                                                           211,
}

var enIndex = []uint32{ // 458 elements
	// Entry 0 - 1F
	0x00000000, 0x00000027, 0x0000004a, 0x0000006a,
	0x00000096, 0x000000b5, 0x000000d1, 0x000000f9,
	0x00000121, 0x0000015a, 0x0000026a, 0x000002fb,
	0x00000366, 0x000003d8, 0x0000045d, 0x000004be,
	0x0000054b, 0x000005be, 0x00000633, 0x000006a9,
	0x00000719, 0x0000079c, 0x00000809, 0x00000882,
	0x000008dd, 0x00000970, 0x00000a0b, 0x00000a91,
	0x00000b30, 0x00000b92, 0x00000bff, 0x00000ca3,
	// Entry 20 - 3F
	0x00000d43, 0x00000dc8, 0x00000e93, 0x00000f5f,
	0x00000fd8, 0x00001050, 0x000010b0, 0x00001155,
	0x000011d5, 0x00001285, 0x00001349, 0x00001400,
	0x00001469, 0x00001517, 0x00001595, 0x00001643,
	0x000016e6, 0x0000179a, 0x00001873, 0x0000195e,
	0x00001a49, 0x00001b3a, 0x00001c04, 0x00001cd0,
	0x00001d91, 0x00001e54, 0x00001f28, 0x00002010,
	0x000020c7, 0x00002164, 0x000021e7, 0x00002280,
	// Entry 40 - 5F
	0x00002325, 0x00002393, 0x00002438, 0x000024bc,
	0x00002524, 0x000025a2, 0x00002658, 0x000026d1,
	0x00002784, 0x0000284b, 0x0000290c, 0x0000299d,
	0x00002a3e, 0x00002b31, 0x00002be8, 0x00002cac,
	0x00002d49, 0x00002e2b, 0x00002f17, 0x00002fac,
	0x0000307f, 0x0000314d, 0x000031de, 0x000032a8,
	0x00003363, 0x000033f7, 0x000034bf, 0x00003560,
	0x0000363d, 0x000036ce, 0x00003755, 0x00003834,
	// Entry 60 - 7F
	0x0000389a, 0x0000392d, 0x000039d5, 0x00003a51,
	0x00003b04, 0x00003bbe, 0x00003cb2, 0x00003d2a,
	0x00003da9, 0x00003e81, 0x00003f59, 0x00003ffe,
	0x00004076, 0x000040f5, 0x00004197, 0x00004230,
	0x000042c8, 0x00004372, 0x00004419, 0x000044ad,
	0x0000451c, 0x00004592, 0x0000465d, 0x000046c3,
	0x00004750, 0x0000480b, 0x000048ae, 0x00004927,
	0x000049c1, 0x00004a4a, 0x00004ab5, 0x00004b6c,
	// Entry 80 - 9F
	0x00004bf1, 0x00004c63, 0x00004d03, 0x00004d81,
	0x00004dfd, 0x00004e6a, 0x00004f0e, 0x00004f98,
	0x00005042, 0x000050f6, 0x000051b1, 0x000052b2,
	0x000053c0, 0x00005486, 0x00005521, 0x000055ac,
	0x00005618, 0x00005684, 0x00005747, 0x000057f5,
	0x000058c2, 0x00005957, 0x000059de, 0x00005ab4,
	0x00005b21, 0x00005b8f, 0x00005bf1, 0x00005c7b,
	0x00005ce0, 0x00005d73, 0x00005e17, 0x00005eae,
	// Entry A0 - BF
	0x00005f2b, 0x00005f85, 0x0000601d, 0x000060bb,
	0x00006159, 0x0000621a, 0x00006293, 0x0000633d,
	0x00006428, 0x000064b1, 0x00006587, 0x0000661c,
	0x0000669f, 0x00006730, 0x000067a6, 0x0000681c,
	0x0000689a, 0x0000693e, 0x000069c9, 0x00006a5a,
	0x00006b06, 0x00006b7e, 0x00006bff, 0x00006cb3,
	0x00006d56, 0x00006e36, 0x00006f4e, 0x00007031,
	0x0000710e, 0x000071b0, 0x000072da, 0x000073c9,
	// Entry C0 - DF
	0x000074d9, 0x00007560, 0x0000760e, 0x000076b7,
	0x0000775e, 0x000077f7, 0x00007873, 0x00007919,
	0x000079e2, 0x00007a7e, 0x00007b1d, 0x00007bd0,
	0x00007c46, 0x00007cbc, 0x00007d52, 0x00007e1a,
	0x00007ef8, 0x00007f86, 0x00007ff5, 0x00008086,
	0x000080f7, 0x0000814d, 0x000081a3, 0x000081f9,
	0x0000826d, 0x000082cb, 0x00008368, 0x00008408,
	0x00008478, 0x000084bd, 0x0000851c, 0x00008596,
	// Entry E0 - FF
	0x0000864e, 0x000086b0, 0x000087a7, 0x00008827,
	0x00008894, 0x000088f2, 0x0000896e, 0x000089fd,
	0x00008a75, 0x00008aff, 0x00008b6d, 0x00008bb2,
	0x00008bf7, 0x00008c65, 0x00008cd3, 0x00008d3e,
	0x00008da3, 0x00008e2c, 0x00008ea4, 0x00008f29,
	0x00008fbc, 0x0000904e, 0x000090c9, 0x00009154,
	0x000091da, 0x00009229, 0x0000928d, 0x0000932d,
	0x00009385, 0x0000941c, 0x0000948b, 0x000094e2,
	// Entry 100 - 11F
	0x0000957c, 0x000095eb, 0x00009662, 0x000096f8,
	0x00009789, 0x0000984c, 0x000098d5, 0x0000994d,
	0x00009a61, 0x00009b7d, 0x00009c6a, 0x00009cbf,
	0x00009d28, 0x00009db6, 0x00009e33, 0x00009eb1,
	0x00009f31, 0x00009f93, 0x0000a01f, 0x0000a098,
	0x0000a13d, 0x0000a1d4, 0x0000a2c1, 0x0000a33e,
	0x0000a3c8, 0x0000a454, 0x0000a4bf, 0x0000a525,
	0x0000a5d4, 0x0000a665, 0x0000a6f7, 0x0000a779,
	// Entry 120 - 13F
	0x0000a7fa, 0x0000a874, 0x0000a8df, 0x0000a976,
	0x0000a9f7, 0x0000aa9d, 0x0000ab2a, 0x0000abc4,
	0x0000ac5c, 0x0000acee, 0x0000ad54, 0x0000ade7,
	0x0000ae5d, 0x0000aee0, 0x0000af66, 0x0000aff0,
	0x0000b046, 0x0000b0bf, 0x0000b17e, 0x0000b1fd,
	0x0000b28d, 0x0000b2dc, 0x0000b359, 0x0000b3bc,
	0x0000b446, 0x0000b537, 0x0000b5cf, 0x0000b69a,
	0x0000b709, 0x0000b76d, 0x0000b80d, 0x0000b88e,
	// Entry 140 - 15F
	0x0000b8fa, 0x0000b960, 0x0000b9c4, 0x0000ba3f,
	0x0000baf1, 0x0000bb52, 0x0000bbf3, 0x0000bc85,
	0x0000bd16, 0x0000bdb8, 0x0000be33, 0x0000bea4,
	0x0000bf3b, 0x0000bfac, 0x0000c00f, 0x0000c0cf,
	0x0000c16b, 0x0000c1f5, 0x0000c277, 0x0000c2d5,
	0x0000c321, 0x0000c3c2, 0x0000c472, 0x0000c4c6,
	0x0000c539, 0x0000c597, 0x0000c641, 0x0000c6fe,
	0x0000c79a, 0x0000c807, 0x0000c8b0, 0x0000c980,
	// Entry 160 - 17F
	0x0000c9e4, 0x0000ca86, 0x0000cb23, 0x0000cba9,
	0x0000cc10, 0x0000ccaa, 0x0000cd6f, 0x0000cdef,
	0x0000ce5a, 0x0000cf07, 0x0000cf49, 0x0000cfff,
	0x0000d07f, 0x0000d0cc, 0x0000d148, 0x0000d1a3,
	0x0000d21e, 0x0000d2a1, 0x0000d320, 0x0000d3bd,
	0x0000d433, 0x0000d4cd, 0x0000d52b, 0x0000d5af,
	0x0000d65d, 0x0000d6f0, 0x0000d794, 0x0000d817,
	0x0000d8a8, 0x0000d94f, 0x0000da00, 0x0000dabb,
	// Entry 180 - 19F
	0x0000db58, 0x0000dc11, 0x0000dce9, 0x0000dd9b,
	0x0000de07, 0x0000deb8, 0x0000df13, 0x0000df6e,
	0x0000dff6, 0x0000e080, 0x0000e0ce, 0x0000e150,
	0x0000e1cf, 0x0000e254, 0x0000e317, 0x0000e3c9,
	0x0000e42e, 0x0000e51e, 0x0000e5d5, 0x0000e6b2,
	0x0000e710, 0x0000e7d1, 0x0000e833, 0x0000e8bf,
	0x0000e92e, 0x0000e971, 0x0000e9c5, 0x0000ea53,
	0x0000eb14, 0x0000ebc0, 0x0000ec5e, 0x0000ecde,
	// Entry 1A0 - 1BF
	0x0000ed93, 0x0000ee08, 0x0000ee91, 0x0000eedc,
	0x0000ef4a, 0x0000efab, 0x0000f02c, 0x0000f0b2,
	0x0000f106, 0x0000f166, 0x0000f200, 0x0000f26f,
	0x0000f2d9, 0x0000f32f, 0x0000f395, 0x0000f3df,
	0x0000f45c, 0x0000f4e4, 0x0000f54f, 0x0000f5b8,
	0x0000f607, 0x0000f662, 0x0000f6ca, 0x0000f720,
	0x0000f785, 0x0000f79b, 0x0000f7b3, 0x0000f7ca,
	0x0000f7db, 0x0000f7fb, 0x0000f829, 0x0000f849,
	// Entry 1C0 - 1DF
	0x0000f883, 0x0000f8b1, 0x0000f8cc, 0x0000f902,
	0x0000f92c, 0x0000f94f, 0x0000f97d, 0x0000f9ac,
	0x0000f9cd, 0x0000f9f7,
} // Size: 1856 bytes

const enData string = "" + // Size: 63991 bytes
	"\x02Start to generate compilation database\x02Start parsing compilation " +
	"database\x02Start preprocessing C/C++ files\x02Preprocessing C/C++ files" +
	" completed [%[1]s]\x02Total time for analysis: %[1]s\x02Start analyzing " +
	"C/C++ files\x02Analyzing C/C++ files completed [%[1]s]\x02Start analyzin" +
	"g for %[1]s (%[2]v/%[3]v)\x02Analysis of %[1]s completed (%[2]s, %[3]v/%" +
	"[4]v) [%[5]s]\x02[C2201][misra-c2012-1.1]: Violation of MISRA C:2012 Rul" +
	"e 1.1: The program shall contain no violations of the standard C syntax " +
	"and constraints, and shall not exceed the implementation's translation l" +
	"imits\x0aToo many members in structure '%[1]s': %[2]s. The limit is %[3]" +
	"s. \x02[C2203][misra-c2012-1.3]: Violation of MISRA C:2012 Rule 1.3: The" +
	"re shall be no occurrence of undefined or critical unspecified behaviour" +
	": %[1]s\x02[C2204][misra-c2012-1.4]: Violation of MISRA C:2012 Rule 1.4:" +
	" Emergent language features shall not be used\x02[C2007][misra-c2012-2.1" +
	"]: Violation of MISRA C:2012 Rule 2.1: A project shall not contain unrea" +
	"chable code: %[1]s\x02[C2006][misra-c2012-2.2]: Violation of MISRA C:201" +
	"2 Rule 2.2: There shall be no dead code (A call to an empty function is " +
	"dead code)\x02[C2006][misra-c2012-2.2]: Violation of MISRA C:2012 Rule 2" +
	".2: There shall be no dead code: %[1]s\x02[C2005][misra-c2012-2.3]: Viol" +
	"ation of MISRA C:2012 Rule 2.3: A project should not contain unused type" +
	" declarations (unused typedef \x22%[1]s\x22)\x02[C2004][misra-c2012-2.4]" +
	": Violation of MISRA C:2012 Rule 2.4: A project should not contain unuse" +
	"d tag declarations\x02[C2003][misra-c2012-2.5]: Violation of MISRA C:201" +
	"2 Rule 2.5: A project should not contain unused macro declarations\x02[C" +
	"2002][misra-c2012-2.6]: Violation of MISRA C:2012 Rule 2.6: A function s" +
	"hould not contain unused label declarations\x02[C2001][misra-c2012-2.7]:" +
	" Violation of MISRA C:2012 Rule 2.7: There should be no unused parameter" +
	"s in functions\x02[C2102][misra-c2012-3.1]: Violation of MISRA C:2012 Ru" +
	"le 3.1: The character sequences /* and // shall not be used within a com" +
	"ment\x02[C2101][misra-c2012-3.2]: Violation of MISRA C:2012 Rule 3.2: Li" +
	"ne-splicing shall not be used in // comments\x02[C1002][misra-c2012-4.1]" +
	": Violation of MISRA C:2012 Rule 4.1: Octal and hexadecimal escape seque" +
	"nces shall be terminated\x02[C1001][misra-c2012-4.2]: Violation of MISRA" +
	" C:2012 Rule 4.2: Trigraphs should not be used\x02[C1109][misra-c2012-5." +
	"1]: Violation of MISRA C:2012 Rule 5.1: External identifiers shall be di" +
	"stinct (%[1]s \x22%[2]s\x22 contains non-ASCII characters)\x02[C1109][mi" +
	"sra-c2012-5.1]: Violation of MISRA C:2012 Rule 5.1: External identifiers" +
	" shall be distinct (The identifiers at %[3]s and %[4]s are not distinct)" +
	"\x02[C1108][misra-c2012-5.2]: Violation of MISRA C:2012 Rule 5.2: Identi" +
	"fiers declared in the same scope and name space shall be distinct\x02[C1" +
	"107][misra-c2012-5.3]: Violation of MISRA C:2012 Rule 5.3: An identifier" +
	" declared in an inner scope shall not hide an identifier declared in an " +
	"outer scope\x02[C1106][misra-c2012-5.4]: Violation of MISRA C:2012 Rule " +
	"5.4: Macro identifiers shall be distinct\x02[C1105][misra-c2012-5.5]: Vi" +
	"olation of MISRA C:2012 Rule 5.5: Identifiers shall be distinct from mac" +
	"ro names\x02[C1104][misra-c2012-5.6]: Violation of MISRA C:2012 Rule 5.6" +
	": A typedef name shall be a unique identifier (The identifiers \x22%[1]s" +
	"\x22 at %[2]s and %[3]s are the same)\x02[C1103][misra-c2012-5.7]: Viola" +
	"tion of MISRA C:2012 Rule 5.7: A tag name shall be a unique identifier (" +
	"The identifiers \x22%[1]s\x22 at %[2]s and %[3]s are the same)\x02[C1103" +
	"][misra-c2012-5.7]: Violation of MISRA C:2012 Rule 5.7: A tag name shall" +
	" be a unique identifier (invalid declaration at %[1]s)\x02[C1102][misra-" +
	"c2012-5.8]: Violation of MISRA C:2012 Rule 5.8: Identifiers that define " +
	"objects or functions with external linkage shall be unique (The identifi" +
	"ers \x22%[2]s\x22 at %[3]s and %[4]s are the same)\x02[C1101][misra-c201" +
	"2-5.9]: Violation of MISRA C:2012 Rule 5.9: Identifiers that define obje" +
	"cts or functions with internal linkage should be unique (The identifiers" +
	" \x22%[2]s\x22 at %[3]s and %[4]s are the same)\x02[C0702][misra-c2012-6" +
	".1]: Violation of MISRA C:2012 Rule 6.1: Bit-fields shall only be declar" +
	"ed with an appropriate type\x02[C0701][misra-c2012-6.2]: Violation of MI" +
	"SRA C:2012 Rule 6.2: Single-bit named bit fields shall not be of a signe" +
	"d type\x02[C0904][misra-c2012-7.1]: Violation of MISRA C:2012 Rule 7.1: " +
	"Octal constants shall not be used\x02[C0903][misra-c2012-7.2]: Violation" +
	" of MISRA C:2012 Rule 7.2: A \x22u\x22 or \x22U\x22 suffix shall be appl" +
	"ied to all integer constants that are represented in an unsigned type" +
	"\x02[C0902][misra-c2012-7.3]: Violation of MISRA C:2012 Rule 7.3: The lo" +
	"wercase character \x22l\x22 shall not be used in a literal suffix\x02[C0" +
	"901][misra-c2012-7.4]: Violation of MISRA C:2012 Rule 7.4: A string lite" +
	"ral shall not be assigned to an object unless the object's type is \x22p" +
	"ointer to const-qualified char\x22\x02[C0901][misra-c2012-7.4]: Violatio" +
	"n of MISRA C:2012 Rule 7.4: A string literal shall not be assigned to an" +
	" object unless the object's type is \x22pointer to const-qualified char" +
	"\x22 (violated at %[1]s)\x02[C0901][misra-c2012-7.4]: Violation of MISRA" +
	" C:2012 Rule 7.4: A string literal shall not be assigned to an object un" +
	"less the object's type is \x22pointer to const-qualified char\x22: %[1]s" +
	"\x02[C0514][misra-c2012-8.1]: Violation of MISRA C:2012 Rule 8.1: Types " +
	"shall be explicitly specified: %[1]s\x02[C0513][misra-c2012-8.2]: Violat" +
	"ion of MISRA C:2012 Rule 8.2: Function types shall be in prototype form " +
	"with named parameters (The function \x22%[1]s\x22 has unnamed parameter(" +
	"s))\x02[C0513][misra-c2012-8.2]: Violation of MISRA C:2012 Rule 8.2: Fun" +
	"ction types shall be in prototype form with named parameters\x02[C0513][" +
	"misra-c2012-8.2]: Violation of MISRA C:2012 Rule 8.2: Function types sha" +
	"ll be in prototype form with named parameters (The function \x22%[1]s" +
	"\x22 uses forbidden K&R style)\x02[C0513][misra-c2012-8.2]: Violation of" +
	" MISRA C:2012 Rule 8.2: Function types shall be in prototype form with n" +
	"amed parameters (missing 'void' in function \x22%[1]s\x22)\x02[C0512][mi" +
	"sra-c2012-8.3]: Violation of MISRA C:2012 Rule 8.3: All declarations of " +
	"an object or function shall use the same names and type qualifiers (viol" +
	"ated in function \x22%[1]s\x22)\x02[C0512][misra-c2012-8.3]: Violation o" +
	"f MISRA C:2012 Rule 8.3: All declarations of an object or function shall" +
	" use the same names and type qualifiers (\x22%[1]s\x22 at %[2]s and %[3]" +
	"s use different names or type qualifiers)\x02[C0511][misra-c2012-8.4]: V" +
	"iolation of MISRA C:2012 Rule 8.4: A compatible declaration shall be vis" +
	"ible when an object or function with external linkage is defined (The fu" +
	"nction \x22%[1]s\x22 at %[2]s is defined without visible declaration)" +
	"\x02[C0511][misra-c2012-8.4]: Violation of MISRA C:2012 Rule 8.4: A comp" +
	"atible declaration shall be visible when an object or function with exte" +
	"rnal linkage is defined (The variable \x22%[1]s\x22 at %[2]s is defined " +
	"without visible declaration)\x02[C0511][misra-c2012-8.4]: Violation of M" +
	"ISRA C:2012 Rule 8.4: A compatible declaration shall be visible when an " +
	"object or function with external linkage is defined (Declaration and def" +
	"inition types of function \x22%[1]s\x22 at %[2]s do not match)\x02[C0510" +
	"][misra-c2012-8.5]: Violation of MISRA C:2012 Rule 8.5: An external obje" +
	"ct or function shall be declared once in one and only one file (The obje" +
	"ct \x22%[1]s\x22 at %[2]s is declared in different files)\x02[C0510][mis" +
	"ra-c2012-8.5]: Violation of MISRA C:2012 Rule 8.5: An external object or" +
	" function shall be declared once in one and only one file (The function " +
	"\x22%[1]s\x22 at %[2]s is declared in different files)\x02[C0510][misra-" +
	"c2012-8.5]: Violation of MISRA C:2012 Rule 8.5: An external object or fu" +
	"nction shall be declared once in one and only one file (The object \x22%" +
	"[1]s\x22 is declared at %[2]s and %[3]s)\x02[C0510][misra-c2012-8.5]: Vi" +
	"olation of MISRA C:2012 Rule 8.5: An external object or function shall b" +
	"e declared once in one and only one file (The function \x22%[1]s\x22 is " +
	"declared at %[2]s and %[3]s)\x02[C0509][misra-c2012-8.6]: Violation of M" +
	"ISRA C:2012 Rule 8.6: An identifier with external linkage shall have exa" +
	"ctly one external definition (The variable \x22%[1]s\x22 has two externa" +
	"l definitions at %[2]s and %[3]s)\x02[C0508][misra-c2012-8.7]: Violation" +
	" of MISRA C:2012 Rule 8.7: Functions and objects should not be defined w" +
	"ith external linkage if they are referenced in only one translation unit" +
	" (\x22%[1]s\x22 at %[2]s is defined with external linkage)\x02[C0507][mi" +
	"sra-c2012-8.8]: Violation of MISRA C:2012 Rule 8.8: The static storage c" +
	"lass specifier shall be used in all declarations of objects and function" +
	"s that have internal linkage\x02[C0506][misra-c2012-8.9]: Violation of M" +
	"ISRA C:2012 Rule 8.9: An object should be defined at block scope if its " +
	"identifier only appears in a single function\x02[C0505][misra-c2012-8.10" +
	"]: Violation of MISRA C:2012 Rule 8.10: An inline function shall be decl" +
	"ared with the static storage class\x02[C0504][misra-c2012-8.11]: Violati" +
	"on of MISRA C:2012 Rule 8.11: When an array with external linkage is dec" +
	"lared, its size should be explicitly specified\x02[C0503][misra-c2012-8." +
	"12]: Violation of MISRA C:2012 Rule 8.12: Within an enumerator list, the" +
	" value of an implicitly-specified enumeration constant shall be unique" +
	"\x02[C0501][misra-c2012-8.14]: Violation of MISRA C:2012 Rule 8.14: The " +
	"restrict type qualifier shall not be used\x02[C1205][misra-c2012-9.1]: V" +
	"iolation of MISRA C:2012 Rule 9.1: The value of an object with automatic" +
	" storage duration shall not be read before it has been set: %[1]s\x02[C1" +
	"204][misra-c2012-9.2]: Violation of MISRA C:2012 Rule 9.2: The initializ" +
	"er for an aggregate or union shall be enclosed in braces\x02[C1203][misr" +
	"a-c2012-9.3]: Violation of MISRA C:2012 Rule 9.3: Arrays shall not be pa" +
	"rtially initialized\x02[C1202][misra-c2012-9.4]: Violation of MISRA C:20" +
	"12 Rule 9.4: An element of an object shall not be initialized more than " +
	"once\x02[C1201][misra-c2012-9.5]:Violation of MISRA C:2012 Rule 9.5: Whe" +
	"re designated initializers are used to initialize an array object the si" +
	"ze of the array shall be specified explicitly\x02[C0808][misra-c2012-10." +
	"1]: Violation of MISRA C:2012 Rule 10.1: Operands shall not be of an ina" +
	"ppropriate essential type\x02[C0807][misra-c2012-10.2]: Violation of MIS" +
	"RA C:2012 Rule 10.2: Expressions of essentially character type shall not" +
	" be used inappropriately in addition and subtraction operations\x02[C080" +
	"6][misra-c2012-10.3]: Violation of MISRA C:2012 Rule 10.3: The value of " +
	"an expression shall not be assigned to an object with a narrower essenti" +
	"al type or of a different essential type category\x02[C0805][misra-c2012" +
	"-10.4]: Violation of MISRA C:2012 Rule 10.4: Both operands of an operato" +
	"r in which the usual arithmetic conversions are performed shall have the" +
	" same essential type category\x02[C0804][misra-c2012-10.5]: Violation of" +
	" MISRA C:2012 Rule 10.5: The value of an expression should not be cast t" +
	"o an inappropriate essential type\x02[C0803][misra-c2012-10.6]: Violatio" +
	"n of MISRA C:2012 Rule 10.6: The value of a composite expression shall n" +
	"ot be assigned to an object with wider essential type\x02[C0802][misra-c" +
	"2012-10.7]: Violation of MISRA C:2012 Rule 10.7: If a composite expressi" +
	"on is used as one operand of an operator in which the usual arithmetic c" +
	"onversions are performed then the other operand shall not have wider ess" +
	"ential type\x02[C0801][misra-c2012-10.8]: Violation of MISRA C:2012 Rule" +
	" 10.8: The value of a composite expression shall not be cast to a differ" +
	"ent essential type category or a wider essential type\x02[C1409][misra-c" +
	"2012-11.1]: Violation of MISRA C:2012 Rule 11.1: Conversions shall not b" +
	"e performed between a pointer to a function and any other type (conversi" +
	"on from \x22%[1]s\x22 to \x22%[2]s\x22 at %[3]s)\x02[C1409][misra-c2012-" +
	"11.1]: Violation of MISRA C:2012 Rule 11.1: Conversions shall not be per" +
	"formed between a pointer to a function and any other type: %[1]s\x02[C14" +
	"08][misra-c2012-11.2]: Violation of MISRA C:2012 Rule 11.2: Conversions " +
	"shall not be performed between a pointer to an incomplete type and any o" +
	"ther type (conversion from \x22pointer to %[1]s\x22 to \x22pointer to %[" +
	"2]s\x22 at %[3]s)\x02[C1407][misra-c2012-11.3]: Violation of MISRA C:201" +
	"2 Rule 11.3: A cast shall not be performed between a pointer to object t" +
	"ype and a pointer to a different object type (conversion from \x22pointe" +
	"r to %[1]s\x22 to \x22pointer to %[2]s\x22 at %[3]s)\x02[C1406][misra-c2" +
	"012-11.4]: Violation of MISRA C:2012 Rule 11.4: A conversion should not " +
	"be performed between a pointer to object and an integer type\x02[C1406][" +
	"misra-c2012-11.4]: Violation of MISRA C:2012 Rule 11.4: A conversion sho" +
	"uld not be performed between a pointer to object and an integer type (co" +
	"nversion from \x22%[1]s\x22 to \x22pointer to %[2]s type\x22 at %[3]s)" +
	"\x02[C1406][misra-c2012-11.4]: Violation of MISRA C:2012 Rule 11.4: A co" +
	"nversion should not be performed between a pointer to object and an inte" +
	"ger type (conversion from \x22pointer to %[1]s\x22 to \x22%[2]s\x22 at %" +
	"[3]s)\x02[C1405][misra-c2012-11.5]: Violation of MISRA C:2012 Rule 11.5:" +
	" A conversion should not be performed from pointer to void into pointer " +
	"to object\x02[C1405][misra-c2012-11.5]: Violation of MISRA C:2012 Rule 1" +
	"1.5: A conversion should not be performed from pointer to void into poin" +
	"ter to object (conversion from \x22%[1]s\x22 to \x22pointer to %[2]s\x22" +
	" at %[3]s)\x02[C1404][misra-c2012-11.6]: Violation of MISRA C:2012 Rule " +
	"11.6: A cast shall not be performed between pointer to void and an arith" +
	"metic type (conversion from \x22%[1]s\x22 to \x22%[2]s\x22 at %[3]s)\x02" +
	"[C1404][misra-c2012-11.6]: Violation of MISRA C:2012 Rule 11.6: A cast s" +
	"hall not be performed between pointer to void and an arithmetic type: %[" +
	"1]s\x02[C1403][misra-c2012-11.7]: Violation of MISRA C:2012 Rule 11.7: A" +
	" cast shall not be performed between pointer to object and a non-integer" +
	" arithmetic type (conversion from \x22%[1]s\x22 to \x22%[2]s\x22 at %[3]" +
	"s)\x02[C1403][misra-c2012-11.7]: Violation of MISRA C:2012 Rule 11.7: A " +
	"cast shall not be performed between pointer to object and a non-integer " +
	"arithmetic type: %[1]s\x02[C1402][misra-c2012-11.8]: Violation of MISRA " +
	"C:2012 Rule 11.8: A cast shall not remove any const or volatile qualific" +
	"ation from the type pointed to by a pointer (conversion from \x22pointer" +
	" to %[1]s\x22 to \x22pointer to %[2]s\x22)\x02[C1401][misra-c2012-11.9]:" +
	" Violation of MISRA C:2012 Rule 11.9: The macro NULL shall be the only p" +
	"ermitted form of integer null pointer constant\x02[C0605][misra-c2012-12" +
	".1]: Violation of MISRA C:2012 Rule 12.1: The precedence of operators wi" +
	"thin expressions should be made explicit\x02[C0604][misra-c2012-12.2]:Vi" +
	"olation of MISRA C:2012 Rule 12.2: The right hand operand of a shift ope" +
	"rator shall lie in the range zero to one less than the width in bits of " +
	"the essential type of the left hand operand: %[1]s\x02[C0603][misra-c201" +
	"2-12.3]: Violation of MISRA C:2012 Rule 12.3: The comma operator should " +
	"not be used\x02[C0602][misra-c2012-12.4]: Violation of MISRA C:2012 Rule" +
	" 12.4: Evaluation of constant expressions should not lead to unsigned in" +
	"teger wrap-around\x02[C0601][misra-c2012-12.5]: Violation of MISRA C:201" +
	"2 Rule 12.5: The sizeof operator shall not have an operand which is a fu" +
	"nction parameter declared as \x22array of type\x22\x02[C1606][misra-c201" +
	"2-13.1]: Violation of MISRA C:2012 Rule 13.1: Initializer lists shall no" +
	"t contain persistent side effects\x02[C1605][misra-c2012-13.2]: Violatio" +
	"n of MISRA C:2012 Rule 13.2: The value of an expression and its persiste" +
	"nt side effects shall be the same under all permitted evaluation orders" +
	"\x02[C1605][misra-c2012-13.2]: Violation of MISRA C:2012 Rule 13.2: The " +
	"value of an expression and its persistent side effects shall be the same" +
	" under all permitted evaluation orders: %[1]s\x02[C1604][misra-c2012-13." +
	"3]: Violation of MISRA C:2012 Rule 13.3: A full expression containing an" +
	" increment (++) or decrement (--) operator should have no other potentia" +
	"l side effects other than that caused by the increment or decrement oper" +
	"ator\x02[C1603][misra-c2012-13.4]: Violation of MISRA C:2012 Rule 13.4: " +
	"The result of an assignment operator should not be used\x02[C1603][misra" +
	"-c2012-13.4]: Violation of MISRA C:2012 Rule 13.4: The result of an assi" +
	"gnment operator should not be used: %[1]s\x02[C1602][misra-c2012-13.5]: " +
	"Violation of MISRA C:2012 Rule 13.5: The right hand operand of a logical" +
	" && or || operator shall not contain persistent side effects (The operan" +
	"d may have persistent side effects at %[1]s)\x02[C1602][misra-c2012-13.5" +
	"]: Violation of MISRA C:2012 Rule 13.5: The right hand operand of a logi" +
	"cal && or || operator shall not contain persistent side effects (The fun" +
	"ction \x22%[1]s\x22 may have persistent side effects)\x02[C1601][misra-c" +
	"2012-13.6]: Violation of MISRA C:2012 Rule 13.6: The operand of the size" +
	"of operator shall not contain any expression which has potential side ef" +
	"fects\x02[C1704][misra-c2012-14.1]: Violation of MISRA C:2012 Rule 14.1:" +
	" A loop counter shall not have essentially floating type\x02[C1704][misr" +
	"a-c2012-14.1]: Violation of MISRA C:2012 Rule 14.1: A loop counter shall" +
	" not have essentially floating type: %[1]s\x02[C1703][misra-c2012-14.2]:" +
	" Violation of MISRA C:2012 Rule 14.2: A for loop shall be well-formed (" +
	"\x22%[1]s\x22 clause in the for loop may have persistent side effects)" +
	"\x02[C1703][misra-c2012-14.2]: Violation of MISRA C:2012 Rule 14.2: A fo" +
	"r loop shall be well-formed (The loop counter \x22%[1]s\x22 is not used " +
	"in \x22%[2]s\x22 clause)\x02[C1703][misra-c2012-14.2]: Violation of MISR" +
	"A C:2012 Rule 14.2: A for loop shall be well-formed (The loop counter " +
	"\x22%[1]s\x22 is modified in the loop body)\x02[C1703][misra-c2012-14.2]" +
	": Violation of MISRA C:2012 Rule 14.2: A for loop shall be well-formed (" +
	"The \x22%[1]s\x22 clause uses the reference \x22%[2]s\x22 modified in th" +
	"e loop body)\x02[C1703][misra-c2012-14.2]: Violation of MISRA C:2012 Rul" +
	"e 14.2: A for loop shall be well-formed (The \x22%[1]s\x22 clause should" +
	" set and only set the value of loop counter)\x02[C1703][misra-c2012-14.2" +
	"]: Violation of MISRA C:2012 Rule 14.2: A for loop shall be well-formed " +
	"(The second clause uses a non-boolean control flag)\x02[C1702][misra-c20" +
	"12-14.3]: Violation of MISRA C:2012 Rule 14.3: Controlling expressions s" +
	"hall not be invariant\x02[C1702][misra-c2012-14.3]: Violation of MISRA C" +
	":2012 Rule 14.3: Controlling expressions shall not be invariant: %[1]s" +
	"\x02[C1701][misra-c2012-14.4]: Violation of MISRA C:2012 Rule 14.4: The " +
	"controlling expression of an if statement and the controlling expression" +
	" of an iteration-statement shall have essentially Boolean type\x02[C1807" +
	"][misra-c2012-15.1]: Violation of MISRA C:2012 Rule 15.1: The goto state" +
	"ment should not be used\x02[C1806][misra-c2012-15.2]: Violation of MISRA" +
	" C:2012 Rule 15.2: The goto statement shall jump to a label declared lat" +
	"er in the same function\x02[C1805][misra-c2012-15.3]: Violation of MISRA" +
	" C:2012 Rule 15.3: Any label referenced by a goto statement shall be dec" +
	"lared in the same block, or in any block enclosing the goto statement" +
	"\x02[C1804][misra-c2012-15.4]: Violation of MISRA C:2012 Rule 15.4: Ther" +
	"e should be no more than one break or goto statement used to terminate a" +
	"ny iteration statement\x02[C1803][misra-c2012-15.5]: Violation of MISRA " +
	"C:2012 Rule 15.5: A function should have a single point of exit at the e" +
	"nd\x02[C1802][misra-c2012-15.6]: Violation of MISRA C:2012 Rule 15.6: Th" +
	"e body of an iteration-statement or a selection-statement shall be a com" +
	"pound-statement\x02[C1801][misra-c2012-15.7]: Violation of MISRA C:2012 " +
	"Rule 15.7: All if ... else if constructs shall be terminated with an els" +
	"e statement\x02[C1907][misra-c2012-16.1]: Violation of MISRA C:2012 Rule" +
	" 16.1: All switch statements shall be well-formed\x02[C1906][misra-c2012" +
	"-16.2]: Violation of MISRA C:2012 Rule 16.2: A switch label shall only b" +
	"e used when the most closely-enclosing compound statement is the body of" +
	" a switch statement\x02[C1905][misra-c2012-16.3]: Violation of MISRA C:2" +
	"012 Rule 16.3: An unconditional break statement shall terminate every sw" +
	"itch-clause\x02[C1904][misra-c2012-16.4]: Violation of MISRA C:2012 Rule" +
	" 16.4: Every switch statement shall have a default label\x02[C1903][misr" +
	"a-c2012-16.5]: Violation of MISRA C:2012 Rule 16.5: A default label shal" +
	"l appear as either the first or the last switch label of a switch statem" +
	"ent\x02[C1902][misra-c2012-16.6]: Violation of MISRA C:2012 Rule 16.6: E" +
	"very switch statement shall have at least two switch-clauses\x02[C1901][" +
	"misra-c2012-16.7]: Violation of MISRA C:2012 Rule 16.7: A switch-express" +
	"ion shall not have essentially Boolean type\x02[C1508][misra-c2012-17.1]" +
	": Violation of MISRA C:2012 Rule 17.1: The features of <stdarg.h> shall " +
	"not be used\x02[C1507][misra-c2012-17.2]: Violation of MISRA C:2012 Rule" +
	" 17.2: Functions shall not call themselves, either directly or indirectl" +
	"y (a recursive chain found: %[1]s)\x02[C1507][misra-c2012-17.2]: Violati" +
	"on of MISRA C:2012 Rule 17.2: Functions shall not call themselves, eithe" +
	"r directly or indirectly: %[1]s\x02[C1506][misra-c2012-17.3]: Violation " +
	"of MISRA C:2012 Rule 17.3: A function shall not be declared implicitly (" +
	"The function \x22%[1]s\x22 called at %[2]s is declared implicitly)\x02[C" +
	"1505][misra-c2012-17.4]: Violation of MISRA C:2012 Rule 17.4: All exit p" +
	"aths from a function with non-void return type shall have an explicit re" +
	"turn statement with an expression\x02[C1505][misra-c2012-17.4]: Violatio" +
	"n of MISRA C:2012 Rule 17.4: All exit paths from a function with non-voi" +
	"d return type shall have an explicit return statement with an expression" +
	": %[1]s\x02[C1504][misra-c2012-17.5]: Violation of MISRA C:2012 Rule 17." +
	"5: The function argument corresponding to a parameter declared to have a" +
	"n array type shall have an appropriate number of elements (A null pointe" +
	"r argument is used for a parameter with array type)\x02[C1504][misra-c20" +
	"12-17.5]: Violation of MISRA C:2012 Rule 17.5: The function argument cor" +
	"responding to a parameter declared to have an array type shall have an a" +
	"ppropriate number of elements (An argument with improper array size is u" +
	"sed for a parameter with array type)\x02[C1504][misra-c2012-17.5]: Viola" +
	"tion of MISRA C:2012 Rule 17.5: The function argument corresponding to a" +
	" parameter declared to have an array type shall have an appropriate numb" +
	"er of elements: %[1]s\x02[C1503][misra-c2012-17.6]: Violation of MISRA C" +
	":2012 Rule 17.6: The declaration of an array parameter shall not contain" +
	" the static keyword between the [ ]\x02[C1502][misra-c2012-17.7]: Violat" +
	"ion of MISRA C:2012 Rule 17.7: The value returned by a function having n" +
	"on-void return type shall be used\x02[C1501][misra-c2012-17.8]: Violatio" +
	"n of MISRA C:2012 Rule 17.8: A function parameter should not be modified" +
	"\x02[C1501][misra-c2012-17.8]: Violation of MISRA C:2012 Rule 17.8: A fu" +
	"nction parameter should not be modified\x02[C1308][misra-c2012-18.1]: Vi" +
	"olation of MISRA C:2012 Rule 18.1: A pointer resulting from arithmetic o" +
	"n a pointer operand shall address an element of the same array as that p" +
	"ointer operand: %[1]s\x02[C1307][misra-c2012-18.2]: Violation of MISRA C" +
	":2012 Rule 18.2: Subtraction between pointers shall only be applied to p" +
	"ointers that address elements of the same array: %[1]s\x02[C1306][misra-" +
	"c2012-18.3]: Violation of MISRA C:2012 Rule 18.3: The relational operato" +
	"rs >, >=, < and <= shall not be applied to objects of pointer type excep" +
	"t where they point into the same object: %[1]s\x02[C1305][misra-c2012-18" +
	".4]: Violation of MISRA C:2012 Rule 18.4: The +, -, += and -= operators " +
	"should not be applied to an expression of pointer type\x02[C1304][misra-" +
	"c2012-18.5]: Violation of MISRA C:2012 Rule 18.5: Declarations should co" +
	"ntain no more than two levels of pointer nesting\x02[C1303][misra-c2012-" +
	"18.6]: Violation of MISRA C:2012 Rule 18.6: The address of an object wit" +
	"h automatic storage shall not be copied to another object that persists " +
	"after the first object has ceased to exist: %[1]s\x02[C1302][misra-c2012" +
	"-18.7]: Violation of MISRA C:2012 Rule 18.7: Flexible array members shal" +
	"l not be declared\x02[C1301][misra-c2012-18.8]: Violation of MISRA C:201" +
	"2 Rule 18.8: Variable-length array types shall not be used\x04\x00\x01" +
	"\x0a]\x02[C0302][misra-c2012-19.1]: Violation of MISRA C:2012 Rule 19.1," +
	" assign or copy is overlapped\x02[C0302][misra-c2012-19.1]: Violation of" +
	" MISRA C:2012 Rule 19.1: An object shall not be assigned or copied to an" +
	" overlapping object: %[1]s\x02[C0301][misra-c2012-19.2]: Violation of MI" +
	"SRA C:2012 Rule 19.2: The union keyword should not be used\x02[C0114][mi" +
	"sra-c2012-20.1]: Violation of MISRA C:2012 Rule 20.1: #include directive" +
	"s should only be preceded by preprocessor directives or comments\x02[C01" +
	"13][misra-c2012-20.2]: Violation of MISRA C:2012 Rule 20.2: The ', \x22 " +
	"or \\ characters and the /* or // character sequences shall not occur in" +
	" a header file name\x02[C0112][misra-c2012-20.3]: Violation of MISRA C:2" +
	"012 Rule 20.3: The #include directive shall be followed by either a <fil" +
	"ename> or \x22filename\x22 sequence\x02[C0111][misra-c2012-20.4]: Violat" +
	"ion of MISRA C:2012 Rule 20.4: A macro shall not be defined with the sam" +
	"e name as a keyword\x02[C0110][misra-c2012-20.5]: Violation of MISRA C:2" +
	"012 Rule 20.5: #undef should not be used\x02[C0109][misra-c2012-20.6]: V" +
	"iolation of MISRA C:2012 Rule 20.6: Tokens that look like a preprocessin" +
	"g directive shall not occur within a macro argument\x02[C0108][misra-c20" +
	"12-20.7]: Violation of MISRA C:2012 Rule 20.7: Expressions resulting fro" +
	"m the expansion of macro parameters shall be enclosed in parentheses\x02" +
	"[C0107][misra-c2012-20.8]: Violation of MISRA C:2012 Rule 20.8: The cont" +
	"rolling expression of a #if or #elif preprocessing directive shall evalu" +
	"ate to 0 or 1\x02[C0106][misra-c2012-20.9]: Violation of MISRA C:2012 Ru" +
	"le 20.9: All identifiers used in the controlling expression of #if or #e" +
	"lif preprocessing directives shall be #define'd before evaluation\x02[C0" +
	"105][misra-c2012-20.10]: Violation of MISRA C:2012 Rule 20.10: The # and" +
	" ## preprocessor operators should not be used\x02[C0104][misra-c2012-20." +
	"11]: Violation of MISRA C:2012 Rule 20.11: A macro parameter immediately" +
	" following a # operator shall not immediately be followed by a ## operat" +
	"or\x02[C0103][misra-c2012-20.12]: Violation of MISRA C:2012 Rule 20.12: " +
	"A macro parameter used as an operand to the # or ## operators, which is " +
	"itself subject to further macro replacement, shall only be used as an op" +
	"erand to these operators\x02[C0102][misra-c2012-20.13]: Violation of MIS" +
	"RA C:2012 Rule 20.13: A line whose first token is # shall be a valid pre" +
	"processing directive\x02[C0101][misra-c2012-20.14]: Violation of MISRA C" +
	":2012 Rule 20.14: All #else, #elif and #endif preprocessor directives sh" +
	"all reside in the same file as the #if, #ifdef or #ifndef directive to w" +
	"hich they are related\x02[C0420][misra-c2012-21.1]: Violation of MISRA C" +
	":2012 Rule 21.1: #define and #undef shall not be used on a reserved iden" +
	"tifier or reserved macro name\x02[C0419][misra-c2012-21.2]: Violation of" +
	" MISRA C:2012 Rule 21.2: A reserved identifier or reserved macro name sh" +
	"all not be declared\x02[C0418][misra-c2012-21.3]: Violation of MISRA C:2" +
	"012 Rule 21.3: The memory allocation and deallocation functions of <stdl" +
	"ib.h> shall not be used\x02[C0417][misra-c2012-21.4]: Violation of MISRA" +
	" C:2012 Rule 21.4: The standard header file <setjmp.h> shall not be used" +
	"\x02[C0416][misra-c2012-21.5]: Violation of MISRA C:2012 Rule 21.5: The " +
	"standard header file <signal.h> shall not be used\x02[C0415][misra-c2012" +
	"-21.6]: Violation of MISRA C:2012 Rule 21.6: The Standard Library input/" +
	"output functions shall not be used\x02[C0414][misra-c2012-21.7]: Violati" +
	"on of MISRA C:2012 Rule 21.7: The Standard Library functions atof, atoi," +
	" atol and atoll functions of <stdlib.h> shall not be used\x02[C0413][mis" +
	"ra-c2012-21.8]: Violation of MISRA C:2012 Rule 21.8: The Standard Librar" +
	"y termination functions of <stdlib.h> shall not be used\x02[C0412][misra" +
	"-c2012-21.9]: Violation of MISRA C:2012 Rule 21.9: The Standard Library " +
	"functions bsearch and qsort of <stdlib.h> shall not be used\x02[C0411][m" +
	"isra-c2012-21.10]: Violation of MISRA C:2012 Rule 21.10: The value of er" +
	"rno shall only be tested when the last function to be called was an errn" +
	"o-setting-function\x02[C0410][misra-c2012-21.11]: Violation of MISRA C:2" +
	"012 Rule 21.11: The standard header file <tgmath.h> shall not be used" +
	"\x02[C0409][misra-c2012-21.12]: Violation of MISRA C:2012 Rule 21.12: Th" +
	"e exception handling features of <fenv.h> should not be used\x02[C0408][" +
	"misra-c2012-21.13]: Violation of MISRA C:2012 Rule 21.13: Any value pass" +
	"ed to a function in <ctype.h> shall be representable as an unsigned char" +
	" or be the value EOF: %[1]s\x02[C0407][misra-c2012-21.14]: Violation of " +
	"MISRA C:2012 Rule 21.14: The Standard Library function memcmp shall not " +
	"be used to compare null terminated strings: %[1]s\x02[C0406][misra-c2012" +
	"-21.15]: Violation of MISRA C:2012 Rule 21.15: The pointer arguments to " +
	"the Standard Library functions memcpy, memmove and memcmp shall be point" +
	"ers to qualified or unqualified versions of compatible types\x02[C0405][" +
	"misra-c2012-21.16]: Violation of MISRA C:2012 Rule 21.16: The pointer ar" +
	"guments to the Standard Library function memcmp shall point to either a " +
	"pointer type, an essentially signed type, an essentially unsigned type, " +
	"an essentially Boolean type or an essentially enum type\x02[C0404][misra" +
	"-c2012-21.17]: Violation of MISRA C:2012 Rule 21.17: Use of the string h" +
	"andling functions from <string.h> shall not result in accesses beyond th" +
	"e bounds of the objects referenced by their pointer parameters: %[1]s" +
	"\x02[C0403][misra-c2012-21.18]: Violation of MISRA C:2012 Rule 21.18: Th" +
	"e size_t argument passed to any function in <string.h> shall have an app" +
	"ropriate value (implicit conversion from \x22pointer to %[1]s\x22 to " +
	"\x22%[2]s\x22 at %[3]s)\x02[C0403][misra-c2012-21.18]: Violation of MISR" +
	"A C:2012 Rule 21.18: The size_t argument passed to any function in <stri" +
	"ng.h> shall have an appropriate value: %[1]s\x02[C0402][misra-c2012-21.1" +
	"9]: Violation of MISRA C:2012 Rule 21.19: The pointers returned by the S" +
	"tandard Library functions localeconv, getenv, setlocale or, strerror sha" +
	"ll only be used as if they have pointer to const-qualified type (implici" +
	"t conversion from \x22pointer to %[1]s\x22 to \x22%[2]s\x22 at %[3]s)" +
	"\x02[C0402][misra-c2012-21.19]: Violation of MISRA C:2012 Rule 21.19: Th" +
	"e pointers returned by the Standard Library functions localeconv, getenv" +
	", setlocale or, strerror shall only be used as if they have pointer to c" +
	"onst-qualified type: %[1]s\x02[C0401][misra-c2012-21.20]: Violation of M" +
	"ISRA C:2012 Rule 21.20: The pointer returned by the Standard Library fun" +
	"ctions asctime, ctime, gmtime, localtime, localeconv, getenv, setlocale " +
	"or strerror shall not be used following a subsequent call to the same fu" +
	"nction: %[1]s\x02[C0421][misra-c2012-21.21]: Violation of MISRA C:2012 R" +
	"ule 21.21: The Standard Library function system of <stdlib.h> shall not " +
	"be used\x02[C0210][misra-c2012-22.1]: Violation of MISRA C:2012 Rule 22." +
	"1: All resources obtained dynamically by means of Standard Library funct" +
	"ions shall be explicitly released: %[1]s\x02[C0209][misra-c2012-22.2]: V" +
	"iolation of MISRA C:2012 Rule 22.2: A block of memory shall only be free" +
	"d if it was allocated by means of a Standard Library function: %[1]s\x02" +
	"[C0208][misra-c2012-22.3]: Violation of MISRA C:2012 Rule 22.3: The same" +
	" file shall not be open for read and write access at the same time on di" +
	"fferent streams: %[1]s\x02[C0207][misra-c2012-22.4]: Violation of MISRA " +
	"C:2012 Rule 22.4: There shall be no attempt to write to a stream which h" +
	"as been opened as read-only: %[1]s\x02[C0206][misra-c2012-22.5]: Violati" +
	"on of MISRA C:2012 Rule 22.5: A pointer to a FILE object shall not be de" +
	"referenced: %[1]s\x02[C0205][misra-c2012-22.6]: Violation of MISRA C:201" +
	"2 Rule 22.6: The value of a pointer to a FILE shall not be used after th" +
	"e associated stream has been closed: %[1]s\x02[C0204][misra-c2012-22.7]:" +
	" Violation of MISRA C:2012 Rule 22.7: The macro EOF shall only be compar" +
	"ed with the unmodified return value from any Standard Library function c" +
	"apable of returning EOF: %[1]s\x02[C0203][misra-c2012-22.8]: Violation o" +
	"f MISRA C:2012 Rule 22.8: The value of errno shall be set to zero prior " +
	"to a call to an errno-setting-function: %[1]s\x02[C0202][misra-c2012-22." +
	"9]: Violation of MISRA C:2012 Rule 22.9: The value of errno shall be tes" +
	"ted against zero after calling an errno-setting-function: %[1]s\x02[C020" +
	"1][misra-c2012-22.10]: Violation of MISRA C:2012 Rule 22.10: The value o" +
	"f errno shall only be tested when the last function to be called was an " +
	"errno-setting-function: %[1]s\x02[C2306][misra-c2012-dir-4.3]: Violation" +
	" of MISRA C:2012 Dir 4.3: Assembly language shall be encapsulated and is" +
	"olated\x02[C2306][misra-c2012-dir-4.3]: Violation of MISRA C:2012 Dir 4." +
	"3: Assembly language shall be encapsulated and isolated\x02[C2310][misra" +
	"-c2012-dir-4.7]: Violation of MISRA C:2012 Dir 4.7: If a function return" +
	"s error information, then that error information shall be tested\x02[C23" +
	"13][misra-c2012-dir-4.10]: Violation of MISRA C:2012 Dir 4.10: Precautio" +
	"ns shall be taken in order to prevent the contents of a header file bein" +
	"g included more than once (%[1]s has no precaution)\x02[C2313][misra-c20" +
	"12-dir-4.10]: Violation of MISRA C:2012 Dir 4.10: Precautions shall be t" +
	"aken in order to prevent the contents of a header file being included mo" +
	"re than once (%[1]s and %[2]s have the same file identifier)\x02[C2314][" +
	"misra-c2012-dir-4.11]: Violation of MISRA C:2012 Dir 4.11: The validity " +
	"of values passed to library functions shall be checked: %[1]s\x02[C2315]" +
	"[misra-c2012-dir-4.12]: Violation of MISRA C:2012 Dir 4.12: Dynamic memo" +
	"ry allocation shall not be used\x02[C2317][misra-c2012-dir-4.14]: Violat" +
	"ion of MISRA C:2012 Dir 4.14: The validity of values received from exter" +
	"nal sources shall be checked: %[1]s\x02[C7966][NAIVESYSTEMS_C7966]: Viol" +
	"ation of NAIVESYSTEMS_C7966: The size of malloc should be divisible by 4" +
	": %[1]s\x02Violation of MISRA C++:2008 Rule 0-1-1: A project shall not c" +
	"ontain unreachable code.\x02Violation of MISRA C++:2008 Rule 0-1-2: A pr" +
	"oject shall not contain infeasible paths.\x02Violation of MISRA C++:2008" +
	" Rule 0-1-3: A project shall not contain unused variables.\x02Violation " +
	"of MISRA C++:2008 Rule 0-1-4: A project shall not contain non-volatile P" +
	"OD variables having only one use.\x02Violation of MISRA C++:2008 Rule 0-" +
	"1-5: A project shall not contain unused type declarations.\x02Violation " +
	"of MISRA C++:2008 Rule 0-1-6: A project shall not contain instances of n" +
	"on-volatile variables being given values that are never subsequently use" +
	"d.\x02Violation of MISRA C++:2008 Rule 0-1-7: The value returned by a fu" +
	"nction having a non-void return type that is not an overloaded operator " +
	"shall always be used.\x02Violation of MISRA C++:2008 Rule 0-1-8: All fun" +
	"ctions with void return type shall have external side effect(s).\x02Viol" +
	"ation of MISRA C++:2008 Rule 0-1-9: There shall be no dead code.\x02Viol" +
	"ation of MISRA C++:2008 Rule 0-1-10: Every defined function shall be cal" +
	"led at least once.\x02Violation of MISRA C++:2008 Rule 0-1-11: There sha" +
	"ll be no unused parameters (named or unnamed) in non-virtual functions." +
	"\x02Violation of MISRA C++:2008 Rule 0-1-12: There shall be no unused pa" +
	"rameters (named or unnamed) in the set of parameters for a virtual funct" +
	"ion and all the functions that override it.\x02Violation of MISRA C++:20" +
	"08 Rule 0-2-1: An object shall not be assigned to an overlapping object." +
	"\x02Violation of MISRA C++:2008 Rule 0-3-1: Minimization of run-time fai" +
	"lures shall be ensured by the use of at least one of: (a) static analysi" +
	"s tools/techniques; (b) dynamic tools/techniques; (c) explicit coding of" +
	" checks to handle run-time faults.\x02Violation of MISRA C++:2008 Rule 0" +
	"-3-2: If a function generates error information, then that error informa" +
	"tion shall be tested.\x02Violation of MISRA C++:2008 Rule 0-4-1: Use of " +
	"scaled-integer or fixed-point arithmetic shall be documented.\x02Violati" +
	"on of MISRA C++:2008 Rule 0-4-2: Use of floating-point arithmetic shall " +
	"be documented.\x02Violation of MISRA C++:2008 Rule 0-4-3: Floating-point" +
	" implementations shall comply with a defined floating-point standard." +
	"\x02Violation of MISRA C++:2008 Rule 1-0-1: All code shall conform to IS" +
	"O/IEC 14882:2003 \x22The C++ Standard Incorporating Technical Corrigendu" +
	"m 1\x22.\x02Violation of MISRA C++:2008 Rule 1-0-2: Multiple compilers s" +
	"hall only be used if they have a common, defined interface.\x02Violation" +
	" of MISRA C++:2008 Rule 1-0-3: The implementation of integer division in" +
	" the chosen compiler shall be determined and documented.\x02Violation of" +
	" MISRA C++:2008 Rule 2-2-1: The character set and the corresponding enco" +
	"ding shall be documented.\x02Violation of MISRA C++:2008 Rule 2-3-1: Tri" +
	"graphs shall not be used.\x02Violation of MISRA C++:2008 Rule 2-5-1: Dig" +
	"raphs should not be used.\x02Violation of MISRA C++:2008 Rule 2-7-1: The" +
	" character sequence /* shall not be used within a C-style comment.\x02Vi" +
	"olation of MISRA C++:2008 Rule 2-7-2: Sections of code shall not be \x22" +
	"commented out\x22 using C-style comments.\x02Violation of MISRA C++:2008" +
	" Rule 2-7-3: Sections of code should not be \x22commented out\x22 using " +
	"C++ comments.\x02Violation of MISRA C++:2008 Rule 2-10-1: Different iden" +
	"tifiers shall be typographically unambiguous.\x02Violation of MISRA C++:" +
	"2008 Rule 2-10-2: Identifiers declared in an inner scope shall not hide " +
	"an identifier declared in an outer scope.\x02Violation of MISRA C++:2008" +
	" Rule 2-10-3: A typedef name (including qualification, if any) shall be " +
	"a unique identifier.\x02Violation of MISRA C++:2008 Rule 2-10-4: A class" +
	", union or enum name (including qualification, if any) shall be a unique" +
	" identifier.\x02Violation of MISRA C++:2008 Rule 2-10-5: The identifier " +
	"name of a non-member object or function with static storage duration sho" +
	"uld not be reused.\x02Violation of MISRA C++:2008 Rule 2-10-6: If an ide" +
	"ntifier refers to a type, it shall not also refer to an object or a func" +
	"tion in the same scope.\x02Violation of MISRA C++:2008 Rule 2-13-1: Only" +
	" those escape sequences that are defined in ISO/IEC 14882:2003 shall be " +
	"used.\x02Violation of MISRA C++:2008 Rule 2-13-2: Octal constants (other" +
	" than zero) and octal escape sequences (other than \x22\\0\x22) shall no" +
	"t be used.\x02Violation of MISRA C++:2008 Rule 2-13-3: A \x22U\x22 suffi" +
	"x shall be applied to all octal or hexadecimal integer literals of unsig" +
	"ned type.\x02Violation of MISRA C++:2008 Rule 2-13-4: Literal suffixes s" +
	"hall be upper case.\x02Violation of MISRA C++:2008 Rule 2-13-5: Narrow a" +
	"nd wide string literals shall not be concatenated.\x02Violation of MISRA" +
	" C++:2008 Rule 3-1-1: It shall be possible to include any header file in" +
	" multiple translation units without violaing the One Definition Rule." +
	"\x02Violation of MISRA C++:2008 Rule 3-1-2: Functions shall not be decla" +
	"red at block scope.\x02Violation of MISRA C++:2008 Rule 3-1-3: When an a" +
	"rray is declared, its size shall either be stated explicitly or defined " +
	"implicitly by initialization.\x02Violation of MISRA C++:2008 Rule 3-2-1:" +
	" All declarations of an object or function shall have compatible types." +
	"\x02Violation of MISRA C++:2008 Rule 3-2-2: The One Definition Rule shal" +
	"l not be violated.\x02Violation of MISRA C++:2008 Rule 3-2-3: A type, ob" +
	"ject or function that is used in multiple translation units shall be dec" +
	"lared in one and only one file.\x02Violation of MISRA C++:2008 Rule 3-2-" +
	"4: An identifier with external linkage shall have exactly one definition" +
	".\x02Violation of MISRA C++:2008 Rule 3-3-1: Objects or functions with e" +
	"xternal linkage shall be declared in a header file.\x02Violation of MISR" +
	"A C++:2008 Rule 3-3-2: If a function has internal linkage then all re-de" +
	"clarations shall include the static storage class specifier.\x02Violatio" +
	"n of MISRA C++:2008 Rule 3-4-1: An identfier declared to be an object or" +
	" type shall be defined in a block that minimizes its visibility.\x02Viol" +
	"ation of MISRA C++:2008 Rule 3-9-1: The types used for an object, a func" +
	"tion return type, or a function parameter shalll be token-for-token iden" +
	"tical in all declarations and re-declarations.\x02Violation of MISRA C++" +
	":2008 Rule 3-9-2: typedefs that indicate size and signedness should be u" +
	"sed in place of the basic numerical types.\x02Violation of MISRA C++:200" +
	"8 Rule 3-9-3: The underlying bit representations of floating-point value" +
	"s shall not be used .\x02Violation of MISRA C++:2008 Rule 4-5-1: Express" +
	"ions with type bool shall not be used as operands to built-in operators " +
	"other than the assignment operator =, the logical operators &&, ||, !, t" +
	"he equality operators == and !=, the unary & operator, and the condition" +
	"al operator.\x02Violation of MISRA C++:2008 Rule 4-5-2: Expressions with" +
	" type enum shall not be used as operands to built-in operators other tha" +
	"n the subscript operator [ ], the assignment operator =, the equality op" +
	"erators == and !=, the unary & operator, and the relational operators <," +
	" <=, >, >=.\x02Violation of MISRA C++:2008 Rule 4-5-3: Expressions with " +
	"type (plain) char and wchar_t shall not be used as operands to built-in " +
	"operators other than the assignment operator =, the equality operators =" +
	"= and !=, and the unary & operator.\x02Violation of MISRA C++:2008 Rule " +
	"4-10-1: NULL shall not be used as an integer value.\x02Violation of MISR" +
	"A C++:2008 Rule 4-10-2: Literal zero (0) shall not be used as the null-p" +
	"ointer-constant\x02Violation of MISRA C++:2008 Rule 5-0-1: The value of " +
	"an expression shall be the same under any order of evaluation that the s" +
	"tandard permits.\x02Violation of MISRA C++:2008 Rule 5-0-2: Limited depe" +
	"ndence should be placed on C++ operator precedence rules in expressions." +
	"\x02Violation of MISRA C++:2008 Rule 5-0-3: A cvalue expression shall no" +
	"t be implicitly converted to a different underlying type.\x02Violation o" +
	"f MISRA C++:2008 Rule 5-0-4: An implicit integral conversion shall not c" +
	"hange the signedness of the underlying type.\x02Violation of MISRA C++:2" +
	"008 Rule 5-0-5: There shall be no implicit floating-integral conversions" +
	".\x02Violation of MISRA C++:2008 Rule 5-0-6: An implicit integral or flo" +
	"ating-point conversion shall not reduce the size of the underlying type." +
	"\x02Violation of MISRA C++:2008 Rule 5-0-7: There shall be no explicit f" +
	"loating-integral conversions of a cvalue expression.\x02Violation of MIS" +
	"RA C++:2008 Rule 5-0-8: An explicit integral or floating-point conversio" +
	"n shall not increase the size of the underlying type of a cvalue express" +
	"ion.\x02Violation of MISRA C++:2008 Rule 5-0-9: An explicit integral con" +
	"version shall not change the signedness of the underlying type of a cval" +
	"ue expression.\x02Violation of MISRA C++:2008 Rule 5-0-10: If the bitwis" +
	"e operators ~ and << are applied to an operand with an underlying type o" +
	"f unsigned char or unsigned short, the result shall be immediately cast " +
	"to the underlying type of the operand.\x02Violation of MISRA C++:2008 Ru" +
	"le 5-0-11: The plain char type shall only be used for the storage and us" +
	"e of character values.\x02Violation of MISRA C++:2008 Rule 5-0-12: signe" +
	"d char and unsigned char type shall only be used for the storage and use" +
	" of numeric values.\x02Violation of MISRA C++:2008 Rule 5-0-13: The cond" +
	"ition of an if-statement and the condition of an iteration-statement sha" +
	"ll have type bool.\x02Violation of MISRA C++:2008 Rule 5-0-14: The first" +
	" operand of a conditional-operator shall have type bool.\x02Violation of" +
	" MISRA C++:2008 Rule 5-0-15: Array indexing shall be the only form of po" +
	"inter arithmetic.\x02Violation of MISRA C++:2008 Rule 5-0-16: A pointer " +
	"operand and any pointer resulting from pointer arithmetic using that ope" +
	"rand shall both address elements of the same array.\x02Violation of MISR" +
	"A C++:2008 Rule 5-0-17: Subtraction between pointers shall only be appli" +
	"ed to pointers that address elements of the same array.\x02Violation of " +
	"MISRA C++:2008 Rule 5-0-18: >, >=, <, <= shall not be applied to objects" +
	" of pointer type, except where they point to the same array.\x02Violatio" +
	"n of MISRA C++:2008 Rule 5-0-19: The declaration of objects shall contai" +
	"n no more than two levels of pointer indirection.\x02Violation of MISRA " +
	"C++:2008 Rule 5-0-20: Non-constant operands to a binary bitwise operator" +
	" shall have the same underlying type.\x02Violation of MISRA C++:2008 Rul" +
	"e 5-0-21: Bitwise operators shall only be applied to operands of unsigne" +
	"d underlying type.\x02Violation of MISRA C++:2008 Rule 5-2-1: Each opera" +
	"nd of a logical && or | | shall be a postfix-expression.\x02Violation of" +
	" MISRA C++:2008 Rule 5-2-2: A pointer to a virtual base class shall only" +
	" be cast to a pointer to a derived class by means of dynamic_cast.\x02Vi" +
	"olation of MISRA C++:2008 Rule 5-2-3: Casts from a base class to a deriv" +
	"ed class should not be performed on polymorphic types.\x02Violation of M" +
	"ISRA C++:2008 Rule 5-2-4: C-style casts (other than void casts) and func" +
	"tional notation casts (other than explicit constructor call) shall not b" +
	"e used.\x02Violation of MISRA C++:2008 Rule 5-2-5: A cast shall not remo" +
	"ve any const or volatile qualification from the type of a pointer or ref" +
	"erence.\x02Violation of MISRA C++:2008 Rule 5-2-6: A cast shall not conv" +
	"ert a pointer to a function to any other pointer type, including a point" +
	"er to function type.\x02Violation of MISRA C++:2008 Rule 5-2-7: An objec" +
	"t with pointer type shall not be converted to an unrelated pointer type," +
	" either directly or indirectly.\x02Violation of MISRA C++:2008 Rule 5-2-" +
	"8: An object with integer type or pointer to void type shall not be conv" +
	"erted to an object with poiner type.\x02Violation of MISRA C++:2008 Rule" +
	" 5-2-9: A cast should not convert a pointer type to an integral type." +
	"\x02Violation of MISRA C++:2008 Rule 5-2-10: The increment (++) and decr" +
	"ement (--) operators should not be mixed with other operators in an exre" +
	"ssion.\x02Violation of MISRA C++:2008 Rule 5-2-11: The comma operator, &" +
	"& operator and the || operator shall not be overloaded.\x02Violation of " +
	"MISRA C++:2008 Rule 5-2-12: An identifier with array type passed as a fu" +
	"nction argument shall not decay to a pointer.\x02Violation of MISRA C++:" +
	"2008 Rule 5-3-1: Each operand of the ! operator, the logical && or the l" +
	"ogical operators shall have type bool.\x02Violation of MISRA C++:2008 Ru" +
	"le 5-3-2: The unary minus operator shall not be applied to an expression" +
	" whose underlying type is unsigned.\x02Violation of MISRA C++:2008 Rule " +
	"5-3-3: The unary & operator shall not be overloaded.\x02Violation of MIS" +
	"RA C++:2008 Rule 5-3-4: Evaluation of the operand to the sizeof operator" +
	" shall not contain side effects.\x02Violation of MISRA C++:2008 Rule 5-8" +
	"-1: The right hand operand of a shift operator shall lie between zero an" +
	"d one less than the width in bits of the underlying type of the left han" +
	"d operand.\x02Violation of MISRA C++:2008 Rule 5-14-1: The right hand op" +
	"erand of a logical && or || operator shall not contain side effects.\x02" +
	"Violation of MISRA C++:2008 Rule 5-17-1: The semantic equivalence betwee" +
	"n a binary operator and its asignment operator form shall be preserved." +
	"\x02Violation of MISRA C++:2008 Rule 5-18-1: The comma operator shall no" +
	"t be used.\x02Violation of MISRA C++:2008 Rule 5-19-1: Evaluation of con" +
	"stant unsigned integer expressions should not lead to wrap-around.\x02Vi" +
	"olation of MISRA C++:2008 Rule 6-2-1: Assignment operators shall not be " +
	"used in sub-expressions.\x02Violation of MISRA C++:2008 Rule 6-2-2: Floa" +
	"ting-point expressions shall not be directly or indirectly tested for eq" +
	"uality or inequality.\x02Violation of MISRA C++:2008 Rule 6-2-3: Before " +
	"preprocessing, a null statement shall only occur on a line by itself; it" +
	" may be followed by a comment, provided that the first character followi" +
	"ng the null statement is a white-space character.\x02Violation of MISRA " +
	"C++:2008 Rule 6-3-1: The statement forming the body of a switch, while, " +
	"do ... while or for statement shall be a compound statement.\x02Violatio" +
	"n of MISRA C++:2008 Rule 6-4-1: An if (condition) construct shall be fol" +
	"lowed by a compound statement. The else keyword shall be followed by eit" +
	"her a compound statement, or another if statement.\x02Violation of MISRA" +
	" C++:2008 Rule 6-4-2: All if ... else if constructs shall be terminated " +
	"with an else clause.\x02Violation of MISRA C++:2008 Rule 6-4-3: A switch" +
	" statement shall be a well-formed switch statement.\x02Violation of MISR" +
	"A C++:2008 Rule 6-4-4: A switch-label shall only be used when the most c" +
	"losely-enclosing compound statement is the body of a switch statement." +
	"\x02Violation of MISRA C++:2008 Rule 6-4-5: An unconditional throw or br" +
	"eak statement shall terminate every non-empty switch-clause.\x02Violatio" +
	"n of MISRA C++:2008 Rule 6-4-6: The final clause of a switch statement s" +
	"hall be the default-clause.\x02Violation of MISRA C++:2008 Rule 6-4-7: T" +
	"he condition of a switch statement shall not have bool type.\x02Violatio" +
	"n of MISRA C++:2008 Rule 6-4-8: Every switch statement shall have at lea" +
	"st one case-clause,\x02Violation of MISRA C++:2008 Rule 6-5-1: A for loo" +
	"p shall contain a single loop-counter which shall not have floating type" +
	".\x02Violation of MISRA C++:2008 Rule 6-5-2: If loop-counter is not modi" +
	"fied by -- or ++, then, within condition, the loop-counter shall only be" +
	" used as an operand to <=, <, > or >=.\x02Violation of MISRA C++:2008 Ru" +
	"le 6-5-3: The loop-counter shall not be modified within statement.\x02Vi" +
	"olation of MISRA C++:2008 Rule 6-5-4: The loop-counter shall be modified" +
	" by one of: --, ++,-=n, or +=n; where n remains constant for the duratio" +
	"n of the loop.\x02Violation of MISRA C++:2008 Rule 6-5-5: A loop-control" +
	"-variable other than the loop-counter shall not be modified within condi" +
	"tion or expression.\x02Violation of MISRA C++:2008 Rule 6-5-6: A loop-co" +
	"ntrol-variable other than the loop-counter which is modified in statemen" +
	"t shall have type bool.\x02Violation of MISRA C++:2008 Rule 6-6-1: Any l" +
	"abel referenced by a goto statement shall be declared in the same block," +
	" or in a block enclosing the goto statement.\x02Violation of MISRA C++:2" +
	"008 Rule 6-6-2: The goto statement shall jump to a label declared later " +
	"in the same function body.\x02Violation of MISRA C++:2008 Rule 6-6-3: Th" +
	"e continue statement shall only be used within a well-formed for loop." +
	"\x02Violation of MISRA C++:2008 Rule 6-6-4: For any iteration statement " +
	"there shall be no more than one break or goto statement used for loop te" +
	"rmination.\x02Violation of MISRA C++:2008 Rule 6-6-5: A function shall h" +
	"ave a single point of exit at the end of the function.\x02Violation of M" +
	"ISRA C++:2008 Rule 7-1-1: A variable which is not modified shall be cons" +
	"t qualified.\x02Violation of MISRA C++:2008 Rule 7-1-2: A pointer or ref" +
	"erence parameter in a function shall be declared as pointer to const or " +
	"reference to const if the corresponding object is not modified.\x02Viola" +
	"tion of MISRA C++:2008 Rule 7-2-1: An expression with enum underlying ty" +
	"pe shall only have values corresponding to the enumerators of the enumer" +
	"ation.\x02Violation of MISRA C++:2008 Rule 7-3-1: The global namespace s" +
	"hall only contain main, namespace declarations and extern \x22C\x22 decl" +
	"arations.\x02Violation of MISRA C++:2008 Rule 7-3-2: The identifier main" +
	" shall not be used for a function other than the global function main." +
	"\x02Violation of MISRA C++:2008 Rule 7-3-3: There shall be no unnamed na" +
	"mespaces in header files.\x02Violation of MISRA C++:2008 Rule 7-3-4: usi" +
	"ng-directives shall not be used.\x02Violation of MISRA C++:2008 Rule 7-3" +
	"-5: Multiple declarations for an identifier in the same namespace shall " +
	"not straddle a using-declaration for that idenifier.\x02Violation of MIS" +
	"RA C++:2008 Rule 7-3-6: using-directives and using-declarations (excludi" +
	"ng class scope or function scope using-declarations) shall not be used i" +
	"n header files.\x02Violation of MISRA C++:2008 Rule 7-4-1: All usage of " +
	"assembler shall be documented.\x02Violation of MISRA C++:2008 Rule 7-4-2" +
	": Assembler instructions shall only be introduced using the asm declarat" +
	"ion.\x02Violation of MISRA C++:2008 Rule 7-4-3: Assembly language shall " +
	"be encapsulated and isolated.\x02Violation of MISRA C++:2008 Rule 7-5-1:" +
	" A function shall not return a reference or a pointer to an automatic va" +
	"riable (including parameters) defined within the function.\x02Violation " +
	"of MISRA C++:2008 Rule 7-5-2: The address of an object with automatic st" +
	"orage shall not be assigned to another object that may persist after the" +
	" first object has ceased to exist.\x02Violation of MISRA C++:2008 Rule 7" +
	"-5-3: A function shall not return a reference or a pointer to a paramete" +
	"r that is passed by reference or const reference.\x02Violation of MISRA " +
	"C++:2008 Rule 7-5-4: Functions should not call themselves, either direct" +
	"ly or indirectly.\x02Violation of MISRA C++:2008 Rule 8-0-1: An init-dec" +
	"larator-list or a member-declarator-list shall consist of a single init-" +
	"declarator or member-declarator respectively.\x02Violation of MISRA C++:" +
	"2008 Rule 8-3-1: Parameters in an overriding virtual function shall eith" +
	"er use the same default arguments as the function they ovrride, or else " +
	"shall not specify any default arguments.\x02Violation of MISRA C++:2008 " +
	"Rule 8-4-1: Functions shall not be defined using the ellipsis notation." +
	"\x02Violation of MISRA C++:2008 Rule 8-4-2: The identifiers used for the" +
	" parameters in a re-declaration of a function shall be identical to thos" +
	"e in the declaration.\x02Violation of MISRA C++:2008 Rule 8-4-3: All exi" +
	"t paths from a function with non-void return type shall have an explicit" +
	" return statement with an expression.\x02Violation of MISRA C++:2008 Rul" +
	"e 8-4-4: A function identifier shall either be used to call the function" +
	" or it shall be preceded by &.\x02Violation of MISRA C++:2008 Rule 8-5-1" +
	": All variables shall have a defined value before they are used.\x02Viol" +
	"ation of MISRA C++:2008 Rule 8-5-2: Braces shall be used to indicate and" +
	" match the structure in the non-zero initialization of arrays and struct" +
	"ures.\x02Violation of MISRA C++:2008 Rule 8-5-3: In an enumerator list, " +
	"the = construct shall not be used to explicitly initialize members other" +
	" than the first, unless all items are explicitly initialized.\x02Violati" +
	"on of MISRA C++:2008 Rule 9-3-1: const member functions shall not return" +
	" non-const pointers or references to class-data.\x02Violation of MISRA C" +
	"++:2008 Rule 9-3-2: Member functions shall not return non-const handles " +
	"to class-data.\x02Violation of MISRA C++:2008 Rule 9-3-3: If a member fu" +
	"nction can be made static then it shall be made static, otherwise if it " +
	"can be made const then it shall be made const.\x02Violation of MISRA C++" +
	":2008 Rule 9-5-1: Unions shall not be used.\x02Violation of MISRA C++:20" +
	"08 Rule 9-6-1: When the absolute positioning of bits representing a bit-" +
	"field is required, then the behaviour and packing of bit-fields shall be" +
	" documented.\x02Violation of MISRA C++:2008 Rule 9-6-2: Bit-fields shall" +
	" be either bool type or an explicitly unsigned or signed integral type." +
	"\x02Violation of MISRA C++:2008 Rule 9-6-3: Bit-fields shall not have en" +
	"um type.\x02Violation of MISRA C++:2008 Rule 9-6-4: Named bit-fields wit" +
	"h signed integer type shall have a length of more than one bit.\x02Viola" +
	"tion of MISRA C++:2008 Rule 10-1-1: Classes should not be derived from v" +
	"irtual bases.\x02Violation of MISRA C++:2008 Rule 10-1-2: A base class s" +
	"hall only be declared virtual if it is used in a diamond hierarchy.\x02V" +
	"iolation of MISRA C++:2008 Rule 10-1-3: An accessible base class shall n" +
	"ot be both virtual and non-virtual in the same hierarchy.\x02Violation o" +
	"f MISRA C++:2008 Rule 10-2-1: All accessible entity names within a multi" +
	"ple inheritance hierarchy should be unique.\x02Violation of MISRA C++:20" +
	"08 Rule 10-3-1: There shall be no more than one definition of each virtu" +
	"al function on each path through the inheritance hierarchy.\x02Violation" +
	" of MISRA C++:2008 Rule 10-3-2: Each overriding virtual function shall b" +
	"e declared with the virtual keyword.\x02Violation of MISRA C++:2008 Rule" +
	" 10-3-3: A virtual function shall only be overridden by a pure virtual f" +
	"unction if it is itself declared as pure virtual.\x02Violation of MISRA " +
	"C++:2008 Rule 11-0-1: Member data in non-POD class types shall be privat" +
	"e.\x02Violation of MISRA C++:2008 Rule 12-1-1: An object's dynamic type " +
	"shall not be used from the body of its constructor or destructor.\x02Vio" +
	"lation of MISRA C++:2008 Rule 12-1-2: AlI constructors of a class should" +
	" explicitly call a constructor for all of its immediate base classes and" +
	" all virtual base classes.\x02Violation of MISRA C++:2008 Rule 12-1-3: A" +
	"ll constructors that are callable with a single argument of fundamental " +
	"type shall be declared explicit.\x02Violation of MISRA C++:2008 Rule 12-" +
	"8-1: A copy constructor shall only initialize its base classes and the n" +
	"on-static members of the class of which it is a member.\x02Violation of " +
	"MISRA C++:2008 Rule 12-8-2: The copy assignment operator shall be declar" +
	"ed protected or private in an abstract class.\x02Violation of MISRA C++:" +
	"2008 Rule 14-5-1: A non-member genericfunction shall only be declared in" +
	" a namespace that is not an associated namespace.\x02Violation of MISRA " +
	"C++:2008 Rule 14-5-2: A copy constructor shall be declared when there is" +
	" a template constuctor with a single parameter that is a generic paramet" +
	"er.\x02Violation of MISRA C++:2008 Rule 14-5-3: A copy assignment operat" +
	"or shall be declared when there is a template assignment operator with a" +
	" parameter that is a generic parameter:\x02Violation of MISRA C++:2008 R" +
	"ule 14-6-1: In a class template with a dependent base, any name that may" +
	" be found in that dependent base shall be referred to using a qualified-" +
	"id or this->.\x02Violation of MISRA C++:2008 Rule 14-6-2: The function c" +
	"hosen by overload resolution shall resolve to a function declared previo" +
	"usly in the translation unit.\x02Violation of MISRA C++:2008 Rule 14-7-1" +
	": All class templates, function templates, class template member functio" +
	"ns and class template static members shall be instantiated at least once" +
	".\x02Violation of MISRA C++:2008 Rule 14-7-2: For any given template spe" +
	"cialization, an explicit instantiation of the template with the template" +
	" arguments used in the specializaion shall not render the program ill-fo" +
	"rmed\x02Violation of MISRA C++:2008 Rule 14-7-3: All partial and explici" +
	"t specializations for a template shall be declared in the same file as t" +
	"he declaration of their primary template.\x02Violation of MISRA C++:2008" +
	" Rule 14-8-1: Overloaded function templates shall not be explicitly spec" +
	"ialized.\x02Violation of MISRA C++:2008 Rule 14-8-2: The viable function" +
	" set for a function call should either contain no function specializaion" +
	"s, or only contain function specializations.\x02Violation of MISRA C++:2" +
	"008 Rule 15-0-1: Exceptions shall only be used for error handling.\x02Vi" +
	"olation of MISRA C++:2008 Rule 15-0-2: An exception object should not ha" +
	"ve pointer type.\x02Violation of MISRA C++:2008 Rule 15-0-3: Control sha" +
	"ll not be transferred into a try or catch block using a goto or a switch" +
	" statement.\x02Violation of MISRA C++:2008 Rule 15-1-1: The assignment-e" +
	"xpression of a throw statement shall not itself cause an exception to be" +
	" thrown.\x02Violation of MISRA C++:2008 Rule 15-1-2: NULL shall not be t" +
	"hrown explicitly.\x02Violation of MISRA C++:2008 Rule 15-1-3: An empty t" +
	"hrow (throw;) shall only be used in the compound-statement of a catch ha" +
	"ndler.\x02Violation of MISRA C++:2008 Rule 15-3-1: Exceptions shall be r" +
	"aised only after start-up and before termination of the program.\x02Viol" +
	"ation of MISRA C++:2008 Rule 15-3-2: There should be at least one except" +
	"ion handler to catch all otherwise unhandled exceptions.\x02Violation of" +
	" MISRA C++:2008 Rule 15-3-3: Handlers of a function-try-block implementa" +
	"tion of a class constructor or destructor shall not reference non-static" +
	" members from this class or its bases.\x02Violation of MISRA C++:2008 Ru" +
	"le 15-3-4: Each exception explicitly thrown in the code shall have a han" +
	"dler of a compatible type in all calll paths that could lead to that poi" +
	"nt.\x02Violation of MISRA C++:2008 Rule 15-3-5: A class type exception s" +
	"hall always be caught by reference.\x02Violation of MISRA C++:2008 Rule " +
	"15-3-6: Where multiple handlers are provided in a single try-catch state" +
	"ment or, fuction-try-block for a derived class and some or all of its ba" +
	"ses, the handlers shall be ordered most-derived to base class.\x02Violat" +
	"ion of MISRA C++:2008 Rule 15-3-7: Where multiple handlers are provided " +
	"in a single try-catch statement or function-try-block, any elipsis (catc" +
	"h-all) handler shall occur last.\x02Violation of MISRA C++:2008 Rule 15-" +
	"4-1: If a function is declared with an exception-specification, then all" +
	" declarations of the same function (in other translaion units) shall be " +
	"declared with the same set of type -ids.\x02Violation of MISRA C++:2008 " +
	"Rule 15-5-1: A class destructor shall not exit with an exception.\x02Vio" +
	"lation of MISRA C++:2008 Rule 15-5-2: Where a function's declaration inc" +
	"ludes an exception-specification, the function shall only be capable of " +
	"throwing exceptions of the indicated type(s).\x02Violation of MISRA C++:" +
	"2008 Rule 15-5-3: The terminate() function shall not be called implicitl" +
	"y.\x02Violation of MISRA C++:2008 Rule 16-0-1: #include directives in a " +
	"file shall only be preceded by other preprocessor directives or comments" +
	".\x02Violation of MISRA C++:2008 Rule 16-0-2: Macros shall only be #defi" +
	"ne’d or #undef'd in the global namespace.\x02Violation of MISRA C++:2008" +
	" Rule 16-0-3: #undef shall not be used.\x02Violation of MISRA C++:2008 R" +
	"ule 16-0-4: Function-like macros shall not be defined.\x02Violation of M" +
	"ISRA C++:2008 Rule 16-0-5: Arguments to a function-like macro shall not " +
	"contain tokens that look like preprocessing directives.\x02Violation of " +
	"MISRA C++:2008 Rule 16-0-6: In the definition of a function-like macro, " +
	"each instance of a parameter shall be enclosed in parentheses, unless it" +
	" is used as the operand of # or ##.\x02Violation of MISRA C++:2008 Rule " +
	"16-0-7: Undefined macro identifiers shall not be used in #if or #elif pr" +
	"eprocessor directives, except as operands to the defined operator.\x02Vi" +
	"olation of MISRA C++:2008 Rule 16-0-8: If the # token appears as the fir" +
	"st token on a line, then it shall be immediately followed by a preproces" +
	"sing token.\x02Violation of MISRA C++:2008 Rule 16-1-1: The defined prep" +
	"rocessor operator shall only be used in one of the two standard forms." +
	"\x02Violation of MISRA C++:2008 Rule 16-1-2: All #else, #elif and #endif" +
	" preprocessor directives shall reside in the same file as the #if or #if" +
	"def directive to which they are related.\x02Violation of MISRA C++:2008 " +
	"Rule 16-2-1: The pre-processor shall only be used for file inclusion and" +
	" include guards.\x02Violation of MISRA C++:2008 Rule 16-2-2: C++ macros " +
	"shall only be used for include guards, type qualifiers, or storage class" +
	" specifiers.\x02Violation of MISRA C++:2008 Rule 16-2-3: Include guards " +
	"shall be provided.\x02Violation of MISRA C++:2008 Rule 16-2-4: The ', " +
	"\x22, /* or // characters shall not occur in a header file name.\x02Viol" +
	"ation of MISRA C++:2008 Rule 16-2-5: The \\ character should not occur i" +
	"n a header file name.\x02Violation of MISRA C++:2008 Rule 16-2-6: The #i" +
	"nclude directive shall be followed by either a <filename> or \x22filenam" +
	"e\x22 sequence.\x02Violation of MISRA C++:2008 Rule 16-3-1: There shall " +
	"be at most one occurrence of the # or ## operators in a single macro def" +
	"inition.\x02Violation of MISRA C++:2008 Rule 16-3-2: The # and ## operat" +
	"ors should not be used.\x02Violation of MISRA C++:2008 Rule 16-6-1: All " +
	"uses of the #pragma directive shall be documented.\x02Violation of MISRA" +
	" C++:2008 Rule 17-0-1: Reserved identifiers, macros and functions in the" +
	" standard library shall not be defined, redefined or undefined.\x02Viola" +
	"tion of MISRA C++:2008 Rule 17-0-2: The names of standard library macros" +
	" and objects shall not be reused.\x02Violation of MISRA C++:2008 Rule 17" +
	"-0-3: The names of standard library functions shall not be overridden." +
	"\x02Violation of MISRA C++:2008 Rule 17-0-4: All library code shall conf" +
	"orm to MISRA C++.\x02Violation of MISRA C++:2008 Rule 17-0-5: The setjmp" +
	" macro and the longjmp function shall not be used.\x02Violation of MISRA" +
	" C++:2008 Rule 18-0-1: The C library shall not be used.\x02Violation of " +
	"MISRA C++:2008 Rule 18-0-2: The library functions atof, atoi and atol fr" +
	"om library <cstdlib> shall not be used.\x02Violation of MISRA C++:2008 R" +
	"ule 18-0-3: The library functions abort, exit, getenv and system from li" +
	"brary <cstdlib> shall not be used.\x02Violation of MISRA C++:2008 Rule 1" +
	"8-0-4: The time handling functions of library <ctime> shall not be used." +
	"\x02Violation of MISRA C++:2008 Rule 18-0-5: The unbounded functions of " +
	"library <cstring> shall not be used.\x02Violation of MISRA C++:2008 Rule" +
	" 18-2-1: The macro offsetof shall not be used.\x02Violation of MISRA C++" +
	":2008 Rule 18-4-1: Dynamic heap memory allocation shall not be used.\x02" +
	"Violation of MISRA C++:2008 Rule 18-7-1: The signal handling facilities " +
	"of <csignal> shall not be used.\x02Violation of MISRA C++:2008 Rule 19-3" +
	"-1: The error indicator errno shall not be used.\x02Violation of MISRA C" +
	"++:2008 Rule 27-0-1: The stream input/output library <cstdio> shall not " +
	"be used.\x02%[1]d lines of C code\x02%[1]d lines of C++ code\x02%[1]d li" +
	"nes of headers\x02Use %[1]d CPU(s)\x02Start preparing CTU information" +
	"\x02CTU information preparation completed [%[1]s]\x02Start preparing STU" +
	" information\x02%[1]s STU information preparation completed (%[2]v/%[3]v" +
	")\x02STU information preparation completed [%[1]s]\x02Analysis completed" +
	" [%[1]s]\x02%[1]s BuildAction preparation completed (%[2]v/%[3]v)\x02Bui" +
	"ldAction preparation completed [%[1]s]\x02Starting generating CTU infoma" +
	"tion\x02%[1]s CTU information generated (%[2]v/%[3]v)\x02CTU information" +
	" generated successfully [%[1]s]\x02Starting writing CTU information\x02W" +
	"riting CTU information completed [%[1]s]"

var zhIndex = []uint32{ // 458 elements
	// Entry 0 - 1F
	0x00000000, 0x00000019, 0x00000032, 0x0000004d,
	0x00000070, 0x0000008b, 0x000000a3, 0x000000c3,
	0x000000e3, 0x00000111, 0x000001c3, 0x00000214,
	0x00000253, 0x00000295, 0x000002e4, 0x00000317,
	0x00000382, 0x000003d0, 0x00000412, 0x00000462,
	0x000004a1, 0x000004e7, 0x00000525, 0x00000573,
	0x000005b5, 0x00000616, 0x000006a2, 0x000006ff,
	0x0000076e, 0x000007a1, 0x000007e0, 0x0000087f,
	// Entry 20 - 3F
	0x00000924, 0x00000987, 0x00000a50, 0x00000b19,
	0x00000b6e, 0x00000bbf, 0x00000bf5, 0x00000c63,
	0x00000cac, 0x00000d30, 0x00000dc2, 0x00000e4c,
	0x00000e85, 0x00000f00, 0x00000f7c, 0x00000ff7,
	0x0000106a, 0x000010e7, 0x00001185, 0x0000122c,
	0x000012d3, 0x00001398, 0x0000141a, 0x0000149c,
	0x00001532, 0x000015c8, 0x0000167c, 0x0000170d,
	0x0000178b, 0x00001806, 0x00001852, 0x000018b6,
	// Entry 40 - 5F
	0x0000191a, 0x0000195a, 0x000019d2, 0x00001a26,
	0x00001a5c, 0x00001aad, 0x00001b10, 0x00001b56,
	0x00001bba, 0x00001c33, 0x00001ca9, 0x00001d01,
	0x00001d5f, 0x00001df6, 0x00001e63, 0x00001ef4,
	0x00001f58, 0x0000200a, 0x000020c8, 0x00002120,
	0x000021b7, 0x0000224e, 0x000022a1, 0x0000233f,
	0x000023d4, 0x00002430, 0x000024cd, 0x0000253d,
	0x000025e2, 0x0000263e, 0x00002684, 0x00002715,
	// Entry 60 - 7F
	0x00002753, 0x000027a5, 0x0000280f, 0x0000288f,
	0x00002951, 0x000029e2, 0x00002a8e, 0x00002ace,
	0x00002b14, 0x00002ba2, 0x00002c40, 0x00002ca7,
	0x00002ced, 0x00002d27, 0x00002d91, 0x00002df1,
	0x00002e52, 0x00002ec1, 0x00002f31, 0x00002f96,
	0x00002fd3, 0x00003016, 0x00003076, 0x000030a8,
	0x00003112, 0x0000317a, 0x000031de, 0x0000321e,
	0x00003273, 0x000032cb, 0x00003308, 0x00003372,
	// Entry 80 - 9F
	0x000033cc, 0x00003413, 0x00003484, 0x000034d3,
	0x00003519, 0x00003554, 0x000035b2, 0x000035fb,
	0x00003657, 0x000036e3, 0x00003775, 0x0000381c,
	0x000038d8, 0x0000395d, 0x000039b2, 0x00003a0e,
	0x00003a42, 0x00003a76, 0x00003b07, 0x00003b6e,
	0x00003c05, 0x00003c5b, 0x00003c9e, 0x00003d26,
	0x00003d7c, 0x00003dcb, 0x00003e22, 0x00003e7a,
	0x00003eb0, 0x00003f0a, 0x00003f6c, 0x00003fd1,
	// Entry A0 - BF
	0x0000400e, 0x0000403c, 0x0000408b, 0x000040da,
	0x0000413c, 0x000041c4, 0x00004205, 0x00004267,
	0x000042ff, 0x00004350, 0x000043de, 0x00004469,
	0x000044e4, 0x00004549, 0x0000458a, 0x000045cb,
	0x0000460f, 0x0000467d, 0x000046e4, 0x0000473a,
	0x0000479b, 0x000047de, 0x00004824, 0x00004893,
	0x0000490b, 0x000049aa, 0x00004a51, 0x00004b0a,
	0x00004bfb, 0x00004c85, 0x00004d8e, 0x00004e25,
	// Entry C0 - DF
	0x00004ee1, 0x00004f2f, 0x00004f99, 0x00004ff7,
	0x0000505e, 0x000050aa, 0x00005105, 0x0000515e,
	0x000051d1, 0x00005230, 0x0000528c, 0x00005304,
	0x00005347, 0x0000538a, 0x000053ee, 0x0000545c,
	0x000054de, 0x00005534, 0x00005572, 0x000055cb,
	0x00005614, 0x00005636, 0x00005658, 0x0000567d,
	0x000056c9, 0x000056f4, 0x0000574f, 0x000057ac,
	0x000057e6, 0x000057fc, 0x00005830, 0x0000588d,
	// Entry E0 - FF
	0x00005906, 0x0000592e, 0x00005a01, 0x00005a47,
	0x00005a9b, 0x00005ac6, 0x00005af7, 0x00005b43,
	0x00005b8f, 0x00005be1, 0x00005c12, 0x00005c2b,
	0x00005c51, 0x00005c89, 0x00005cc7, 0x00005cf8,
	0x00005d29, 0x00005d84, 0x00005de6, 0x00005e4a,
	0x00005ea2, 0x00005f24, 0x00005f5b, 0x00005fb2,
	0x00006008, 0x0000602d, 0x0000606a, 0x000060d1,
	0x000060f6, 0x00006154, 0x0000618e, 0x000061ad,
	// Entry 100 - 11F
	0x00006208, 0x0000624b, 0x00006291, 0x00006304,
	0x00006362, 0x000063e1, 0x00006437, 0x00006483,
	0x00006553, 0x0000662c, 0x000066e3, 0x000066fd,
	0x0000672c, 0x00006790, 0x000067d0, 0x00006808,
	0x0000683f, 0x00006868, 0x0000689f, 0x000068d5,
	0x0000691c, 0x00006966, 0x00006a00, 0x00006a38,
	0x00006a80, 0x00006ac3, 0x00006afb, 0x00006b2c,
	0x00006ba5, 0x00006be2, 0x00006c3a, 0x00006c71,
	// Entry 120 - 13F
	0x00006cbd, 0x00006cfa, 0x00006d3e, 0x00006dd3,
	0x00006e24, 0x00006e93, 0x00006eec, 0x00006f56,
	0x00006fb1, 0x0000700d, 0x00007044, 0x000070a3,
	0x000070db, 0x00007124, 0x00007170, 0x000071bc,
	0x000071d9, 0x00007213, 0x00007283, 0x000072d6,
	0x00007322, 0x00007345, 0x0000737f, 0x000073ad,
	0x000073f9, 0x0000748a, 0x000074dc, 0x00007557,
	0x00007594, 0x000075c1, 0x00007610, 0x00007663,
	// Entry 140 - 15F
	0x0000769b, 0x000076c4, 0x000076f6, 0x0000774e,
	0x000077c5, 0x000077f6, 0x0000786b, 0x000078bd,
	0x0000791f, 0x00007977, 0x000079c9, 0x00007a10,
	0x00007a65, 0x00007a93, 0x00007abd, 0x00007b34,
	0x00007b84, 0x00007bd3, 0x00007c0f, 0x00007c40,
	0x00007c58, 0x00007cb5, 0x00007d25, 0x00007d53,
	0x00007d9a, 0x00007db9, 0x00007e14, 0x00007e7e,
	0x00007eed, 0x00007f15, 0x00007fc7, 0x00008049,
	// Entry 160 - 17F
	0x0000806b, 0x000080c3, 0x00008128, 0x00008175,
	0x000081a9, 0x00008204, 0x00008287, 0x000082cf,
	0x00008308, 0x000083a6, 0x000083bc, 0x0000841a,
	0x00008461, 0x0000847e, 0x000084c1, 0x000084e3,
	0x00008549, 0x00008598, 0x000085f3, 0x00008654,
	0x00008692, 0x000086ed, 0x0000871e, 0x0000877c,
	0x000087dd, 0x0000883b, 0x000088a3, 0x00008911,
	0x0000897a, 0x000089e7, 0x00008a48, 0x00008ad3,
	// Entry 180 - 19F
	0x00008b2b, 0x00008b98, 0x00008c2d, 0x00008c91,
	0x00008cbf, 0x00008d2c, 0x00008d4b, 0x00008d70,
	0x00008db6, 0x00008df2, 0x00008e09, 0x00008e60,
	0x00008e94, 0x00008ee0, 0x00008f62, 0x00008ff3,
	0x00009027, 0x00009109, 0x000091a3, 0x0000925b,
	0x00009289, 0x000092e4, 0x00009308, 0x00009350,
	0x0000938b, 0x0000939e, 0x000093b7, 0x00009400,
	0x00009473, 0x000094e9, 0x0000953c, 0x0000957a,
	// Entry 1A0 - 1BF
	0x000095f3, 0x0000963c, 0x00009687, 0x000096a2,
	0x000096d6, 0x000096fc, 0x00009738, 0x00009781,
	0x000097a9, 0x000097d2, 0x0000982a, 0x0000985e,
	0x00009886, 0x000098b1, 0x000098d7, 0x000098ee,
	0x00009927, 0x0000996e, 0x0000999d, 0x000099c8,
	0x000099e0, 0x00009a02, 0x00009a30, 0x00009a51,
	0x00009a79, 0x00009a8c, 0x00009aa1, 0x00009ab6,
	0x00009ac5, 0x00009adb, 0x00009af9, 0x00009b0f,
	// Entry 1C0 - 1DF
	0x00009b38, 0x00009b56, 0x00009b6b, 0x00009b96,
	0x00009bb6, 0x00009bcc, 0x00009bef, 0x00009c0d,
	0x00009c23, 0x00009c41,
} // Size: 1856 bytes

const zhData string = "" + // Size: 40001 bytes
	"\x02开始生成编译数据\x02开始解析编译指令\x02开始预处理C/C++信息\x02预处理C/C++信息完成 [%[1]s]\x02分析一共" +
	"用时 [%[1]s]\x02开始分析C/C++代码\x02C/C++代码分析完成 [%[1]s]\x02开始分析%[1]s (%[2]v/%" +
	"[3]v)\x02分析完成%[2]s (%[3]v/%[4]v) %[1]s [%[5]s]\x02[C2201][misra-c2012-1." +
	"1]: 程序不得违反C语言标准语法和约束，不得超出实现的翻译限制\x0a结构体 %[1]s 中定义了 %[2]s 个成员，超过限制数 %[3]s" +
	"\x02[C2203][misra-c2012-1.3]: 不得出现未定义或严重的未指定行为\x0a%[1]s\x02[C2204][misra" +
	"-c2012-1.4]: 不得使用新涌现的语言特性\x02[C2007][misra-c2012-2.1]: 项目不得含有不可达代码\x0a%[" +
	"1]s\x02[C2006][misra-c2012-2.2]: 不得有死代码\x0a对空函数的调用是死代码\x02[C2006][misra-" +
	"c2012-2.2]: 不得有死代码\x0a%[1]s\x02[C2005][misra-c2012-2.3]: 项目不应含有未使用的类型声明" +
	"\x0a未使用的类型定义名称: %[1]s\x02[C2004][misra-c2012-2.4]: 项目不应含有未使用的标签（tag）声明" +
	"\x02[C2003][misra-c2012-2.5]: 项目不应含有未使用的宏声明\x02[C2002][misra-c2012-2.6]:" +
	" 项目不应含有未使用的标记（label）声明\x02[C2001][misra-c2012-2.7]: 函数中不应有未使用的形参\x02[C21" +
	"02][misra-c2012-3.1]: 不得在注释中使用字符序列/*和//\x02[C2101][misra-c2012-3.2]: 不得在" +
	"//注释中使用行拼接\x02[C1002][misra-c2012-4.1]: 八进制和十六进制转义序列必须被终止\x02[C1001][mis" +
	"ra-c2012-4.2]: 不应使用三字母词（trigraphs）\x02[C1109][misra-c2012-5.1]: 不得使用重名的外" +
	"部标识符\x0a包含非ASCII字符\x0a%[1]s: %[2]s\x02[C1109][misra-c2012-5.1]: 不得使用重名" +
	"的外部标识符\x0a%[1]s: %[2]s\x0a第一个标识符位置: %[3]s\x0a重复的标识符位置: %[4]s\x02[C1108" +
	"][misra-c2012-5.2]: 在同一作用域和命名空间内声明的标识符不得重名\x02[C1107][misra-c2012-5.3]: " +
	"在内部作用域声明的标识符不得隐藏在外部作用域声明的标识符\x02[C1106][misra-c2012-5.4]: 宏标识符不得重名\x02" +
	"[C1105][misra-c2012-5.5]: 标识符不得与宏的名称重名\x02[C1104][misra-c2012-5.6]: 类型定义" +
	"名称必须是唯一标识符\x0a类型定义: %[1]s\x0a第一个类型定义位置: %[2]s\x0a重复的类型定义位置: %[3]s\x02[" +
	"C1103][misra-c2012-5.7]: 标签（tag）名称必须是唯一标识符\x0a重复的标签名称: %[1]s\x0a第一个标识符位置" +
	": %[2]s\x0a重复的标识符位置: %[3]s\x02[C1103][misra-c2012-5.7]: 标签（tag）名称必须是唯一标识" +
	"符\x0a无效的声明在%[1]s处\x02[C1102][misra-c2012-5.8]: 只得使用唯一标识符定义含有外部链接的对象或函数" +
	"\x0a含有外部链接的%[1]s类型对象应当是唯一的\x0a名称: %[2]s\x0a位置: %[3]s\x0a其他位置: %[4]s\x02[" +
	"C1101][misra-c2012-5.9]: 应该使用唯一标识符定义含有内部链接的对象或函数\x0a含有内部链接的%[1]s类型对象应当是唯" +
	"一的\x0a名称: %[2]s\x0a位置: %[3]s\x0a其他位置: %[4]s\x02[C0702][misra-c2012-6.1" +
	"]: 只得使用合适的类型来声明位域（bit-fields）\x02[C0701][misra-c2012-6.2]: 一个一位的已命名位域不得为" +
	"有符号类型\x02[C0904][misra-c2012-7.1]: 不得使用八进制常量\x02[C0903][misra-c2012-7." +
	"2]: 所有表示为无符号类型的整型常量都必须使用“u”或“U”后缀\x02[C0902][misra-c2012-7.3]: 小写字母“l”不得" +
	"用作字面量后缀\x02[C0901][misra-c2012-7.4]: 不得将字符串字面量赋值给对象，除非对象类型为“指向const修饰的" +
	"char的指针”\x02[C0901][misra-c2012-7.4]: 不得将字符串字面量赋值给对象，除非对象类型为“指向const修饰的c" +
	"har的指针”\x0a位置: %[1]s\x02[C0901][misra-c2012-7.4]: 不得将字符串字面量赋值给对象，除非对象类型为" +
	"“指向const修饰的char的指针”\x0a%[1]s\x02[C0514][misra-c2012-8.1]: 必须明确指定类型\x0a" +
	"%[1]s\x02[C0513][misra-c2012-8.2]: 函数类型必须为带有命名形参的原型形式\x0a存在未命名形参\x0a函数名称" +
	": %[1]s\x02[C0513][misra-c2012-8.2]: 函数类型必须为带有命名形参的原型形式\x0a存在带有未命名形参的函数指" +
	"针\x02[C0513][misra-c2012-8.2]: 函数类型必须为带有命名形参的原型形式\x0a禁止使用K&R风格\x0a函数名称" +
	": %[1]s\x02[C0513][misra-c2012-8.2]: 函数类型必须为带有命名形参的原型形式\x0a缺少 'void'\x0a" +
	"函数名称: %[1]s\x02[C0512][misra-c2012-8.3]: 对同一对象或函数的所有声明必须使用同样的名称和类型修饰符" +
	"\x0a名称: %[1]s\x02[C0512][misra-c2012-8.3]: 对同一对象或函数的所有声明必须使用同样的名称和类型修饰符" +
	"\x0a名称: %[1]s位置: %[2]s\x0a其他位置: %[3]s\x02[C0511][misra-c2012-8.4]: 对含有外部" +
	"链接的对象或函数进行定义时，必须有可见的兼容声明\x0a缺少函数声明\x0a函数名称: %[1]s\x0a位置: %[2]s\x02[C05" +
	"11][misra-c2012-8.4]: 对含有外部链接的对象或函数进行定义时，必须有可见的兼容声明\x0a缺少变量声明\x0a变量名称: %" +
	"[1]s\x0a位置: %[2]s\x02[C0511][misra-c2012-8.4]: 对含有外部链接的对象或函数进行定义时，必须有可见的" +
	"兼容声明\x0a函数声明类型与定义类型不匹配\x0a函数名称: %[1]s\x0a定义位置: %[2]s\x02[C0510][misra-" +
	"c2012-8.5]: 外部对象或函数只得在一个文件里进行一次声明\x0a外部对象名称: %[1]s\x0a位置: %[2]s\x02[C051" +
	"0][misra-c2012-8.5]: 外部对象或函数只得在一个文件里进行一次声明\x0a外部函数名称: %[1]s\x0a位置: %[2]s" +
	"\x02[C0510][misra-c2012-8.5]: 外部对象或函数只得在一个文件里进行一次声明\x0a外部对象名称: %[1]s\x0a" +
	"位置: %[2]s\x0a其他位置: %[3]s\x02[C0510][misra-c2012-8.5]: 外部对象或函数只得在一个文件里进" +
	"行一次声明\x0a外部函数名称: %[1]s\x0a位置: %[2]s\x0a其他位置: %[3]s\x02[C0509][misra-c2" +
	"012-8.6]: 含有外部链接的标识符必须有且只有一个外部定义\x0a重复的变量名称: %[1]s\x0a第一个定义位置: %[2]s\x0a" +
	"重复的定义位置: %[3]s\x02[C0508][misra-c2012-8.7]: 不应使用外部链接定义仅在一个翻译单元中被引用的函数和" +
	"对象\x0a函数名称: %[1]s\x0a位置: %[2]s\x02[C0507][misra-c2012-8.8]: 对含有内部链接的对象" +
	"和函数进行的所有声明都必须使用静态存储类说明符\x02[C0506][misra-c2012-8.9]: 如果对象标识符只在一个函数中出现，" +
	"那么应该在块作用域中定义该对象\x02[C0505][misra-c2012-8.10]: 必须使用静态存储类别声明内联函数\x02[C05" +
	"04][misra-c2012-8.11]: 对含有外部链接的数组进行定义时，应显式指定其大小\x02[C0503][misra-c2012-8" +
	".12]: 枚举列表里，一个隐式指定的枚举常量的值应是唯一的\x02[C0501][misra-c2012-8.14]: 不得使用restric" +
	"t类型修饰符 \x02[C1205][misra-c2012-9.1]: 对于具有自动存储周期的对象，不得在设定它的值之前读取它的值\x0a%[" +
	"1]s\x02[C1204][misra-c2012-9.2]: 聚合或联合体的初始化器应包含在大括号内\x02[C1203][misra-c2" +
	"012-9.3]: 不得部分初始化数组\x02[C1202][misra-c2012-9.4]: 对象中的一个元素最多只得被初始化一次\x02[" +
	"C1201][misra-c2012-9.5]: 对数组对象进行指定初始化时，必须显式指定数组大小\x02[C0808][misra-c2012" +
	"-10.1]: 操作数不得为不合适的基本类型\x02[C0807][misra-c2012-10.2]: 不得在加减运算中不恰当地使用基本字符类" +
	"型的表达式\x02[C0806][misra-c2012-10.3]: 表达式的值不得赋给更窄的基本类型，也不得赋给不同的基本类型类别" +
	"\x02[C0805][misra-c2012-10.4]: 执行寻常算术转换的运算符的两个操作数必须属于同一基本类型类别\x02[C0804]" +
	"[misra-c2012-10.5]: 表达式的值不应强制转换为不合适的基本类型\x02[C0803][misra-c2012-10.6]: 复" +
	"合表达式的值不得赋给具有更宽基本类型的对象\x02[C0802][misra-c2012-10.7]: 寻常算术转换中，如果运算符的一个操作" +
	"数为复合表达式，则另一个操作数不得具有更宽类型\x02[C0801][misra-c2012-10.8]: 复合表达式的值不得强制转换为不同" +
	"基本类型类别或更宽类型\x02[C1409][misra-c2012-11.1]: 指向函数的指针和任何其他类型之间不得相互转换\x0a原类" +
	"型: %[1]s\x0a目标类型: %[2]s\x0a位置: %[3]s\x02[C1409][misra-c2012-11.1]: 指向函" +
	"数的指针和任何其他类型之间不得相互转换\x0a%[1]s\x02[C1408][misra-c2012-11.2]: 指向不完整类型的指针和" +
	"任何其他类型之间不得相互转换\x0a原指针对象类型: %[1]s\x0a目标指针对象类型: %[2]s\x0a位置: %[3]s\x02[C" +
	"1407][misra-c2012-11.3]: 指向对象类型的指针和指向不同对象类型的指针之间不得显式转换\x0a原指针对象类型: %[1]s" +
	"\x0a目标指针对象类型: %[2]s\x0a位置: %[3]s\x02[C1406][misra-c2012-11.4]: 指向对象的指针和整" +
	"数类型之间不应相互转换\x02[C1406][misra-c2012-11.4]: 指向对象的指针和整数类型之间不应相互转换\x0a原类型:" +
	" %[1]s\x0a目标指针对象类型: %[2]s\x0a位置: %[3]s\x02[C1406][misra-c2012-11.4]: 指向对" +
	"象的指针和整数类型之间不应相互转换\x0a原指针对象类型: %[1]s\x0a目标类型: %[2]s\x0a位置: %[3]s\x02[C1" +
	"405][misra-c2012-11.5]: 指向void的指针不应转换为指向对象的指针\x02[C1405][misra-c2012-11." +
	"5]: 指向void的指针不应转换为指向对象的指针\x0a原指针对象类型: %[1]s\x0a目标指针对象类型: %[2]s\x0a位置: %[" +
	"3]s\x02[C1404][misra-c2012-11.6]: 指向void的指针和算术类型之间不得显式转换\x0a原对象类型: %[1]s" +
	"\x0a目标对象类型: %[2]s\x0a位置: %[3]s\x02[C1404][misra-c2012-11.6]: 指向void的指针和算" +
	"术类型之间不得显式转换\x0a%[1]s\x02[C1403][misra-c2012-11.7]: 指向对象的指针和非整数类型的算术类型之" +
	"间不得显式转换\x0a原类型: %[1]s\x0a目标类型: %[2]s\x0a位置: %[3]s\x02[C1403][misra-c20" +
	"12-11.7]: 指向对象的指针和非整数类型的算术类型之间不得显式转换\x0a%[1]s\x02[C1402][misra-c2012-11." +
	"8]: 显式转换不得移除指针所指向类型的任何const或volatile修饰\x0a原指针对象类型: %[1]s\x0a目标指针对象类型: %[" +
	"2]s\x02[C1401][misra-c2012-11.9]: 宏NULL必须为整数类型空指针常量的唯一允许形式\x02[C0605][mi" +
	"sra-c2012-12.1]: 应明确表达式中操作数的优先级\x02[C0604][misra-c2012-12.2]: 移位运算符的右操作数" +
	"的范围下限为零，上限须比左操作数的基本类型的位宽度小一\x0a%[1]s\x02[C0603][misra-c2012-12.3]: 不得使" +
	"用逗号运算符（,）\x02[C0602][misra-c2012-12.4]: 对常量表达式进行求值不应导致整数回绕\x02[C0601][" +
	"misra-c2012-12.5]: sizeof运算符的操作数不得是声明为“数组类型”的函数形参\x02[C1606][misra-c2012" +
	"-13.1]: 初始化器列表不得含有持续的副作用\x0a初始化器列表含有被引用的易失性成员\x02[C1605][misra-c2012-13." +
	"2]: 采用任意允许采用的求值顺序时，表达式的值和表达式的持续的副作用不得发生改变\x0a函数调用顺序不同会导致表达式的值不同\x02[C160" +
	"5][misra-c2012-13.2]: 采用任意允许采用的求值顺序时，表达式的值和表达式的持续的副作用不得发生改变\x0a%[1]s\x02" +
	"[C1604][misra-c2012-13.3]: 含有一个自增或自减运算符的完整表达式，除因自增或自减运算符引起的副作用外，不应含有其他潜在" +
	"副作用\x02[C1603][misra-c2012-13.4]: 不得使用赋值运算符的结果\x02[C1603][misra-c2012-" +
	"13.4]: 不得使用赋值运算符的结果\x0a%[1]s\x02[C1602][misra-c2012-13.5]: 逻辑与（&&）和逻辑或（|" +
	"|）运算符的右操作数不得含有持续的副作用\x0a副作用位置: %[1]s\x02[C1602][misra-c2012-13.5]: 逻辑与（&" +
	"&）和逻辑或（||）运算符的右操作数不得含有持续的副作用\x0a函数%[1]s可能有持续的副作用\x02[C1601][misra-c2012-" +
	"13.6]: sizeof运算符的操作数不得包含任何有潜在副作用的表达式\x02[C1704][misra-c2012-14.1]: 循环计数器" +
	"不得为基本浮点类型\x02[C1704][misra-c2012-14.1]: for循环必须为良构\x0a%[1]s\x02[C1703]" +
	"[misra-c2012-14.2]: for循环必须为良构\x0afor循环中的%[1]s子句可能有持续的副作用\x02[C1703][mis" +
	"ra-c2012-14.2]: for循环必须为良构\x0a%[2]s子句没有使用循环计数器%[1]s\x02[C1703][misra-c20" +
	"12-14.2]: for循环必须为良构\x0a循环计数器%[1]s在循环体中被修改\x02[C1703][misra-c2012-14.2]:" +
	" for循环必须为良构\x0a%[1]s子句使用了在循环体内被修改的引用%[2]s\x02[C1703][misra-c2012-14.2]: " +
	"for循环必须为良构\x0a%[1]s子句必须设置且只能设置循环计数器的值\x02[C1703][misra-c2012-14.2]: for循" +
	"环必须为良构\x0a第二个子句使用了非布尔的控制标记\x02[C1702][misra-c2012-14.3]: 控制表达式不得为不变量" +
	"\x02[C1702][misra-c2012-14.3]: 控制表达式不得为不变量\x0a%[1]s\x02[C1701][misra-c20" +
	"12-14.4]: if语句和迭代语句的控制表达式必须为基本布尔类型\x02[C1807][misra-c2012-15.1]: 不应使用got" +
	"o语句\x02[C1806][misra-c2012-15.2]: 同一函数中，goto语句只得跳转到在其后声明的标记（label）\x02[C" +
	"1805][misra-c2012-15.3]: goto语句引用的标记必须在同一代码块或上级代码块中声明\x02[C1804][misra-c" +
	"2012-15.4]: 任何迭代语句最多只应使用一个break或goto语句进行终止\x02[C1803][misra-c2012-15.5]:" +
	" 函数结尾应只有一个退出点\x02[C1802][misra-c2012-15.6]: 迭代语句或分支语句的主体必须为复合语句\x02[C180" +
	"1][misra-c2012-15.7]: 所有if … else if构造都必须以一个else语句终止\x02[C1907][misra-c2" +
	"012-16.1]: 所有switch语句必须为良构\x02[C1906][misra-c2012-16.2]: switch标记只得出现在构成" +
	"switch语句主体的复合语句的最外层\x02[C1905][misra-c2012-16.3]: 每个switch子句都必须以一个无条件bre" +
	"ak语句终止\x02[C1904][misra-c2012-16.4]: 每个switch语句都必须有default标签\x02[C1903][" +
	"misra-c2012-16.5]: 在一个switch语句中，default标签必须是第一个或最后一个switch标签\x02[C1902][" +
	"misra-c2012-16.6]: 每个switch语句必须至少有两个switch子句\x02[C1901][misra-c2012-16.7" +
	"]: switch表达式不得是基本布尔类型\x02[C1508][misra-c2012-17.1]: 不得使用<stdarg.h>的特性" +
	"\x02[C1507][misra-c2012-17.2]: 函数不得直接或间接调用自身\x0a找到一条递归链%[1]s\x02[C1507][" +
	"misra-c2012-17.2]: 函数不得直接或间接调用自身\x0a%[1]s\x02[C1506][misra-c2012-17.3]: " +
	"不得隐式声明函数\x0a函数名称: %[1]s\x0a调用位置: %[2]s\x02[C1505][misra-c2012-17.4]: 函" +
	"数如果为非void返回类型，则其所有退出路径必须有一个包含表达式的显式return语句\x02[C1505][misra-c2012-17." +
	"4]: 函数如果为非void返回类型，则其所有退出路径必须有一个包含表达式的显式return语句\x0a%[1]s\x02[C1504][mis" +
	"ra-c2012-17.5]: 如果函数形参被声明为数组类型，那么对应的实参必须具有适当数量的元素\x0a空指针实参用于数组类型形参\x02[C" +
	"1504][misra-c2012-17.5]: 如果函数形参被声明为数组类型，那么对应的实参必须具有适当数量的元素\x0a数组大小不合适的实参" +
	"被用于数组类型的形参\x02[C1504][misra-c2012-17.5]: 如果函数形参被声明为数组类型，那么对应的实参必须具有适当数" +
	"量的元素\x0a%[1]s\x02[C1503][misra-c2012-17.6]: 声明数组形参时，[ ]内不得包含关键字static" +
	"\x02[C1502][misra-c2012-17.7]: 一个非void返回类型的函数所返回的值必须被使用\x02[C1501][misra" +
	"-c2012-17.8]: 不应修改函数形参\x02[C1501][misra-c2012-17.8]: 不应修改函数形参\x02[C1308]" +
	"[misra-c2012-18.1]: 对指针操作数进行算术运算得来的指针只得用于寻址与该指针操作数同一数组的元素\x0a%[1]s\x02[C" +
	"1307][misra-c2012-18.2]: 只有寻址同一数组元素的指针之间才能进行减法运算\x0a%[1]s\x02[C1306][mis" +
	"ra-c2012-18.3]: 大小比较运算符>，>=，<和<=不得用于两个指针类型的对象，除非这两个指针指向同一对象\x0a%[1]s\x02" +
	"[C1305][misra-c2012-18.4]: +, -, +=和-=运算符不得用于指针类型的表达式\x02[C1304][misra-c" +
	"2012-18.5]: 声明应含有最多两层嵌套指针\x02[C1303][misra-c2012-18.6]: 不得将自动存储对象的地址复制给在" +
	"该对象不复存在后仍然存在的另一个对象\x0a%[1]s\x02[C1302][misra-c2012-18.7]: 不得声明灵活数组成员（f" +
	"lexible array members）\x02[C1301][misra-c2012-18.8]: 不得使用变长数组（variable-l" +
	"ength array）\x04\x00\x01\x0aR\x02[C0302][misra-c2012-19.1]: 不得将对象赋值或复制给与" +
	"其重叠的对象\x02[C0302][misra-c2012-19.1]: 不得将对象赋值或复制给与其重叠的对象\x0a%[1]s\x02[C" +
	"0301][misra-c2012-19.2]: 不应使用关键字union\x02[C0114][misra-c2012-20.1]: #inc" +
	"lude指令之前只能出现只有预处理指令或注释\x02[C0113][misra-c2012-20.2]: 头文件名中不得出现字符'，\x22或" +
	"\\，以及/*和//字符序列\x02[C0112][misra-c2012-20.3]: #include指令后面必须是<filename>或" +
	"\x22filename\x22这样的字符序列\x02[C0111][misra-c2012-20.4]: 宏名称不得与关键字重名\x02[C0" +
	"110][misra-c2012-20.5]: 不得使用#undef\x02[C0109][misra-c2012-20.6]: 宏实参中不得有" +
	"形似预处理指令的词符\x02[C0108][misra-c2012-20.7]: 宏形参扩展得到的表达式必须在括号内\x02[C0107][" +
	"misra-c2012-20.8]: 预处理指令#if或#elif的控制表达式求值结果必须为0或1\x02[C0106][misra-c2012" +
	"-20.9]: 预处理指令#if或#elif的控制表达式中的所有标识符在求值之前必须被定义（#define）\x02[C0105][misra-" +
	"c2012-20.10]: 不应使用预处理运算符#和##\x02[C0104][misra-c2012-20.11]: 如果宏形参后面紧跟#运算" +
	"符，则不得再紧跟##运算符\x02[C0103][misra-c2012-20.12]: 作为#或##运算符的操作数的宏形参（其自身要进一步" +
	"进行宏替换）只得作为它们的操作数使用\x02[C0102][misra-c2012-20.13]: 以#开始的代码行必须为有效预处理指令" +
	"\x02[C0101][misra-c2012-20.14]: 所有预处理指令#else，#elif和#endif都必须和对应的#if，#ifd" +
	"ef和#ifndef指令位于同一文件中\x02[C0420][misra-c2012-21.1]: #define和#undef不得用于保留标识" +
	"符（reserved identifier）或保留宏名称（reserved macro name）\x02[C0419][misra-c20" +
	"12-21.2]: 不得声明保留标识符（reserved identifier）和保留宏名称（reserved macro name）\x02[" +
	"C0418][misra-c2012-21.3]: 不得使用<stdlib.h>中的内存分配和回收（deallocation）函数\x02[C0" +
	"417][misra-c2012-21.4]: 不得使用标准头文件<setjmp.h>\x02[C0416][misra-c2012-21.5]" +
	": 不得使用标准头文件<signal.h>\x02[C0415][misra-c2012-21.6]: 不得使用标准库输入/输出函数\x02[C" +
	"0414][misra-c2012-21.7]: 不得使用<stdlib.h>中的标准库函数atof，atoi，atol，以及atoll函数 " +
	"\x02[C0413][misra-c2012-21.8]: 不得使用<stdlib.h>中的标准库终止函数（termination funct" +
	"ion）\x02[C0412][misra-c2012-21.9]: 不得使用<stdlib.h>中的标准库函数bsearch和qsort" +
	"\x02[C0411][misra-c2012-21.10]: 不得使用标准库中的时间（time）和日期（date）函数\x02[C0410][" +
	"misra-c2012-21.11]: 不得使用标准头文件<tgmath.h> \x02[C0409][misra-c2012-21.12]: " +
	"不应使用<fenv.h>的异常处理特性\x02[C0408][misra-c2012-21.13]: 传递给<ctype.h>函数的值必须能" +
	"够表示为无符号char或EOF类型\x0a%[1]s\x02[C0407][misra-c2012-21.14]: 不得使用标准库函数mem" +
	"cmp比较空终止字符串（null terminated string）\x0a%[1]s\x02[C0406][misra-c2012-21.1" +
	"5]: 指向标准库函数memcpy，memmove和memcmp的指针实参必须全部为指向兼容类型的修饰或未修饰版本的指针\x02[C0405][" +
	"misra-c2012-21.16]: 标准库函数memcmp的指针实参必须指向指针类型，或者指向基本有符号类型，基本布尔类型或基本枚举类型" +
	"\x02[C0404][misra-c2012-21.17]: 使用<string.h>的字符串处理函数不得产生超出指针形参引用对象边界的访问" +
	"\x0a调用cstring函数可能产生超出边界的访问\x0a%[1]s\x02[C0403][misra-c2012-21.18]: 如果要将s" +
	"ize_t实参传递给<string.h>中的任意函数，则size_t实参必须具有恰当的值\x0a作为函数实参的size_t的值无效\x0a原指针" +
	"对象类型: %[1]s\x0a目标对象类型: %[2]s\x0a位置: %[3]s\x02[C0403][misra-c2012-21.18" +
	"]: 如果要将size_t实参传递给<string.h>中的任意函数，则size_t实参必须具有恰当的值\x0a%[1]s\x02[C0402]" +
	"[misra-c2012-21.19]: 标准库函数localeconv，getenv，setlocale或strerror返回的指针只得作为c" +
	"onst修饰类型的指针使用\x0a函数的返回值被赋值给非const修饰类型\x0a原指针对象类型: %[1]s\x0a目标对象类型: %[2]s" +
	"\x0a位置: %[3]s\x02[C0402][misra-c2012-21.19]: 标准库函数localeconv，getenv，setl" +
	"ocale或strerror返回的指针只得作为const修饰类型的指针使用\x0a%[1]s\x02[C0401][misra-c2012-21" +
	".20]: 标准库函数asctime，ctime，gmtime，localtime，localeconv，getenv，setlocale或st" +
	"rerror返回的指针后面不得紧跟对同一函数的调用\x0a%[1]s\x02[C0421][misra-c2012-21.21]: 不得使用<s" +
	"tdlib.h>中的标准库函数system\x02[C0210][misra-c2012-22.1]: 通过标准库函数动态获取的所有资源都必须被" +
	"显式释放\x0a%[1]s\x02[C0209][misra-c2012-22.2]: 只有通过标准库函数分配的内存块才能被释放\x0a%[" +
	"1]s\x02[C0208][misra-c2012-22.3]: 不得在不同文件流上同时打开同一文件进行读写访问\x0a%[1]s\x02[C" +
	"0207][misra-c2012-22.4]: 不得对只读文件流进行写入操作\x0a%[1]s\x02[C0206][misra-c2012-" +
	"22.5]: 不得解引用（dereference）指向FILE对象的指针\x0a%[1]s\x02[C0205][misra-c2012-22." +
	"6]: 不得在有关文件流关闭后使用FILE指针的值\x0a%[1]s\x02[C0204][misra-c2012-22.7]: 宏EOF只得与" +
	"任何能够返回EOF的标准库函数的未修改返回值比较\x0a%[1]s\x02[C0203][misra-c2012-22.8]: 在调用err" +
	"no设置函数之前必须将errno值设置为零\x0a%[1]s\x02[C0202][misra-c2012-22.9]: 调用errno设置函数" +
	"后必须检测errno值是否为零\x0a%[1]s\x02[C0201][misra-c2012-22.10]: 只有上一个被调用的函数是er" +
	"rno设置函数的情况下才能检测errno值\x0a%[1]s\x02[C2306][misra-c2012-dir-4.3]: 汇编语言必须被封" +
	"装并隔离\x02[C2306][misra-c2012-dir-4.3]: 汇编语言必须被封装并隔离\x02[C2310][misra-c2" +
	"012-dir-4.7]: 如果函数返回了错误信息，那么必须测试该错误信息\x02[C2313][misra-c2012-dir-4.10]: " +
	"应采取措施预防头文件的内容被多次包含\x0a%[1]s没有预防措施\x02[C2313][misra-c2012-dir-4.10]: 必须" +
	"采取措施预防头文件的内容被多次包含\x0a%[1]s和%[2]s有相同的文件标识符\x02[C2314][misra-c2012-dir-4" +
	".11]: 必须检查传递给库函数的值的有效性\x0a%[1]s\x02[C2315][misra-c2012-dir-4.12]: 不得使用动态" +
	"内存分配\x02[C2317][misra-c2012-dir-4.14]: 必须检查从外部来源获取的值的有效性\x0a%[1]s\x02[" +
	"C7966][NAIVESYSTEMS_C7966]: malloc分配的大小应为4的倍数\x0a%[1]s\x02项目不得包含不可达代码" +
	"\x02项目不得包含不可行路径\x02项目不得包含未使用的变量\x02项目不得包含只使用一次的非易失性（non-volatile）POD变量" +
	"\x02项目不得包含未使用的类型声明\x02项目不得含有“非易失性变量被赋值，随后始终未使用该值”的实例\x02不是重载运算符的函数，若其返回类" +
	"型为非 void，则必须使用其返回值\x02具有 void 返回类型的函数必须有外部副作用\x02不得存在死代码\x02每个被定义的函数必须" +
	"至少被调用一次\x02非虚（non-virtual）函数中不得存在未使用的形参（无论命名或未命名）\x02在一个虚拟函数和所有覆盖了它的函数" +
	"的形参集中，不得有未使用的（命名或未命名）形参\x02不得将对象分配给重叠的对象\x02必须通过使用以下至少一种方法来确保尽量减少运行时失败" +
	"（run-time failure）：（a）静态分析工具/技术；（b）动态工具/技术；（c）处理运行时失败的显式代码\x02如果函数返回了错" +
	"误信息，那么必须测试该错误信息\x02缩放整型（scaled-integer）算术或定点算术的使用必须有文档记录\x02浮点算术的使用必须有" +
	"文档记录\x02浮点实现必须与定义的浮点标准相符\x02所有代码必须遵循 ISO/IEC 14882:2003 C++标准，包括技术勘误1" +
	"\x02只有在编译器使用同一个指定接口时才能使用多个编译器\x02在选定的编译器中进行整型除法时，必须确定并记录它的实现\x02字符集及对应的编" +
	"码必须有文档记录\x02不得使用三字符组\x02不应使用双字符组（digraph）\x02不得在C语言风格的注释中使用字符序列 /*\x02" +
	"不得使用C语言风格的注释将代码段“注释掉”\x02不应使用C++注释将代码段“注释掉”\x02必须确保标识符使用不易混淆的排版\x02在内部" +
	"作用域中声明的标识符不得隐藏在外部作用域中声明的标识符\x02类型定义（typedef）名称（如有修饰，那么也包括修饰）必须是唯一标识符" +
	"\x02类、联合体或枚举的名称（如有修饰，那么也包括修饰）必须是唯一标识符\x02具有静态存储周期的非成员对象或函数的标识符名称不应重复使用" +
	"\x02如果一个标识符已经指代了一个类型，那么在同一作用域内，它不得用于指代一个对象或一个函数\x02只能使用ISO/IEC 14882:200" +
	"3中定义的转义序列\x02不得使用八进制常量（零除外）和八进制转义序列（“\\0”除外）\x02必须对所有八进制或十六进制的无符号整型字面量使用" +
	"后缀“U”\x02字面量后缀必须是大写字母\x02不得将宽字符串字面量和窄字符串字面量串接\x02在不违反“单一定义”规则的情况下，可以在多" +
	"个翻译单元中包含任何头文件\x02不得在块作用域内声明函数\x02声明一个数组时，必须显式说明其大小，或通过初始化隐式定义其大小\x02一个" +
	"对象或函数的所有声明的类型必须兼容\x02不得违反单一定义规则\x02在多个翻译单元中使用的类型、对象或函数必须在且仅在文件中声明\x02一" +
	"个具有外部链接的标识符必须有且仅有一个定义\x02含有外部链接的对象或函数必须在一个头文件中声明\x02如果一个函数有内部链接，那么所有的重" +
	"新声明都必须包括静态（static）存储类说明符\x02声明为对象或类型的标识符必须在一个使其可见性最低的代码块中定义\x02在所有声明和重" +
	"新声明中，用于对象、函数返回类型或函数参数的类型的每个词符必须对应相同\x02应使用指示大小和符号性的类型定义（typedef）代替基本数据" +
	"类型\x02不得使用浮点值的底层位表示（underlying bit representations）\x02不得将具有bool类型的表达式" +
	"用作内置运算符的操作数，以下运算符除外：赋值运算符=、逻辑运算符&&、||和!、相等运算符==和!=、一元运算符&以及条件运算符\x02不得" +
	"将具有枚举类型的表达式用作内置运算符的操作数，以下运算符除外：下标运算符[ ]、赋值运算符=、相等运算符==和!=、一元运算符&以及关系运算" +
	"符<、<=、>和>=\x02不得将具有（普通）char和wchar_t类型的表达式用作内置运算符的操作数，以下运算符除外：赋值运算符=、相等" +
	"运算符==和!=以及一元运算符&\x02NULL不得用作整型值\x02字面量零（0）不得用作空指针常量\x02无论采取何种求值顺序（只要允许" +
	"采用该顺序），表达式的值不得发生改变\x02在表达式中，应有限地依赖C++运算符优先级规则\x02不得将c值表达式隐式转换为其他底层类型" +
	"\x02隐式整型转换不得改变底层类型的符号性\x02不得存在隐式的浮点-整型转换\x02隐式的整型或浮点转换不得减小底层类型\x02c值表达式不" +
	"得存在显式的浮点-整型转换\x02显式的整型或浮点转换不得增大c值表达式的底层类型\x02显式的整型转换不得改变c值表达式的底层类型的符号性" +
	"\x02如果对底层类型为无符号char或无符号short的操作数应用按位操作符~和<<，其结果必须立即转换为该操作数的底层类型\x02简单的ch" +
	"ar类型只得用于存储和使用字符值\x02有符号char和无符号char类型只得用于存储和使用数字值\x02if语句的条件和迭代语句的条件都必须具" +
	"有bool类型\x02条件运算符的第一个操作数必须为bool类型\x02指针算术只能以数组索引的形式进行\x02指针操作数，以及任何使用该操" +
	"作数经过指针算术得到的指针，必须对同一数组的元素寻址\x02只能将指针相减应用于对同一数组的指针寻址\x02不得对类型为指针的对象应用>、>" +
	"=、<、<=，除非它们指向同一数组\x02对象的声明不得包含超过两级的指针间接\x02二元按位运算符的非常量操作数必须具有相同的底层类型\x02" +
	"按位运算符只得用于无符号底层类型的操作数\x02逻辑运算符&&或||的每个操作数都必须是后缀表达式\x02一个指向虚基类（virtual b" +
	"ase class）的指针只能通过dynamic_cast的方式被转换为一个指向派生类（derived class）的指针\x02不应对多态类型" +
	"（polymorphic types）进行从基类到派生类的转换\x02不得使用C风格的转换（除了void转换）和函数式记法转换（除了显式构造" +
	"函数调用）\x02显式类型转换不得移除指针类型或引用类型的任何const或volatile修饰\x02显式类型转换不得将一个函数指针转换为任" +
	"何其他指针类型，包括函数指针类型\x02不得直接或间接将一个具有指针类型的对象转换为不相关的指针类型\x02不得将具有整数类型或void指针" +
	"类型的对象转换为具有指针类型的对象\x02显式转换不应把指针类型转换为整数类型\x02在表达式中，自增（++）和自减（--）运算符不应与其他" +
	"运算符混合使用\x02不得重载逗号运算符、&&运算符和||运算符\x02作为函数实参传递的数组类型的标识符不得退化为指针\x02!运算符、逻" +
	"辑运算符&&或||的每个操作数都必须是bool类型\x02一元减法运算符不得用于底层类型为无符号类型的表达式\x02不得重载一元&操作符" +
	"\x02sizeof运算符的操作数的求值不得含有副作用\x02移位运算符的右操作数的范围下限为零，上限须比左操作数的底层类型的位宽度小一\x02" +
	"逻辑与（&&）和逻辑或（||）运算符的右操作数不得含有副作用\x02必须保留二元运算符及其赋值运算符形式之间的语义等价\x02不得使用逗号运" +
	"算符（,）\x02对无符号常量表达式进行求值不应导致回绕\x02不得在子表达式中使用赋值运算符\x02不得直接或间接地对浮点表达式进行相等性" +
	"或不等性测试\x02在预处理之前，null语句只能单独一行出现；如果null语句后接的第一个字符是空格，该null语句可后接一条注释\x02" +
	"构成switch、while、do...while或for语句主体的语句必须为复合语句\x02一个if（条件）结构必须后接一个复合语句；el" +
	"se关键字必须后接一个复合语句或另一个if语句\x02所有if … else if结构都必须以一个else语句终止\x02switch语句必须为" +
	"良构（well-formed）\x02switch标号只得出现在构成switch语句主体的复合语句的最外层\x02每个非空的switch子句" +
	"都必须以一个无条件的throw或break语句终止\x02switch语句的最后一个子句必须是default子句\x02switch语句的条" +
	"件不得是bool类型\x02每个switch语句至少必须有一个case子句\x02for循环中必须有且仅有一个循环计数器，该计数器不得为浮点" +
	"类型\x02如果循环计数器不被--或++修改，那么在条件中，循环计数器只能作为<=、<、>或>=的操作数\x02不得在条件或语句中修改循环计" +
	"数器\x02循环计数器应通过以下方式之一进行修改：--、++、-=n或+=n；其中n在循环过程中保持不变\x02不得在条件或表达式中修改循环" +
	"控制变量（循环计数器除外）\x02除了在语句中被修改的循环计数器外，其他的循环控制变量应具有bool类型\x02goto语句引用的标号（la" +
	"bel）必须在同一代码块或上级代码块中声明\x02goto语句只得跳转到同一函数主体中在其后声明的标号（label）\x02continue语句" +
	"只能在为良构（well-formed）的for循环中使用\x02对于任何迭代语句，用于终止循环的break或goto语句不得超过一个\x02" +
	"函数结尾必须有且仅有一个退出点\x02不修改的变量必须使用const修饰\x02如果函数形参不被修改，那么必须将相对应的形参的指针或引用声明" +
	"为const指针或const引用\x02具有enum底层类型的表达式只应包含与枚举的枚举器对应的值\x02全局命名空间只得包含main、命名" +
	"空间声明和extern “C”声明\x02标识符main不得用于除全局函数main之外的函数\x02头文件中不得存在未命名的命名空间\x02" +
	"不得使用using指令\x02同一命名空间中对一个标识符的多个声明不得跨越该标识符的using声明\x02不得在头文件中使用using指令或" +
	"using声明（不包括类作用域或函数作用域的using声明）\x02所有汇编器的使用必须有文档记录\x02只能使用asm声明引入汇编器指令（as" +
	"sembler instructions）\x02必须独立封装汇编语言\x02函数不应返回在该函数中定义的自动变量（包括形参）的引用或指针" +
	"\x02不得将自动存储对象的地址赋给在该对象不复存在后仍然可能存在的另一个对象\x02如果一个形参是通过引用或const引用传递的，那么函数不得" +
	"返回该形参的引用或指针\x02函数不应直接或间接调用自身\x02初始化声明符列表（init-declarator-list）必须由一个初始化" +
	"声明符组成；成员声明符列表（member-declarator-list）必须由一个成员声明符组成\x02覆盖虚拟函数中的形参必须使用与被它" +
	"们覆盖的函数相同的默认实参，否则不得指定任何默认实参\x02不得使用省略号定义函数\x02函数的重新声明中用作形参的标识符必须与原声明中的标" +
	"识符相同\x02返回非void类型的函数的所有退出路径都必须具有包含表达式的显式return语句\x02函数标识符必须用来调用该函数，否则必" +
	"须加上前缀“&”\x02所有变量在使用前都必须先定义一个值\x02数组和结构体进行非零初始化时，必须使用大括号来指示和匹配结构\x02枚举器" +
	"列表中，不得将=结构用于显式初始化非首位成员之外的成员，除非所有的项都被显式初始化\x02const成员函数不得返回对 *类数据* 的非co" +
	"nst指针或引用\x02成员函数不得返回指向类数据的非const句柄\x02如果一个成员函数可以是静态的，那么就必须将其设为静态，否则，如果该函" +
	"数可以是const的，那么就必须将其设为const\x02不得使用联合体\x02需要对代表一个位域的位进行绝对定位时，必须记录位域的行为和包" +
	"装\x02位域必须是bool类型，或显式无符号或有符号整数类型\x02位域不得具有enum类型\x02已命名的有符号整数类型的位域长度必须超" +
	"过一位\x02不应通过虚拟基来派生类\x02只有在用于菱形层次结构（diamond hierarchy）时，才能声明一个基类为虚拟基类" +
	"\x02可访问基类在同一层次结构中不能同时为虚基类和非虚基类\x02在一个多重继承层次结构中，所有可访问的实体名称都应该是唯一的\x02在整个继" +
	"承层次结构中，每个虚拟函数在每个路径中的定义不应超过一个\x02每个覆盖虚拟函数都必须用关键字virtual来声明\x02如果虚拟函数被声明" +
	"为纯虚函数，则该虚拟函数只应被纯虚函数覆盖\x02在非POD类中，成员数据必须是私有的\x02不得在一个对象的构造函数或析构函数的主体中使用" +
	"该对象的动态类型\x02所有类构造函数都应明确地调用它们所有直接基类和虚拟基类的构造函数\x02所有可以通过一个基本类型的实参来调用的构造函" +
	"数都必须被显式声明\x02复制构造函数（copy constructor）只得用来初始化它的基类以及本类的非静态成员\x02在抽象类中，复制" +
	"赋值运算符必须被声明为受保护的（protected）或私有的（private）\x02非成员泛型函数只能在不是关联命名空间（associat" +
	"ed namespace）的命名空间中声明\x02如果模板构造函数只有一个形参，且为泛型形参，那么必须声明一个复制构造函数\x02如果模板赋值运" +
	"算符有一个泛型形参，那么必须声明一个复制赋值运算符\x02在一个有依赖基的类模板中，必须使用被修饰的标识符或this->来引用任何可能在该依" +
	"赖基中查找到的名称\x02通过重载解析选择的函数必须被解析为翻译单元中先前声明的函数\x02所有类模板、函数模板、类模板成员函数和类模板静态" +
	"成员至少必须被实例化一次\x02对于任何给定的模板专门化，使用专门化的模板实参对该模板进行显式实例化，不得导致程序非良构（ill-forme" +
	"d）\x02模板的所有部分专门化和显式专门化的声明必须与主模板的声明在同一文件\x02重载的函数模板不得被显式专门化\x02对函数调用可行的函数" +
	"集不应包含任何函数专门化，或者应只包含函数函数专门化\x02异常只得用于错误处理\x02异常对象不应具有指针类型\x02不得使用goto或s" +
	"witch语句将控制权转移到try或catch块中\x02throw语句的赋值表达式本身不得导致抛出异常\x02不得显式抛出NULL\x02空的" +
	"抛出（throw;）只得在捕获（catch）处理程序的复合语句中使用\x02只有程序启动后和终止前才能报告异常\x02至少应该有一个异常处理" +
	"程序来捕获所有未经处理的异常\x02对于类构造函数或类析构函数，其函数尝试块实现的处理程序不得引用该类或其基类的非静态成员\x02对于在代码" +
	"中显式抛出的每个异常，在所有可能导致该异常的调用路径上，都必须有一个兼容类型的处理程序\x02必须始终通过引用来捕获类类型的异常\x02如果" +
	"在一个尝试捕获（try-catch）语句或函数尝试块中，为一个派生类以及它的部分或全部基类提供了多个处理程序，那么应按从最终派生类到基类的顺" +
	"序排列这些处理程序\x02如果在一个尝试捕获语句或函数尝试块中提供了多个处理程序，那么所有省略号（catch-all）处理程序必须在最后发生" +
	"\x02如果一个函数与异常说明（exception-specification）一起声明，那么该函数在其他翻译单元中的所有声明必须以相同的类型标" +
	"识（type-id）集声明\x02一个类析构函数不得随着异常退出\x02当函数的声明包含一个异常说明时，该函数只能抛出指定类型的异常\x02" +
	"不得隐式调用terminate()函数\x02文件中的#include指令之前只能是其他预处理指令或注释\x02只能在全局命名空间中对宏进行" +
	"#define和#undef\x02不得使用#undef\x02不得定义类函数宏\x02传递给类函数宏的实参不得包含形似预处理指令的标记\x02" +
	"在定义类函数宏时，每个实参的实例都必须以小括号括起来，除非它们是#或##的操作数\x02未定义的宏标识符不得用于#if和#elif预处理指令" +
	"，除非是作为defined预处理运算符的操作数\x02如果#标识符是行中的第一个标记，则其后应紧接预处理标识符\x02defined预处理运" +
	"算符只能使用两种标准形式之一\x02所有的 #else、#elif 和 #endif 预处理指令必须都必须和对应的 #if 或 #ifdef" +
	" 指令位于同一文件中\x02预处理器只得用于文件包含和#include防范（include guard）\x02C++的宏只得用于#includ" +
	"e防范、类型限定符或存储类标识符\x02必须提供#include防范\x02头文件名称里不得出现'、\x22、/*或//字符\x02头文件名称里" +
	"不能出现\\字符\x02#include 预处理指令必须后接<filename>或\x22filename\x22\x02在一个宏定义中最多" +
	"只得出现一个#或##预处理器运算符\x02不应使用#或##预处理器运算符\x02必须记录所有#pragma指令的使用\x02标准库中保留的标" +
	"识符、宏和函数不得被定义、重定义或取消定义\x02不得重复使用标准库中宏和对象的名字\x02不得重写标准库中函数的名称\x02所有库代码必须" +
	"遵守MISRA C++规则\x02不得使用setjmp宏和longjmp函数\x02不得使用C标准库\x02不得使用库<cstdlib>中的" +
	"函数atof、atoi 和 atol\x02不得使用库<stdlib.h>中的函数 abort、exit、getenv 和 system" +
	"\x02不得使用库<ctime>中的时间处理函数\x02不得使用库<cstring>中的无界函数\x02不得使用宏offsetof\x02不得使" +
	"用动态堆内存分配\x02不得使用<csignal>中的信号处理功能\x02不得使用错误指示器errno\x02不得使用输入/输出流库<cst" +
	"dio>\x02C代码行数%[1]d\x02C++代码行数%[1]d\x02头文件行数%[1]d\x02并发数%[1]d\x02开始准备CTU信" +
	"息\x02CTU信息准备完成 [%[1]s]\x02开始准备STU信息\x02STU信息准备完成%[1]s (%[2]v/%[3]v)" +
	"\x02STU信息准备完成 [%[1]s]\x02分析完成 [%[1]s]\x02BuildAction准备完成%[1]s (%[2]v/%[3" +
	"]v)\x02BuildAction准备完成 [%[1]s]\x02CTU信息开始生成\x02CTU信息生成%[1]s (%[2]v/%[3]v" +
	")\x02CTU信息生成成功 [%[1]s]\x02CTU信息开始写入\x02CTU信息写入完成 [%[1]s]"

	// Total table size 107704 bytes (105KiB); checksum: BF284C44
