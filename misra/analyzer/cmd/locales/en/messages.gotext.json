{
    "language": "en",
    "messages": [
        {
            "id": "Start to generate compilation database",
            "message": "Start to generate compilation database",
            "translation": "Start to generate compilation database",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Start parsing compilation database",
            "message": "Start parsing compilation database",
            "translation": "Start parsing compilation database",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Start preprocessing C/C++ files",
            "message": "Start preprocessing C/C++ files",
            "translation": "Start preprocessing C/C++ files",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Preprocessing C/C++ files completed [{TimeUsed}]",
            "message": "Preprocessing C/C++ files completed [{TimeUsed}]",
            "translation": "Preprocessing C/C++ files completed [{TimeUsed}]",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TimeUsed",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "timeUsed"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Total time for analysis: {TimeUsed}",
            "message": "Total time for analysis: {TimeUsed}",
            "translation": "Total time for analysis: {TimeUsed}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TimeUsed",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "timeUsed"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Start analyzing C/C++ files",
            "message": "Start analyzing C/C++ files",
            "translation": "Start analyzing C/C++ files",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Analyzing C/C++ files completed [{TimeUsed}]",
            "message": "Analyzing C/C++ files completed [{TimeUsed}]",
            "translation": "Analyzing C/C++ files completed [{TimeUsed}]",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TimeUsed",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "timeUsed"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Start analyzing for {RuleName} ({StartAnalyzeTaskNum}/{TotalTaskNum})",
            "message": "Start analyzing for {RuleName} ({StartAnalyzeTaskNum}/{TotalTaskNum})",
            "translation": "Start analyzing for {RuleName} ({StartAnalyzeTaskNum}/{TotalTaskNum})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "RuleName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ruleName"
                },
                {
                    "id": "StartAnalyzeTaskNum",
                    "string": "%[2]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "c.startAnalyzeTaskNum"
                },
                {
                    "id": "TotalTaskNum",
                    "string": "%[3]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 3,
                    "expr": "c.totalTaskNum"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Analysis of {RuleName} completed ({Percent}, {CurrentFinishedNumber}/{TotalRuleNumber}) [{TimeUsed}]",
            "message": "Analysis of {RuleName} completed ({Percent}, {CurrentFinishedNumber}/{TotalRuleNumber}) [{TimeUsed}]",
            "translation": "Analysis of {RuleName} completed ({Percent}, {CurrentFinishedNumber}/{TotalRuleNumber}) [{TimeUsed}]",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "RuleName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "ruleName"
                },
                {
                    "id": "Percent",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "percent"
                },
                {
                    "id": "CurrentFinishedNumber",
                    "string": "%[3]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 3,
                    "expr": "currentFinishedNumber"
                },
                {
                    "id": "TotalRuleNumber",
                    "string": "%[4]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 4,
                    "expr": "totalRuleNumber"
                },
                {
                    "id": "TimeUsed",
                    "string": "%[5]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "timeUsed"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C2201][misra-c2012-1.1]: violation of misra-c2012-1.1\n{Name}{StructMemberCount}{StructMemberLimit}",
            "message": "[C2201][misra-c2012-1.1]: violation of misra-c2012-1.1\n{Name}{StructMemberCount}{StructMemberLimit}",
            "translation": "[C2201][misra-c2012-1.1]: Violation of MISRA C:2012 Rule 1.1: The program shall contain no violations of the standard C syntax and constraints, and shall not exceed the implementation's translation limits\nToo many members in structure '{Name}': {StructMemberCount}. The limit is {StructMemberLimit}. ",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "StructMemberCount",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.StructMemberCount"
                },
                {
                    "id": "StructMemberLimit",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.StructMemberLimit"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C2203][misra-c2012-1.3]: violation of misra-c2012-1.3\n{ExternalMessage}",
            "message": "[C2203][misra-c2012-1.3]: violation of misra-c2012-1.3\n{ExternalMessage}",
            "translation": "[C2203][misra-c2012-1.3]: Violation of MISRA C:2012 Rule 1.3: There shall be no occurrence of undefined or critical unspecified behaviour: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C2204][misra-c2012-1.4]: violation of misra-c2012-1.4",
            "message": "[C2204][misra-c2012-1.4]: violation of misra-c2012-1.4",
            "translation": "[C2204][misra-c2012-1.4]: Violation of MISRA C:2012 Rule 1.4: Emergent language features shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C2007][misra-c2012-2.1]: violation of misra-c2012-2.1\n{ExternalMessage}",
            "message": "[C2007][misra-c2012-2.1]: violation of misra-c2012-2.1\n{ExternalMessage}",
            "translation": "[C2007][misra-c2012-2.1]: Violation of MISRA C:2012 Rule 2.1: A project shall not contain unreachable code: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C2006][misra-c2012-2.2]: A call to empty function is dead code",
            "message": "[C2006][misra-c2012-2.2]: A call to empty function is dead code",
            "translation": "[C2006][misra-c2012-2.2]: Violation of MISRA C:2012 Rule 2.2: There shall be no dead code (A call to an empty function is dead code)",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C2006][misra-c2012-2.2]: violation of misra-c2012-2.2\n{ExternalMessage}",
            "message": "[C2006][misra-c2012-2.2]: violation of misra-c2012-2.2\n{ExternalMessage}",
            "translation": "[C2006][misra-c2012-2.2]: Violation of MISRA C:2012 Rule 2.2: There shall be no dead code: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C2005][misra-c2012-2.3]: violation of misra-c2012-2.3\nunused typedef name: {TypedefDeclName}",
            "message": "[C2005][misra-c2012-2.3]: violation of misra-c2012-2.3\nunused typedef name: {TypedefDeclName}",
            "translation": "[C2005][misra-c2012-2.3]: Violation of MISRA C:2012 Rule 2.3: A project should not contain unused type declarations (unused typedef \"{TypedefDeclName}\")",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TypedefDeclName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.TypedefDeclName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C2004][misra-c2012-2.4]: violation of misra-c2012-2.4",
            "message": "[C2004][misra-c2012-2.4]: violation of misra-c2012-2.4",
            "translation": "[C2004][misra-c2012-2.4]: Violation of MISRA C:2012 Rule 2.4: A project should not contain unused tag declarations",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C2003][misra-c2012-2.5]: violation of misra-c2012-2.5",
            "message": "[C2003][misra-c2012-2.5]: violation of misra-c2012-2.5",
            "translation": "[C2003][misra-c2012-2.5]: Violation of MISRA C:2012 Rule 2.5: A project should not contain unused macro declarations",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C2002][misra-c2012-2.6]: violation of misra-c2012-2.6",
            "message": "[C2002][misra-c2012-2.6]: violation of misra-c2012-2.6",
            "translation": "[C2002][misra-c2012-2.6]: Violation of MISRA C:2012 Rule 2.6: A function should not contain unused label declarations",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C2001][misra-c2012-2.7]: violation of misra-c2012-2.7",
            "message": "[C2001][misra-c2012-2.7]: violation of misra-c2012-2.7",
            "translation": "[C2001][misra-c2012-2.7]: Violation of MISRA C:2012 Rule 2.7: There should be no unused parameters in functions",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C2102][misra-c2012-3.1]: violation of misra-c2012-3.1",
            "message": "[C2102][misra-c2012-3.1]: violation of misra-c2012-3.1",
            "translation": "[C2102][misra-c2012-3.1]: Violation of MISRA C:2012 Rule 3.1: The character sequences /* and // shall not be used within a comment",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C2101][misra-c2012-3.2]: violation of misra-c2012-3.2",
            "message": "[C2101][misra-c2012-3.2]: violation of misra-c2012-3.2",
            "translation": "[C2101][misra-c2012-3.2]: Violation of MISRA C:2012 Rule 3.2: Line-splicing shall not be used in // comments",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1002][misra-c2012-4.1]: violation of misra-c2012-4.1",
            "message": "[C1002][misra-c2012-4.1]: violation of misra-c2012-4.1",
            "translation": "[C1002][misra-c2012-4.1]: Violation of MISRA C:2012 Rule 4.1: Octal and hexadecimal escape sequences shall be terminated",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1001][misra-c2012-4.2]: violation of misra-c2012-4.2",
            "message": "[C1001][misra-c2012-4.2]: violation of misra-c2012-4.2",
            "translation": "[C1001][misra-c2012-4.2]: Violation of MISRA C:2012 Rule 4.2: Trigraphs should not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1109][misra-c2012-5.1]: violation of misra-contain non-ASCII characters\n{Kind}: {Name}",
            "message": "[C1109][misra-c2012-5.1]: violation of misra-contain non-ASCII characters\n{Kind}: {Name}",
            "translation": "[C1109][misra-c2012-5.1]: Violation of MISRA C:2012 Rule 5.1: External identifiers shall be distinct ({Kind} \"{Name}\" contains non-ASCII characters)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Kind",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Kind"
                },
                {
                    "id": "Name",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1109][misra-c2012-5.1]: violation of misra-c2012-5.1\n{Kind}: {Name}\nFirst identifier location: {Loc}\nDuplicated identifier '{ExternalMessage}' location: {OtherLoc}",
            "message": "[C1109][misra-c2012-5.1]: violation of misra-c2012-5.1\n{Kind}: {Name}\nFirst identifier location: {Loc}\nDuplicated identifier '{ExternalMessage}' location: {OtherLoc}",
            "translation": "[C1109][misra-c2012-5.1]: Violation of MISRA C:2012 Rule 5.1: External identifiers shall be distinct (The identifiers '{Name}' and '{ExternalMessage}' at {Loc} and {OtherLoc} are not distinct)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Kind",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Kind"
                },
                {
                    "id": "Name",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.Loc"
                },
                {
                    "id": "ExternalMessage",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "result.ExternalMessage"
                },
                {
                    "id": "OtherLoc",
                    "string": "%[5]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 5,
                    "expr": "result.OtherLoc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1108][misra-c2012-5.2]: violation of misra-c2012-5.2",
            "message": "[C1108][misra-c2012-5.2]: violation of misra-c2012-5.2",
            "translation": "[C1108][misra-c2012-5.2]: Violation of MISRA C:2012 Rule 5.2: Identifiers declared in the same scope and name space shall be distinct",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1107][misra-c2012-5.3]: violation of misra-c2012-5.3",
            "message": "[C1107][misra-c2012-5.3]: violation of misra-c2012-5.3",
            "translation": "[C1107][misra-c2012-5.3]: Violation of MISRA C:2012 Rule 5.3: An identifier declared in an inner scope shall not hide an identifier declared in an outer scope",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1106][misra-c2012-5.4]: violation of misra-c2012-5.4",
            "message": "[C1106][misra-c2012-5.4]: violation of misra-c2012-5.4",
            "translation": "[C1106][misra-c2012-5.4]: Violation of MISRA C:2012 Rule 5.4: Macro identifiers shall be distinct",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1105][misra-c2012-5.5]: violation of misra-c2012-5.5",
            "message": "[C1105][misra-c2012-5.5]: violation of misra-c2012-5.5",
            "translation": "[C1105][misra-c2012-5.5]: Violation of MISRA C:2012 Rule 5.5: Identifiers shall be distinct from macro names",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1104][misra-c2012-5.6]: violation of misra-c2012-5.6\nTypedef: {Name}\nFirst typedef location: {Loc}\nDuplicated typedef location: {OtherLoc}",
            "message": "[C1104][misra-c2012-5.6]: violation of misra-c2012-5.6\nTypedef: {Name}\nFirst typedef location: {Loc}\nDuplicated typedef location: {OtherLoc}",
            "translation": "[C1104][misra-c2012-5.6]: Violation of MISRA C:2012 Rule 5.6: A typedef name shall be a unique identifier (The identifiers \"{Name}\" at {Loc} and {OtherLoc} are the same)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Loc"
                },
                {
                    "id": "OtherLoc",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.OtherLoc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1103][misra-c2012-5.7]: error tag name is not unique\nDuplicated tag name: {TagName}\nFirst identifier location: {Loc}\nDuplicated identifier location: {OtherLoc}",
            "message": "[C1103][misra-c2012-5.7]: error tag name is not unique\nDuplicated tag name: {TagName}\nFirst identifier location: {Loc}\nDuplicated identifier location: {OtherLoc}",
            "translation": "[C1103][misra-c2012-5.7]: Violation of MISRA C:2012 Rule 5.7: A tag name shall be a unique identifier (The identifiers \"{TagName}\" at {Loc} and {OtherLoc} are the same)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TagName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.TagName"
                },
                {
                    "id": "Loc",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Loc"
                },
                {
                    "id": "OtherLoc",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.OtherLoc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1103][misra-c2012-5.7]: error tag name is not unique\nInvalid declaration: at {Loc}",
            "message": "[C1103][misra-c2012-5.7]: error tag name is not unique\nInvalid declaration: at {Loc}",
            "translation": "[C1103][misra-c2012-5.7]: Violation of MISRA C:2012 Rule 5.7: A tag name shall be a unique identifier (invalid declaration at {Loc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Loc",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1102][misra-c2012-5.8]: {Kind} with external linkage shall be unique\nName: {Name}\nLocation: {Loc}\nOther location: {OtherLoc}",
            "message": "[C1102][misra-c2012-5.8]: {Kind} with external linkage shall be unique\nName: {Name}\nLocation: {Loc}\nOther location: {OtherLoc}",
            "translation": "[C1102][misra-c2012-5.8]: Violation of MISRA C:2012 Rule 5.8: Identifiers that define objects or functions with external linkage shall be unique (The identifiers \"{Name}\" at {Loc} and {OtherLoc} are the same)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Kind",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Kind"
                },
                {
                    "id": "Name",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.Loc"
                },
                {
                    "id": "OtherLoc",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "result.OtherLoc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1101][misra-c2012-5.9]: {Kind} with internal linkage shall be unique\nName: {Name}\nLocation: {Loc}\nOther location: {OtherLoc}",
            "message": "[C1101][misra-c2012-5.9]: {Kind} with internal linkage shall be unique\nName: {Name}\nLocation: {Loc}\nOther location: {OtherLoc}",
            "translation": "[C1101][misra-c2012-5.9]: Violation of MISRA C:2012 Rule 5.9: Identifiers that define objects or functions with internal linkage should be unique (The identifiers \"{Name}\" at {Loc} and {OtherLoc} are the same)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Kind",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Kind"
                },
                {
                    "id": "Name",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.Loc"
                },
                {
                    "id": "OtherLoc",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "result.OtherLoc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0702][misra-c2012-6.1]: violation of misra-c2012-6.1",
            "message": "[C0702][misra-c2012-6.1]: violation of misra-c2012-6.1",
            "translation": "[C0702][misra-c2012-6.1]: Violation of MISRA C:2012 Rule 6.1: Bit-fields shall only be declared with an appropriate type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0701][misra-c2012-6.2]: violation of misra-c2012-6.2",
            "message": "[C0701][misra-c2012-6.2]: violation of misra-c2012-6.2",
            "translation": "[C0701][misra-c2012-6.2]: Violation of MISRA C:2012 Rule 6.2: Single-bit named bit fields shall not be of a signed type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0904][misra-c2012-7.1]: violation of misra-c2012-7.1",
            "message": "[C0904][misra-c2012-7.1]: violation of misra-c2012-7.1",
            "translation": "[C0904][misra-c2012-7.1]: Violation of MISRA C:2012 Rule 7.1: Octal constants shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0903][misra-c2012-7.2]: violation of misra-c2012-7.2",
            "message": "[C0903][misra-c2012-7.2]: violation of misra-c2012-7.2",
            "translation": "[C0903][misra-c2012-7.2]: Violation of MISRA C:2012 Rule 7.2: A \"u\" or \"U\" suffix shall be applied to all integer constants that are represented in an unsigned type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0902][misra-c2012-7.3]: violation of misra-c2012-7.3",
            "message": "[C0902][misra-c2012-7.3]: violation of misra-c2012-7.3",
            "translation": "[C0902][misra-c2012-7.3]: Violation of MISRA C:2012 Rule 7.3: The lowercase character \"l\" shall not be used in a literal suffix",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0901][misra-c2012-7.4]: violation of misra-c2012-7.4",
            "message": "[C0901][misra-c2012-7.4]: violation of misra-c2012-7.4",
            "translation": "[C0901][misra-c2012-7.4]: Violation of MISRA C:2012 Rule 7.4: A string literal shall not be assigned to an object unless the object's type is \"pointer to const-qualified char\"",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0901][misra-c2012-7.4]: Assignment violation of misra-c2012-7.4\ntry to assign string literal to object with improper type\nLocation: {Loc}",
            "message": "[C0901][misra-c2012-7.4]: Assignment violation of misra-c2012-7.4\ntry to assign string literal to object with improper type\nLocation: {Loc}",
            "translation": "[C0901][misra-c2012-7.4]: Violation of MISRA C:2012 Rule 7.4: A string literal shall not be assigned to an object unless the object's type is \"pointer to const-qualified char\" (violated at {Loc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Loc",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0901][misra-c2012-7.4]: violation of misra-c2012-7.4\n{ExternalMessage}",
            "message": "[C0901][misra-c2012-7.4]: violation of misra-c2012-7.4\n{ExternalMessage}",
            "translation": "[C0901][misra-c2012-7.4]: Violation of MISRA C:2012 Rule 7.4: A string literal shall not be assigned to an object unless the object's type is \"pointer to const-qualified char\": {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0514][misra-c2012-8.1]: violation of misra-c2012-8.1\n{ExternalMessage}",
            "message": "[C0514][misra-c2012-8.1]: violation of misra-c2012-8.1\n{ExternalMessage}",
            "translation": "[C0514][misra-c2012-8.1]: Violation of MISRA C:2012 Rule 8.1: Types shall be explicitly specified: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0513][misra-c2012-8.2]: function types shall be in prototype form with named parameters\nunnamed parameter.\nfunction name: {Name}",
            "message": "[C0513][misra-c2012-8.2]: function types shall be in prototype form with named parameters\nunnamed parameter.\nfunction name: {Name}",
            "translation": "[C0513][misra-c2012-8.2]: Violation of MISRA C:2012 Rule 8.2: Function types shall be in prototype form with named parameters (The function \"{Name}\" has unnamed parameter(s))",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0513][misra-c2012-8.2]: function types shall be in prototype form with named parameters\nfunction pointer with unnamed parameter.",
            "message": "[C0513][misra-c2012-8.2]: function types shall be in prototype form with named parameters\nfunction pointer with unnamed parameter.",
            "translation": "[C0513][misra-c2012-8.2]: Violation of MISRA C:2012 Rule 8.2: Function types shall be in prototype form with named parameters",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0513][misra-c2012-8.2]: function types shall be in prototype form with named parameters\nK\u0026R style is fobidden.\nfunction name: {Name}",
            "message": "[C0513][misra-c2012-8.2]: function types shall be in prototype form with named parameters\nK\u0026R style is fobidden.\nfunction name: {Name}",
            "translation": "[C0513][misra-c2012-8.2]: Violation of MISRA C:2012 Rule 8.2: Function types shall be in prototype form with named parameters (The function \"{Name}\" uses forbidden K\u0026R style)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0513][misra-c2012-8.2]: function types shall be in prototype form with named parameters\nMissing 'void'.\nfunction name: {Name}",
            "message": "[C0513][misra-c2012-8.2]: function types shall be in prototype form with named parameters\nMissing 'void'.\nfunction name: {Name}",
            "translation": "[C0513][misra-c2012-8.2]: Violation of MISRA C:2012 Rule 8.2: Function types shall be in prototype form with named parameters (missing 'void' in function \"{Name}\")",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0512][misra-c2012-8.3]: violation of misra-c2012-8.3\nName: {Name}",
            "message": "[C0512][misra-c2012-8.3]: violation of misra-c2012-8.3\nName: {Name}",
            "translation": "[C0512][misra-c2012-8.3]: Violation of MISRA C:2012 Rule 8.3: All declarations of an object or function shall use the same names and type qualifiers (violated in function \"{Name}\")",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0512][misra-c2012-8.3]: violation of misra-c2012-8.3\nName: {Name}\nLocation: {Loc}\nOther location: {OtherLoc}",
            "message": "[C0512][misra-c2012-8.3]: violation of misra-c2012-8.3\nName: {Name}\nLocation: {Loc}\nOther location: {OtherLoc}",
            "translation": "[C0512][misra-c2012-8.3]: Violation of MISRA C:2012 Rule 8.3: All declarations of an object or function shall use the same names and type qualifiers (\"{Name}\" at {Loc} and {OtherLoc} use different names or type qualifiers)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Loc"
                },
                {
                    "id": "OtherLoc",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.OtherLoc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0511][misra-c2012-8.4]: violation of misra-c2012-8.4\nMissing function declaration\nfunction name: {Name}\nlocation: {Loc}",
            "message": "[C0511][misra-c2012-8.4]: violation of misra-c2012-8.4\nMissing function declaration\nfunction name: {Name}\nlocation: {Loc}",
            "translation": "[C0511][misra-c2012-8.4]: Violation of MISRA C:2012 Rule 8.4: A compatible declaration shall be visible when an object or function with external linkage is defined (The function \"{Name}\" at {Loc} is defined without visible declaration)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0511][misra-c2012-8.4]: violation of misra-c2012-8.4\nMissing variable declaration\nvariable name: {Name}\nlocation: {Loc}",
            "message": "[C0511][misra-c2012-8.4]: violation of misra-c2012-8.4\nMissing variable declaration\nvariable name: {Name}\nlocation: {Loc}",
            "translation": "[C0511][misra-c2012-8.4]: Violation of MISRA C:2012 Rule 8.4: A compatible declaration shall be visible when an object or function with external linkage is defined (The variable \"{Name}\" at {Loc} is defined without visible declaration)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0511][misra-c2012-8.4]: violation of misra-c2012-8.4\nFunction declaration and definition type do not match\nfunction name: {Name}\ndefinition location: {Loc}",
            "message": "[C0511][misra-c2012-8.4]: violation of misra-c2012-8.4\nFunction declaration and definition type do not match\nfunction name: {Name}\ndefinition location: {Loc}",
            "translation": "[C0511][misra-c2012-8.4]: Violation of MISRA C:2012 Rule 8.4: A compatible declaration shall be visible when an object or function with external linkage is defined (Declaration and definition types of function \"{Name}\" at {Loc} do not match)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0510][misra-c2012-8.5]: External object shall be declared in one header file.\n, Name: {Name}\n, Location: {Loc}",
            "message": "[C0510][misra-c2012-8.5]: External object shall be declared in one header file.\n, Name: {Name}\n, Location: {Loc}",
            "translation": "[C0510][misra-c2012-8.5]: Violation of MISRA C:2012 Rule 8.5: An external object or function shall be declared once in one and only one file (The object \"{Name}\" at {Loc} is declared in different files)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0510][misra-c2012-8.5]: External function shall be declared in one header file.\nName: {Name}\nLocation: {Loc}",
            "message": "[C0510][misra-c2012-8.5]: External function shall be declared in one header file.\nName: {Name}\nLocation: {Loc}",
            "translation": "[C0510][misra-c2012-8.5]: Violation of MISRA C:2012 Rule 8.5: An external object or function shall be declared once in one and only one file (The function \"{Name}\" at {Loc} is declared in different files)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0510][misra-c2012-8.5]: External object shall be declared once in one and only one file.\nName: {Name}\nLocation: {Loc}\nOther Location: {OtherLoc}",
            "message": "[C0510][misra-c2012-8.5]: External object shall be declared once in one and only one file.\nName: {Name}\nLocation: {Loc}\nOther Location: {OtherLoc}",
            "translation": "[C0510][misra-c2012-8.5]: Violation of MISRA C:2012 Rule 8.5: An external object or function shall be declared once in one and only one file (The object \"{Name}\" is declared at {Loc} and {OtherLoc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Loc"
                },
                {
                    "id": "OtherLoc",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.OtherLoc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0510][misra-c2012-8.5]: External function shall be declared once in one and only one file.\nName: {Name}\nLocation: {Loc}\nOther Location: {OtherLoc}",
            "message": "[C0510][misra-c2012-8.5]: External function shall be declared once in one and only one file.\nName: {Name}\nLocation: {Loc}\nOther Location: {OtherLoc}",
            "translation": "[C0510][misra-c2012-8.5]: Violation of MISRA C:2012 Rule 8.5: An external object or function shall be declared once in one and only one file (The function \"{Name}\" is declared at {Loc} and {OtherLoc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Loc"
                },
                {
                    "id": "OtherLoc",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.OtherLoc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0509][misra-c2012-8.6]: error duplicated definition\nduplicated variable name: {Name}\nfirst definition location: {Loc}\nduplicated definition location: {OtherLoc}",
            "message": "[C0509][misra-c2012-8.6]: error duplicated definition\nduplicated variable name: {Name}\nfirst definition location: {Loc}\nduplicated definition location: {OtherLoc}",
            "translation": "[C0509][misra-c2012-8.6]: Violation of MISRA C:2012 Rule 8.6: An identifier with external linkage shall have exactly one external definition (The variable \"{Name}\" has two external definitions at {Loc} and {OtherLoc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Loc"
                },
                {
                    "id": "OtherLoc",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.OtherLoc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0508][misra-c2012-8.7]: violation of misra-c2012-8.7\nExtern function or variable is only called at one translation unit\nfunction name: {Name}\nused location: {Loc}\ndeclared location: {OtherLoc}",
            "message": "[C0508][misra-c2012-8.7]: violation of misra-c2012-8.7\nExtern function or variable is only called at one translation unit\nfunction name: {Name}\nused location: {Loc}\ndeclared location: {OtherLoc}",
            "translation": "[C0508][misra-c2012-8.7]: Violation of MISRA C:2012 Rule 8.7: Functions and objects should not be defined with external linkage if they are referenced in only one translation unit (\"{Name}\" referenced at {Loc} is defined at {OtherLoc} with external linkage)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "Loc",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.Loc"
                },
                {
                    "id": "OtherLoc",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.OtherLoc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0507][misra-c2012-8.8]: violation of misra-c2012-8.8",
            "message": "[C0507][misra-c2012-8.8]: violation of misra-c2012-8.8",
            "translation": "[C0507][misra-c2012-8.8]: Violation of MISRA C:2012 Rule 8.8: The static storage class specifier shall be used in all declarations of objects and functions that have internal linkage",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0506][misra-c2012-8.9]: violation of misra-c2012-8.9",
            "message": "[C0506][misra-c2012-8.9]: violation of misra-c2012-8.9",
            "translation": "[C0506][misra-c2012-8.9]: Violation of MISRA C:2012 Rule 8.9: An object should be defined at block scope if its identifier only appears in a single function",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0505][misra-c2012-8.10]: violation of misra-c2012-8.10",
            "message": "[C0505][misra-c2012-8.10]: violation of misra-c2012-8.10",
            "translation": "[C0505][misra-c2012-8.10]: Violation of MISRA C:2012 Rule 8.10: An inline function shall be declared with the static storage class",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0504][misra-c2012-8.11]: violation of misra-c2012-8.11",
            "message": "[C0504][misra-c2012-8.11]: violation of misra-c2012-8.11",
            "translation": "[C0504][misra-c2012-8.11]: Violation of MISRA C:2012 Rule 8.11: When an array with external linkage is declared, its size should be explicitly specified",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0503][misra-c2012-8.12]: violation of misra-c2012-8.12",
            "message": "[C0503][misra-c2012-8.12]: violation of misra-c2012-8.12",
            "translation": "[C0503][misra-c2012-8.12]: Violation of MISRA C:2012 Rule 8.12: Within an enumerator list, the value of an implicitly-specified enumeration constant shall be unique",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0501][misra-c2012-8.14]: violation of misra-c2012-8.14",
            "message": "[C0501][misra-c2012-8.14]: violation of misra-c2012-8.14",
            "translation": "[C0501][misra-c2012-8.14]: Violation of MISRA C:2012 Rule 8.14: The restrict type qualifier shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1205][misra-c2012-9.1]: violation of misra-c2012-9.1\n{ExternalMessage}",
            "message": "[C1205][misra-c2012-9.1]: violation of misra-c2012-9.1\n{ExternalMessage}",
            "translation": "[C1205][misra-c2012-9.1]: Violation of MISRA C:2012 Rule 9.1: The value of an object with automatic storage duration shall not be read before it has been set: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1204][misra-c2012-9.2]: violation of misra-c2012-9.2",
            "message": "[C1204][misra-c2012-9.2]: violation of misra-c2012-9.2",
            "translation": "[C1204][misra-c2012-9.2]: Violation of MISRA C:2012 Rule 9.2: The initializer for an aggregate or union shall be enclosed in braces",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1203][misra-c2012-9.3]: violation of misra-c2012-9.3",
            "message": "[C1203][misra-c2012-9.3]: violation of misra-c2012-9.3",
            "translation": "[C1203][misra-c2012-9.3]: Violation of MISRA C:2012 Rule 9.3: Arrays shall not be partially initialized",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1202][misra-c2012-9.4]: violation of misra-c2012-9.4",
            "message": "[C1202][misra-c2012-9.4]: violation of misra-c2012-9.4",
            "translation": "[C1202][misra-c2012-9.4]: Violation of MISRA C:2012 Rule 9.4: An element of an object shall not be initialized more than once",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1201][misra-c2012-9.5]: violation of misra-c2012-9.5",
            "message": "[C1201][misra-c2012-9.5]: violation of misra-c2012-9.5",
            "translation": "[C1201][misra-c2012-9.5]:Violation of MISRA C:2012 Rule 9.5: Where designated initializers are used to initialize an array object the size of the array shall be specified explicitly",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0808][misra-c2012-10.1]: violation of misra-c2012-10.1\n{ExternalMessage}",
            "message": "[C0808][misra-c2012-10.1]: violation of misra-c2012-10.1\n{ExternalMessage}",
            "translation": "[C0808][misra-c2012-10.1]: Violation of MISRA C:2012 Rule 10.1: Operands shall not be of an inappropriate essential type\n{ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0807][misra-c2012-10.2]: violation of misra-c2012-10.2",
            "message": "[C0807][misra-c2012-10.2]: violation of misra-c2012-10.2",
            "translation": "[C0807][misra-c2012-10.2]: Violation of MISRA C:2012 Rule 10.2: Expressions of essentially character type shall not be used inappropriately in addition and subtraction operations",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0806][misra-c2012-10.3]: violation of misra-c2012-10.3",
            "message": "[C0806][misra-c2012-10.3]: violation of misra-c2012-10.3",
            "translation": "[C0806][misra-c2012-10.3]: Violation of MISRA C:2012 Rule 10.3: The value of an expression shall not be assigned to an object with a narrower essential type or of a different essential type category",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0805][misra-c2012-10.4]: violation of misra-c2012-10.4",
            "message": "[C0805][misra-c2012-10.4]: violation of misra-c2012-10.4",
            "translation": "[C0805][misra-c2012-10.4]: Violation of MISRA C:2012 Rule 10.4: Both operands of an operator in which the usual arithmetic conversions are performed shall have the same essential type category",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0804][misra-c2012-10.5]: violation of misra-c2012-10.5",
            "message": "[C0804][misra-c2012-10.5]: violation of misra-c2012-10.5",
            "translation": "[C0804][misra-c2012-10.5]: Violation of MISRA C:2012 Rule 10.5: The value of an expression should not be cast to an inappropriate essential type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0803][misra-c2012-10.6]: violation of misra-c2012-10.6",
            "message": "[C0803][misra-c2012-10.6]: violation of misra-c2012-10.6",
            "translation": "[C0803][misra-c2012-10.6]: Violation of MISRA C:2012 Rule 10.6: The value of a composite expression shall not be assigned to an object with wider essential type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0802][misra-c2012-10.7]: violation of misra-c2012-10.7",
            "message": "[C0802][misra-c2012-10.7]: violation of misra-c2012-10.7",
            "translation": "[C0802][misra-c2012-10.7]: Violation of MISRA C:2012 Rule 10.7: If a composite expression is used as one operand of an operator in which the usual arithmetic conversions are performed then the other operand shall not have wider essential type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0801][misra-c2012-10.8]: violation of misra-c2012-10.8",
            "message": "[C0801][misra-c2012-10.8]: violation of misra-c2012-10.8",
            "translation": "[C0801][misra-c2012-10.8]: Violation of MISRA C:2012 Rule 10.8: The value of a composite expression shall not be cast to a different essential type category or a wider essential type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1409][misra-c2012-11.1]: violation of misra-conversions violation of misra-c2012-11.1\nobject name: {Name}\nsource type: {SourceType}\ndestination type: {DestinationType}\nLocation: {Loc}",
            "message": "[C1409][misra-c2012-11.1]: violation of misra-conversions violation of misra-c2012-11.1\nobject name: {Name}\nsource type: {SourceType}\ndestination type: {DestinationType}\nLocation: {Loc}",
            "translation": "[C1409][misra-c2012-11.1]: Violation of MISRA C:2012 Rule 11.1: Conversions shall not be performed between a pointer to a function and any other type (\"{Name}\" from \"{SourceType}\" to \"{DestinationType}\" at {Loc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "SourceType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.SourceType"
                },
                {
                    "id": "DestinationType",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.DestinationType"
                },
                {
                    "id": "Loc",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1409][misra-c2012-11.1]: violation of misra-conversions violation of misra-c2012-11.1\n{ExternalMessage}",
            "message": "[C1409][misra-c2012-11.1]: violation of misra-conversions violation of misra-c2012-11.1\n{ExternalMessage}",
            "translation": "[C1409][misra-c2012-11.1]: Violation of MISRA C:2012 Rule 11.1: Conversions shall not be performed between a pointer to a function and any other type: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1408][misra-c2012-11.2]: violation of misra-conversions violation of misra-c2012-11.2\nobject name: {Name}\nsource pointer object type: {SourceType}\ndestination pointer object type: {DestinationType}\nLocation: {Loc}",
            "message": "[C1408][misra-c2012-11.2]: violation of misra-conversions violation of misra-c2012-11.2\nobject name: {Name}\nsource pointer object type: {SourceType}\ndestination pointer object type: {DestinationType}\nLocation: {Loc}",
            "translation": "[C1408][misra-c2012-11.2]: Violation of MISRA C:2012 Rule 11.2: Conversions shall not be performed between a pointer to an incomplete type and any other type (\"{Name}\" from \"pointer to {SourceType}\" to \"pointer to {DestinationType}\" at {Loc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "SourceType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.SourceType"
                },
                {
                    "id": "DestinationType",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.DestinationType"
                },
                {
                    "id": "Loc",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1407][misra-c2012-11.3]: violation of misra-conversions violation of misra-c2012-11.3\nobject name: {Name}\nsource pointer object type: {SourceType}\ndestination pointer object type: {DestinationType}\nLocation: {Loc}",
            "message": "[C1407][misra-c2012-11.3]: violation of misra-conversions violation of misra-c2012-11.3\nobject name: {Name}\nsource pointer object type: {SourceType}\ndestination pointer object type: {DestinationType}\nLocation: {Loc}",
            "translation": "[C1407][misra-c2012-11.3]: Violation of MISRA C:2012 Rule 11.3: A cast shall not be performed between a pointer to object type and a pointer to a different object type (\"{Name}\" from \"pointer to {SourceType}\" to \"pointer to {DestinationType}\" at {Loc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "SourceType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.SourceType"
                },
                {
                    "id": "DestinationType",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.DestinationType"
                },
                {
                    "id": "Loc",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1406][misra-c2012-11.4]: violation of misra-c2012-11.4",
            "message": "[C1406][misra-c2012-11.4]: violation of misra-c2012-11.4",
            "translation": "[C1406][misra-c2012-11.4]: Violation of MISRA C:2012 Rule 11.4: A conversion should not be performed between a pointer to object and an integer type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1406][misra-c2012-11.4]: violation of misra-conversions violation of misra-c2012-11.4\nobject name: {Name}\nsource type: {SourceType}\ndestination pointer object type: {DestinationType}\nLocation: {Loc}",
            "message": "[C1406][misra-c2012-11.4]: violation of misra-conversions violation of misra-c2012-11.4\nobject name: {Name}\nsource type: {SourceType}\ndestination pointer object type: {DestinationType}\nLocation: {Loc}",
            "translation": "[C1406][misra-c2012-11.4]: Violation of MISRA C:2012 Rule 11.4: A conversion should not be performed between a pointer to object and an integer type (\"{Name}\" from \"{SourceType}\" to \"pointer to {DestinationType} type\" at {Loc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "SourceType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.SourceType"
                },
                {
                    "id": "DestinationType",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.DestinationType"
                },
                {
                    "id": "Loc",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1406][misra-c2012-11.4]: violation of misra-conversions violation of misra-c2012-11.4\nobject name: {Name}\nsource pointer object type: {SourceType}\ndestination type: {DestinationType}\nLocation: {Loc}",
            "message": "[C1406][misra-c2012-11.4]: violation of misra-conversions violation of misra-c2012-11.4\nobject name: {Name}\nsource pointer object type: {SourceType}\ndestination type: {DestinationType}\nLocation: {Loc}",
            "translation": "[C1406][misra-c2012-11.4]: Violation of MISRA C:2012 Rule 11.4: A conversion should not be performed between a pointer to object and an integer type (\"{Name}\" from \"pointer to {SourceType}\" to \"{DestinationType}\" at {Loc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "SourceType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.SourceType"
                },
                {
                    "id": "DestinationType",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.DestinationType"
                },
                {
                    "id": "Loc",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1405][misra-c2012-11.5]: violation of misra-c2012-11.5",
            "message": "[C1405][misra-c2012-11.5]: violation of misra-c2012-11.5",
            "translation": "[C1405][misra-c2012-11.5]: Violation of MISRA C:2012 Rule 11.5: A conversion should not be performed from pointer to void into pointer to object",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1405][misra-c2012-11.5]: violation of misra-conversions violation of misra-c2012-11.5\nobject name: {Name}\nsource pointer object type: {SourceType}\ndestination pointer object type: {DestinationType}\nLocation: {Loc}",
            "message": "[C1405][misra-c2012-11.5]: violation of misra-conversions violation of misra-c2012-11.5\nobject name: {Name}\nsource pointer object type: {SourceType}\ndestination pointer object type: {DestinationType}\nLocation: {Loc}",
            "translation": "[C1405][misra-c2012-11.5]: Violation of MISRA C:2012 Rule 11.5: A conversion should not be performed from pointer to void into pointer to object (\"{Name}\" from \"{SourceType}\" to \"pointer to {DestinationType}\" at {Loc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "SourceType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.SourceType"
                },
                {
                    "id": "DestinationType",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.DestinationType"
                },
                {
                    "id": "Loc",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1404][misra-c2012-11.6]: violation of misra-conversions violation of misra-c2012-11.6\nobject name: {Name}\nsource object type: {SourceType}\ndestination object type: {DestinationType}\nLocation: {Loc}",
            "message": "[C1404][misra-c2012-11.6]: violation of misra-conversions violation of misra-c2012-11.6\nobject name: {Name}\nsource object type: {SourceType}\ndestination object type: {DestinationType}\nLocation: {Loc}",
            "translation": "[C1404][misra-c2012-11.6]: Violation of MISRA C:2012 Rule 11.6: A cast shall not be performed between pointer to void and an arithmetic type (\"{Name}\" from \"{SourceType}\" to \"{DestinationType}\" at {Loc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "SourceType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.SourceType"
                },
                {
                    "id": "DestinationType",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.DestinationType"
                },
                {
                    "id": "Loc",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1404][misra-c2012-11.6]: violation of misra-conversions violation of misra-c2012-11.6\n{ExternalMessage}",
            "message": "[C1404][misra-c2012-11.6]: violation of misra-conversions violation of misra-c2012-11.6\n{ExternalMessage}",
            "translation": "[C1404][misra-c2012-11.6]: Violation of MISRA C:2012 Rule 11.6: A cast shall not be performed between pointer to void and an arithmetic type: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1403][misra-c2012-11.7]: violation of misra-conversions violation of misra-c2012-11.7\nobject name: {Name}\nsource type: {SourceType}\ndestination type: {DestinationType}\nLocation: {Loc}",
            "message": "[C1403][misra-c2012-11.7]: violation of misra-conversions violation of misra-c2012-11.7\nobject name: {Name}\nsource type: {SourceType}\ndestination type: {DestinationType}\nLocation: {Loc}",
            "translation": "[C1403][misra-c2012-11.7]: Violation of MISRA C:2012 Rule 11.7: A cast shall not be performed between pointer to object and a non-integer arithmetic type (\"{Name}\" from \"{SourceType}\" to \"{DestinationType}\" at {Loc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "SourceType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.SourceType"
                },
                {
                    "id": "DestinationType",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.DestinationType"
                },
                {
                    "id": "Loc",
                    "string": "%[4]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 4,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1403][misra-c2012-11.7]: violation of misra-conversions violation of misra-c2012-11.7\n{ExternalMessage}",
            "message": "[C1403][misra-c2012-11.7]: violation of misra-conversions violation of misra-c2012-11.7\n{ExternalMessage}",
            "translation": "[C1403][misra-c2012-11.7]: Violation of MISRA C:2012 Rule 11.7: A cast shall not be performed between pointer to object and a non-integer arithmetic type: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1402][misra-c2012-11.8]: violation of misra-conversions violation of misra-c2012-11.8\nobject name: {Name}\nsource pointer object type: {SourceType}\ndestination pointer object type: {DestinationType}",
            "message": "[C1402][misra-c2012-11.8]: violation of misra-conversions violation of misra-c2012-11.8\nobject name: {Name}\nsource pointer object type: {SourceType}\ndestination pointer object type: {DestinationType}",
            "translation": "[C1402][misra-c2012-11.8]: Violation of MISRA C:2012 Rule 11.8: A cast shall not remove any const or volatile qualification from the type pointed to by a pointer (\"{Name}\" from \"pointer to {SourceType}\" to \"pointer to {DestinationType}\")",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                },
                {
                    "id": "SourceType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.SourceType"
                },
                {
                    "id": "DestinationType",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.DestinationType"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1401][misra-c2012-11.9]: violation of misra-c2012-11.9",
            "message": "[C1401][misra-c2012-11.9]: violation of misra-c2012-11.9",
            "translation": "[C1401][misra-c2012-11.9]: Violation of MISRA C:2012 Rule 11.9: The macro NULL shall be the only permitted form of integer null pointer constant",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0605][misra-c2012-12.1]: violation of misra-c2012-12.1",
            "message": "[C0605][misra-c2012-12.1]: violation of misra-c2012-12.1",
            "translation": "[C0605][misra-c2012-12.1]: Violation of MISRA C:2012 Rule 12.1: The precedence of operators within expressions should be made explicit",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0604][misra-c2012-12.2]: violation of misra-c2012-12.2\n{ExternalMessage}",
            "message": "[C0604][misra-c2012-12.2]: violation of misra-c2012-12.2\n{ExternalMessage}",
            "translation": "[C0604][misra-c2012-12.2]:Violation of MISRA C:2012 Rule 12.2: The right hand operand of a shift operator shall lie in the range zero to one less than the width in bits of the essential type of the left hand operand: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0603][misra-c2012-12.3]: violation of misra-comma operator should not be used",
            "message": "[C0603][misra-c2012-12.3]: violation of misra-comma operator should not be used",
            "translation": "[C0603][misra-c2012-12.3]: Violation of MISRA C:2012 Rule 12.3: The comma operator should not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0602][misra-c2012-12.4]: violation of misra-c2012-12.4",
            "message": "[C0602][misra-c2012-12.4]: violation of misra-c2012-12.4",
            "translation": "[C0602][misra-c2012-12.4]: Violation of MISRA C:2012 Rule 12.4: Evaluation of constant expressions should not lead to unsigned integer wrap-around",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0601][misra-c2012-12.5]: violation of misra-c2012-12.5",
            "message": "[C0601][misra-c2012-12.5]: violation of misra-c2012-12.5",
            "translation": "[C0601][misra-c2012-12.5]: Violation of MISRA C:2012 Rule 12.5: The sizeof operator shall not have an operand which is a function parameter declared as \"array of type\"",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1606][misra-c2012-13.1]: Init list has volatile referenced member",
            "message": "[C1606][misra-c2012-13.1]: Init list has volatile referenced member",
            "translation": "[C1606][misra-c2012-13.1]: Violation of MISRA C:2012 Rule 13.1: Initializer lists shall not contain persistent side effects",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1605][misra-c2012-13.2]: multiple related functions should not be called in the same expression",
            "message": "[C1605][misra-c2012-13.2]: multiple related functions should not be called in the same expression",
            "translation": "[C1605][misra-c2012-13.2]: Violation of MISRA C:2012 Rule 13.2: The value of an expression and its persistent side effects shall be the same under all permitted evaluation orders",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1605][misra-c2012-13.2]: violation of misra-c2012-13.2\n{ExternalMessage}",
            "message": "[C1605][misra-c2012-13.2]: violation of misra-c2012-13.2\n{ExternalMessage}",
            "translation": "[C1605][misra-c2012-13.2]: Violation of MISRA C:2012 Rule 13.2: The value of an expression and its persistent side effects shall be the same under all permitted evaluation orders: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1604][misra-c2012-13.3]: expression has more than one side effects",
            "message": "[C1604][misra-c2012-13.3]: expression has more than one side effects",
            "translation": "[C1604][misra-c2012-13.3]: Violation of MISRA C:2012 Rule 13.3: A full expression containing an increment (++) or decrement (--) operator should have no other potential side effects other than that caused by the increment or decrement operator",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1603][misra-c2012-13.4]: Result of assignment operator should not be used",
            "message": "[C1603][misra-c2012-13.4]: Result of assignment operator should not be used",
            "translation": "[C1603][misra-c2012-13.4]: Violation of MISRA C:2012 Rule 13.4: The result of an assignment operator should not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1603][misra-c2012-13.4]: violation of rule_13_4\n{ExternalMessage}",
            "message": "[C1603][misra-c2012-13.4]: violation of rule_13_4\n{ExternalMessage}",
            "translation": "[C1603][misra-c2012-13.4]: Violation of MISRA C:2012 Rule 13.4: The result of an assignment operator should not be used: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1602][misra-c2012-13.5]: Right hand operand may have persistent side effect, Location: {Loc}",
            "message": "[C1602][misra-c2012-13.5]: Right hand operand may have persistent side effect, Location: {Loc}",
            "translation": "[C1602][misra-c2012-13.5]: Violation of MISRA C:2012 Rule 13.5: The right hand operand of a logical \u0026\u0026 or || operator shall not contain persistent side effects (The operand may have persistent side effects at {Loc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Loc",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1602][misra-c2012-13.5]: violation of misra-c2012-13.5\nFunction {Name} may have persistent side effect",
            "message": "[C1602][misra-c2012-13.5]: violation of misra-c2012-13.5\nFunction {Name} may have persistent side effect",
            "translation": "[C1602][misra-c2012-13.5]: Violation of MISRA C:2012 Rule 13.5: The right hand operand of a logical \u0026\u0026 or || operator shall not contain persistent side effects (The function \"{Name}\" may have persistent side effects)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Name",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Name"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1601][misra-c2012-13.6]: violation of misra-c2012-13.6",
            "message": "[C1601][misra-c2012-13.6]: violation of misra-c2012-13.6",
            "translation": "[C1601][misra-c2012-13.6]: Violation of MISRA C:2012 Rule 13.6: The operand of the sizeof operator shall not contain any expression which has potential side effects",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1704][misra-c2012-14.1]: loop counter cannot be float",
            "message": "[C1704][misra-c2012-14.1]: loop counter cannot be float",
            "translation": "[C1704][misra-c2012-14.1]: Violation of MISRA C:2012 Rule 14.1: A loop counter shall not have essentially floating type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1704][misra-c2012-14.1]: violation of misra-c2012-14.1\n{ExternalMessage}",
            "message": "[C1704][misra-c2012-14.1]: violation of misra-c2012-14.1\n{ExternalMessage}",
            "translation": "[C1704][misra-c2012-14.1]: Violation of MISRA C:2012 Rule 14.1: A loop counter shall not have essentially floating type: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1703][misra-c2012-14.2]: {WhichExpr} clause in for loop may have persistent side effect",
            "message": "[C1703][misra-c2012-14.2]: {WhichExpr} clause in for loop may have persistent side effect",
            "translation": "[C1703][misra-c2012-14.2]: Violation of MISRA C:2012 Rule 14.2: A for loop shall be well-formed (\"{WhichExpr}\" clause in the for loop may have persistent side effects)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "WhichExpr",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.WhichExpr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1703][misra-c2012-14.2]: loop counter '{CounterName}' is not used in {WhichExpr} clause",
            "message": "[C1703][misra-c2012-14.2]: loop counter '{CounterName}' is not used in {WhichExpr} clause",
            "translation": "[C1703][misra-c2012-14.2]: Violation of MISRA C:2012 Rule 14.2: A for loop shall be well-formed (The loop counter \"{CounterName}\" is not used in \"{WhichExpr}\" clause)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CounterName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.CounterName"
                },
                {
                    "id": "WhichExpr",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.WhichExpr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1703][misra-c2012-14.2]: loop counter '{CounterName}' is modified in loop body",
            "message": "[C1703][misra-c2012-14.2]: loop counter '{CounterName}' is modified in loop body",
            "translation": "[C1703][misra-c2012-14.2]: Violation of MISRA C:2012 Rule 14.2: A for loop shall be well-formed (The loop counter \"{CounterName}\" is modified in the loop body)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "CounterName",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.CounterName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1703][misra-c2012-14.2]: {WhichExpr} clause uses reference '{RefName}' modified in loop body",
            "message": "[C1703][misra-c2012-14.2]: {WhichExpr} clause uses reference '{RefName}' modified in loop body",
            "translation": "[C1703][misra-c2012-14.2]: Violation of MISRA C:2012 Rule 14.2: A for loop shall be well-formed (The \"{WhichExpr}\" clause uses the reference \"{RefName}\" modified in the loop body)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "WhichExpr",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.WhichExpr"
                },
                {
                    "id": "RefName",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.RefName"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1703][misra-c2012-14.2]: {WhichExpr} clause should set and only set the value of loop counter",
            "message": "[C1703][misra-c2012-14.2]: {WhichExpr} clause should set and only set the value of loop counter",
            "translation": "[C1703][misra-c2012-14.2]: Violation of MISRA C:2012 Rule 14.2: A for loop shall be well-formed (The \"{WhichExpr}\" clause should set and only set the value of loop counter)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "WhichExpr",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.WhichExpr"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1703][misra-c2012-14.2]: second clause uses non-boolean control flag",
            "message": "[C1703][misra-c2012-14.2]: second clause uses non-boolean control flag",
            "translation": "[C1703][misra-c2012-14.2]: Violation of MISRA C:2012 Rule 14.2: A for loop shall be well-formed (The second clause uses a non-boolean control flag)",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1702][misra-c2012-14.3]: violation of misra-c2012-14.3",
            "message": "[C1702][misra-c2012-14.3]: violation of misra-c2012-14.3",
            "translation": "[C1702][misra-c2012-14.3]: Violation of MISRA C:2012 Rule 14.3: Controlling expressions shall not be invariant",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1702][misra-c2012-14.3]: violation of misra-c2012-14.3\n{ExternalMessage}",
            "message": "[C1702][misra-c2012-14.3]: violation of misra-c2012-14.3\n{ExternalMessage}",
            "translation": "[C1702][misra-c2012-14.3]: Violation of MISRA C:2012 Rule 14.3: Controlling expressions shall not be invariant: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1701][misra-c2012-14.4]: violation of misra-c2012-14.4",
            "message": "[C1701][misra-c2012-14.4]: violation of misra-c2012-14.4",
            "translation": "[C1701][misra-c2012-14.4]: Violation of MISRA C:2012 Rule 14.4: The controlling expression of an if statement and the controlling expression of an iteration-statement shall have essentially Boolean type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1807][misra-c2012-15.1]: violation of misra-c2012-15.1",
            "message": "[C1807][misra-c2012-15.1]: violation of misra-c2012-15.1",
            "translation": "[C1807][misra-c2012-15.1]: Violation of MISRA C:2012 Rule 15.1: The goto statement should not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1806][misra-c2012-15.2]: violation of misra-c2012-15.2",
            "message": "[C1806][misra-c2012-15.2]: violation of misra-c2012-15.2",
            "translation": "[C1806][misra-c2012-15.2]: Violation of MISRA C:2012 Rule 15.2: The goto statement shall jump to a label declared later in the same function",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1805][misra-c2012-15.3]: violation of misra-c2012-15.3",
            "message": "[C1805][misra-c2012-15.3]: violation of misra-c2012-15.3",
            "translation": "[C1805][misra-c2012-15.3]: Violation of MISRA C:2012 Rule 15.3: Any label referenced by a goto statement shall be declared in the same block, or in any block enclosing the goto statement",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1804][misra-c2012-15.4]: violation of misra-c2012-15.4",
            "message": "[C1804][misra-c2012-15.4]: violation of misra-c2012-15.4",
            "translation": "[C1804][misra-c2012-15.4]: Violation of MISRA C:2012 Rule 15.4: There should be no more than one break or goto statement used to terminate any iteration statement",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1803][misra-c2012-15.5]: violation of misra-c2012-15.5",
            "message": "[C1803][misra-c2012-15.5]: violation of misra-c2012-15.5",
            "translation": "[C1803][misra-c2012-15.5]: Violation of MISRA C:2012 Rule 15.5: A function should have a single point of exit at the end",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1802][misra-c2012-15.6]: violation of misra-c2012-15.6",
            "message": "[C1802][misra-c2012-15.6]: violation of misra-c2012-15.6",
            "translation": "[C1802][misra-c2012-15.6]: Violation of MISRA C:2012 Rule 15.6: The body of an iteration-statement or a selection-statement shall be a compound-statement",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1801][misra-c2012-15.7]: violation of misra-c2012-15.7",
            "message": "[C1801][misra-c2012-15.7]: violation of misra-c2012-15.7",
            "translation": "[C1801][misra-c2012-15.7]: Violation of MISRA C:2012 Rule 15.7: All if ... else if constructs shall be terminated with an else statement",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1907][misra-c2012-16.1]: violation of misra-c2012-16.1",
            "message": "[C1907][misra-c2012-16.1]: violation of misra-c2012-16.1",
            "translation": "[C1907][misra-c2012-16.1]: Violation of MISRA C:2012 Rule 16.1: All switch statements shall be well-formed",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1906][misra-c2012-16.2]: violation of misra-c2012-16.2",
            "message": "[C1906][misra-c2012-16.2]: violation of misra-c2012-16.2",
            "translation": "[C1906][misra-c2012-16.2]: Violation of MISRA C:2012 Rule 16.2: A switch label shall only be used when the most closely-enclosing compound statement is the body of a switch statement",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1905][misra-c2012-16.3]: violation of misra-c2012-16.3",
            "message": "[C1905][misra-c2012-16.3]: violation of misra-c2012-16.3",
            "translation": "[C1905][misra-c2012-16.3]: Violation of MISRA C:2012 Rule 16.3: An unconditional break statement shall terminate every switch-clause",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1904][misra-c2012-16.4]: violation of misra-c2012-16.4",
            "message": "[C1904][misra-c2012-16.4]: violation of misra-c2012-16.4",
            "translation": "[C1904][misra-c2012-16.4]: Violation of MISRA C:2012 Rule 16.4: Every switch statement shall have a default label",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1903][misra-c2012-16.5]: violation of misra-c2012-16.5",
            "message": "[C1903][misra-c2012-16.5]: violation of misra-c2012-16.5",
            "translation": "[C1903][misra-c2012-16.5]: Violation of MISRA C:2012 Rule 16.5: A default label shall appear as either the first or the last switch label of a switch statement",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1902][misra-c2012-16.6]: violation of misra-c2012-16.6",
            "message": "[C1902][misra-c2012-16.6]: violation of misra-c2012-16.6",
            "translation": "[C1902][misra-c2012-16.6]: Violation of MISRA C:2012 Rule 16.6: Every switch statement shall have at least two switch-clauses",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1901][misra-c2012-16.7]: violation of misra-c2012-16.7",
            "message": "[C1901][misra-c2012-16.7]: violation of misra-c2012-16.7",
            "translation": "[C1901][misra-c2012-16.7]: Violation of MISRA C:2012 Rule 16.7: A switch-expression shall not have essentially Boolean type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1508][misra-c2012-17.1]: violation of misra-c2012-17.1",
            "message": "[C1508][misra-c2012-17.1]: violation of misra-c2012-17.1",
            "translation": "[C1508][misra-c2012-17.1]: Violation of MISRA C:2012 Rule 17.1: The features of \u003cstdarg.h\u003e shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1507][misra-c2012-17.2]: violation of misra-c2012-17.2\nfound a recursive chain {ExternalMessage}",
            "message": "[C1507][misra-c2012-17.2]: violation of misra-c2012-17.2\nfound a recursive chain {ExternalMessage}",
            "translation": "[C1507][misra-c2012-17.2]: Violation of MISRA C:2012 Rule 17.2: Functions shall not call themselves, either directly or indirectly (a recursive chain found: {ExternalMessage})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1507][misra-c2012-17.2]: violation of misra-c2012-17.2\n{ExternalMessage}",
            "message": "[C1507][misra-c2012-17.2]: violation of misra-c2012-17.2\n{ExternalMessage}",
            "translation": "[C1507][misra-c2012-17.2]: Violation of MISRA C:2012 Rule 17.2: Functions shall not call themselves, either directly or indirectly: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1506][misra-c2012-17.3]: implicit declaration of function\n{ExternalMessage}",
            "message": "[C1506][misra-c2012-17.3]: implicit declaration of function\n{ExternalMessage}",
            "translation": "[C1506][misra-c2012-17.3]: Violation of MISRA C:2012 Rule 17.3: A function shall not be declared implicitly: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1505][misra-c2012-17.4]: violation of misra-c2012-17.4",
            "message": "[C1505][misra-c2012-17.4]: violation of misra-c2012-17.4",
            "translation": "[C1505][misra-c2012-17.4]: Violation of MISRA C:2012 Rule 17.4: All exit paths from a function with non-void return type shall have an explicit return statement with an expression",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1505][misra-c2012-17.4]: violation of rule_17_4\n{ExternalMessage}",
            "message": "[C1505][misra-c2012-17.4]: violation of rule_17_4\n{ExternalMessage}",
            "translation": "[C1505][misra-c2012-17.4]: Violation of MISRA C:2012 Rule 17.4: All exit paths from a function with non-void return type shall have an explicit return statement with an expression: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1504][misra-c2012-17.5]: null pointer argument used for parameter with array type",
            "message": "[C1504][misra-c2012-17.5]: null pointer argument used for parameter with array type",
            "translation": "[C1504][misra-c2012-17.5]: Violation of MISRA C:2012 Rule 17.5: The function argument corresponding to a parameter declared to have an array type shall have an appropriate number of elements (A null pointer argument is used for a parameter with array type)",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1504][misra-c2012-17.5]: argument with improper array size used for parameter with array type",
            "message": "[C1504][misra-c2012-17.5]: argument with improper array size used for parameter with array type",
            "translation": "[C1504][misra-c2012-17.5]: Violation of MISRA C:2012 Rule 17.5: The function argument corresponding to a parameter declared to have an array type shall have an appropriate number of elements (An argument with improper array size is used for a parameter with array type)",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1504][misra-c2012-17.5]: violation of misra-c2012-17.5\n{ExternalMessage}",
            "message": "[C1504][misra-c2012-17.5]: violation of misra-c2012-17.5\n{ExternalMessage}",
            "translation": "[C1504][misra-c2012-17.5]: Violation of MISRA C:2012 Rule 17.5: The function argument corresponding to a parameter declared to have an array type shall have an appropriate number of elements: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1503][misra-c2012-17.6]: violation of misra-c2012-17.6",
            "message": "[C1503][misra-c2012-17.6]: violation of misra-c2012-17.6",
            "translation": "[C1503][misra-c2012-17.6]: Violation of MISRA C:2012 Rule 17.6: The declaration of an array parameter shall not contain the static keyword between the [ ]",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1502][misra-c2012-17.7]: violation of misra-c2012-17.7",
            "message": "[C1502][misra-c2012-17.7]: violation of misra-c2012-17.7",
            "translation": "[C1502][misra-c2012-17.7]: Violation of MISRA C:2012 Rule 17.7: The value returned by a function having non-void return type shall be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1501][misra-c2012-17.8]: violation of misra-c2012-17.8",
            "message": "[C1501][misra-c2012-17.8]: violation of misra-c2012-17.8",
            "translation": "[C1501][misra-c2012-17.8]: Violation of MISRA C:2012 Rule 17.8: A function parameter should not be modified",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1501][misra-c2012-17.8]: parameters should not be modified",
            "message": "[C1501][misra-c2012-17.8]: parameters should not be modified",
            "translation": "[C1501][misra-c2012-17.8]: Violation of MISRA C:2012 Rule 17.8: A function parameter should not be modified",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1308][misra-c2012-18.1]: Pointer arithmetic may cause array out of bound.\n{ExternalMessage}",
            "message": "[C1308][misra-c2012-18.1]: Pointer arithmetic may cause array out of bound.\n{ExternalMessage}",
            "translation": "[C1308][misra-c2012-18.1]: Violation of MISRA C:2012 Rule 18.1: A pointer resulting from arithmetic on a pointer operand shall address an element of the same array as that pointer operand: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1307][misra-c2012-18.2]: violation of misra-c2012-18.2\n{ExternalMessage}",
            "message": "[C1307][misra-c2012-18.2]: violation of misra-c2012-18.2\n{ExternalMessage}",
            "translation": "[C1307][misra-c2012-18.2]: Violation of MISRA C:2012 Rule 18.2: Subtraction between pointers shall only be applied to pointers that address elements of the same array: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1306][misra-c2012-18.3]: violation of misra-c2012-18.3\n{ExternalMessage}",
            "message": "[C1306][misra-c2012-18.3]: violation of misra-c2012-18.3\n{ExternalMessage}",
            "translation": "[C1306][misra-c2012-18.3]: Violation of MISRA C:2012 Rule 18.3: The relational operators \u003e, \u003e=, \u003c and \u003c= shall not be applied to objects of pointer type except where they point into the same object: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1305][misra-c2012-18.4]: violation of misra-c2012-18.4",
            "message": "[C1305][misra-c2012-18.4]: violation of misra-c2012-18.4",
            "translation": "[C1305][misra-c2012-18.4]: Violation of MISRA C:2012 Rule 18.4: The +, -, += and -= operators should not be applied to an expression of pointer type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1304][misra-c2012-18.5]: violation of misra-c2012-18.5",
            "message": "[C1304][misra-c2012-18.5]: violation of misra-c2012-18.5",
            "translation": "[C1304][misra-c2012-18.5]: Violation of MISRA C:2012 Rule 18.5: Declarations should contain no more than two levels of pointer nesting",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1303][misra-c2012-18.6]: violation of misra-c2012-18.6\n{ExternalMessage}",
            "message": "[C1303][misra-c2012-18.6]: violation of misra-c2012-18.6\n{ExternalMessage}",
            "translation": "[C1303][misra-c2012-18.6]: Violation of MISRA C:2012 Rule 18.6: The address of an object with automatic storage shall not be copied to another object that persists after the first object has ceased to exist: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C1302][misra-c2012-18.7]: violation of misra-c2012-18.7",
            "message": "[C1302][misra-c2012-18.7]: violation of misra-c2012-18.7",
            "translation": "[C1302][misra-c2012-18.7]: Violation of MISRA C:2012 Rule 18.7: Flexible array members shall not be declared",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C1301][misra-c2012-18.8]: violation of misra-c2012-18.8",
            "message": "[C1301][misra-c2012-18.8]: violation of misra-c2012-18.8",
            "translation": "[C1301][misra-c2012-18.8]: Violation of MISRA C:2012 Rule 18.8: Variable-length array types shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0302][misra-c2012-19.1]: violation of misra-c2012-19.1, assign or copy is overlapped",
            "message": "[C0302][misra-c2012-19.1]: violation of misra-c2012-19.1, assign or copy is overlapped",
            "translation": "[C0302][misra-c2012-19.1]: Violation of MISRA C:2012 Rule 19.1, assign or copy is overlapped",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0302][misra-c2012-19.1]: violation of misra-c2012-19.1, assign or copy is overlapped\n{ExternalMessage}",
            "message": "[C0302][misra-c2012-19.1]: violation of misra-c2012-19.1, assign or copy is overlapped\n{ExternalMessage}",
            "translation": "[C0302][misra-c2012-19.1]: Violation of MISRA C:2012 Rule 19.1: An object shall not be assigned or copied to an overlapping object: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0301][misra-c2012-19.2]: violation of misra-c2012-19.2",
            "message": "[C0301][misra-c2012-19.2]: violation of misra-c2012-19.2",
            "translation": "[C0301][misra-c2012-19.2]: Violation of MISRA C:2012 Rule 19.2: The union keyword should not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0114][misra-c2012-20.1]: violation of misra-c2012-20.1",
            "message": "[C0114][misra-c2012-20.1]: violation of misra-c2012-20.1",
            "translation": "[C0114][misra-c2012-20.1]: Violation of MISRA C:2012 Rule 20.1: #include directives should only be preceded by preprocessor directives or comments",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0113][misra-c2012-20.2]: violation of misra-c2012-20.2",
            "message": "[C0113][misra-c2012-20.2]: violation of misra-c2012-20.2",
            "translation": "[C0113][misra-c2012-20.2]: Violation of MISRA C:2012 Rule 20.2: The ', \" or \\ characters and the /* or // character sequences shall not occur in a header file name",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0112][misra-c2012-20.3]: violation of misra-c2012-20.3",
            "message": "[C0112][misra-c2012-20.3]: violation of misra-c2012-20.3",
            "translation": "[C0112][misra-c2012-20.3]: Violation of MISRA C:2012 Rule 20.3: The #include directive shall be followed by either a \u003cfilename\u003e or \"filename\" sequence",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0111][misra-c2012-20.4]: violation of misra-c2012-20.4",
            "message": "[C0111][misra-c2012-20.4]: violation of misra-c2012-20.4",
            "translation": "[C0111][misra-c2012-20.4]: Violation of MISRA C:2012 Rule 20.4: A macro shall not be defined with the same name as a keyword",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0110][misra-c2012-20.5]: violation of misra-c2012-20.5",
            "message": "[C0110][misra-c2012-20.5]: violation of misra-c2012-20.5",
            "translation": "[C0110][misra-c2012-20.5]: Violation of MISRA C:2012 Rule 20.5: #undef should not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0109][misra-c2012-20.6]: violation of misra-c2012-20.6",
            "message": "[C0109][misra-c2012-20.6]: violation of misra-c2012-20.6",
            "translation": "[C0109][misra-c2012-20.6]: Violation of MISRA C:2012 Rule 20.6: Tokens that look like a preprocessing directive shall not occur within a macro argument",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0108][misra-c2012-20.7]: violation of misra-c2012-20.7",
            "message": "[C0108][misra-c2012-20.7]: violation of misra-c2012-20.7",
            "translation": "[C0108][misra-c2012-20.7]: Violation of MISRA C:2012 Rule 20.7: Expressions resulting from the expansion of macro parameters shall be enclosed in parentheses",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0107][misra-c2012-20.8]: violation of misra-c2012-20.8",
            "message": "[C0107][misra-c2012-20.8]: violation of misra-c2012-20.8",
            "translation": "[C0107][misra-c2012-20.8]: Violation of MISRA C:2012 Rule 20.8: The controlling expression of a #if or #elif preprocessing directive shall evaluate to 0 or 1",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0106][misra-c2012-20.9]: violation of misra-c2012-20.9",
            "message": "[C0106][misra-c2012-20.9]: violation of misra-c2012-20.9",
            "translation": "[C0106][misra-c2012-20.9]: Violation of MISRA C:2012 Rule 20.9: All identifiers used in the controlling expression of #if or #elif preprocessing directives shall be #define'd before evaluation",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0105][misra-c2012-20.10]: violation of misra-c2012-20.10",
            "message": "[C0105][misra-c2012-20.10]: violation of misra-c2012-20.10",
            "translation": "[C0105][misra-c2012-20.10]: Violation of MISRA C:2012 Rule 20.10: The # and ## preprocessor operators should not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0104][misra-c2012-20.11]: violation of misra-c2012-20.11",
            "message": "[C0104][misra-c2012-20.11]: violation of misra-c2012-20.11",
            "translation": "[C0104][misra-c2012-20.11]: Violation of MISRA C:2012 Rule 20.11: A macro parameter immediately following a # operator shall not immediately be followed by a ## operator",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0103][misra-c2012-20.12]: violation of misra-c2012-20.12",
            "message": "[C0103][misra-c2012-20.12]: violation of misra-c2012-20.12",
            "translation": "[C0103][misra-c2012-20.12]: Violation of MISRA C:2012 Rule 20.12: A macro parameter used as an operand to the # or ## operators, which is itself subject to further macro replacement, shall only be used as an operand to these operators",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0102][misra-c2012-20.13]: violation of misra-c2012-20.13",
            "message": "[C0102][misra-c2012-20.13]: violation of misra-c2012-20.13",
            "translation": "[C0102][misra-c2012-20.13]: Violation of MISRA C:2012 Rule 20.13: A line whose first token is # shall be a valid preprocessing directive",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0101][misra-c2012-20.14]: violation of misra-c2012-20.14",
            "message": "[C0101][misra-c2012-20.14]: violation of misra-c2012-20.14",
            "translation": "[C0101][misra-c2012-20.14]: Violation of MISRA C:2012 Rule 20.14: All #else, #elif and #endif preprocessor directives shall reside in the same file as the #if, #ifdef or #ifndef directive to which they are related",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0420][misra-c2012-21.1]: violation of misra-c2012-21.1",
            "message": "[C0420][misra-c2012-21.1]: violation of misra-c2012-21.1",
            "translation": "[C0420][misra-c2012-21.1]: Violation of MISRA C:2012 Rule 21.1: #define and #undef shall not be used on a reserved identifier or reserved macro name",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0419][misra-c2012-21.2]: violation of misra-c2012-21.2",
            "message": "[C0419][misra-c2012-21.2]: violation of misra-c2012-21.2",
            "translation": "[C0419][misra-c2012-21.2]: Violation of MISRA C:2012 Rule 21.2: A reserved identifier or reserved macro name shall not be declared",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0418][misra-c2012-21.3]: violation of misra-c2012-21.3",
            "message": "[C0418][misra-c2012-21.3]: violation of misra-c2012-21.3",
            "translation": "[C0418][misra-c2012-21.3]: Violation of MISRA C:2012 Rule 21.3: The memory allocation and deallocation functions of \u003cstdlib.h\u003e shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0417][misra-c2012-21.4]: violation of misra-c2012-21.4",
            "message": "[C0417][misra-c2012-21.4]: violation of misra-c2012-21.4",
            "translation": "[C0417][misra-c2012-21.4]: Violation of MISRA C:2012 Rule 21.4: The standard header file \u003csetjmp.h\u003e shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0416][misra-c2012-21.5]: violation of misra-c2012-21.5",
            "message": "[C0416][misra-c2012-21.5]: violation of misra-c2012-21.5",
            "translation": "[C0416][misra-c2012-21.5]: Violation of MISRA C:2012 Rule 21.5: The standard header file \u003csignal.h\u003e shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0415][misra-c2012-21.6]: violation of misra-c2012-21.6",
            "message": "[C0415][misra-c2012-21.6]: violation of misra-c2012-21.6",
            "translation": "[C0415][misra-c2012-21.6]: Violation of MISRA C:2012 Rule 21.6: The Standard Library input/output functions shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0414][misra-c2012-21.7]: violation of misra-c2012-21.7",
            "message": "[C0414][misra-c2012-21.7]: violation of misra-c2012-21.7",
            "translation": "[C0414][misra-c2012-21.7]: Violation of MISRA C:2012 Rule 21.7: The Standard Library functions atof, atoi, atol and atoll functions of \u003cstdlib.h\u003e shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0413][misra-c2012-21.8]: violation of misra-c2012-21.8",
            "message": "[C0413][misra-c2012-21.8]: violation of misra-c2012-21.8",
            "translation": "[C0413][misra-c2012-21.8]: Violation of MISRA C:2012 Rule 21.8: The Standard Library termination functions of \u003cstdlib.h\u003e shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0412][misra-c2012-21.9]: violation of misra-c2012-21.9",
            "message": "[C0412][misra-c2012-21.9]: violation of misra-c2012-21.9",
            "translation": "[C0412][misra-c2012-21.9]: Violation of MISRA C:2012 Rule 21.9: The Standard Library functions bsearch and qsort of \u003cstdlib.h\u003e shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0411][misra-c2012-21.10]: violation of misra-c2012-21.10",
            "message": "[C0411][misra-c2012-21.10]: violation of misra-c2012-21.10",
            "translation": "[C0411][misra-c2012-21.10]: Violation of MISRA C:2012 Rule 21.10: The value of errno shall only be tested when the last function to be called was an errno-setting-function",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0410][misra-c2012-21.11]: violation of misra-c2012-21.11",
            "message": "[C0410][misra-c2012-21.11]: violation of misra-c2012-21.11",
            "translation": "[C0410][misra-c2012-21.11]: Violation of MISRA C:2012 Rule 21.11: The standard header file \u003ctgmath.h\u003e shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0409][misra-c2012-21.12]: violation of misra-c2012-21.12",
            "message": "[C0409][misra-c2012-21.12]: violation of misra-c2012-21.12",
            "translation": "[C0409][misra-c2012-21.12]: Violation of MISRA C:2012 Rule 21.12: The exception handling features of \u003cfenv.h\u003e should not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0408][misra-c2012-21.13]: violation of misra-c2012-21.13\n{ExternalMessage}",
            "message": "[C0408][misra-c2012-21.13]: violation of misra-c2012-21.13\n{ExternalMessage}",
            "translation": "[C0408][misra-c2012-21.13]: Violation of MISRA C:2012 Rule 21.13: Any value passed to a function in \u003cctype.h\u003e shall be representable as an unsigned char or be the value EOF: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0407][misra-c2012-21.14]: violation of misra-c2012-21.14\n{ExternalMessage}",
            "message": "[C0407][misra-c2012-21.14]: violation of misra-c2012-21.14\n{ExternalMessage}",
            "translation": "[C0407][misra-c2012-21.14]: Violation of MISRA C:2012 Rule 21.14: The Standard Library function memcmp shall not be used to compare null terminated strings: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0406][misra-c2012-21.15]: violation of misra-c2012-21.15",
            "message": "[C0406][misra-c2012-21.15]: violation of misra-c2012-21.15",
            "translation": "[C0406][misra-c2012-21.15]: Violation of MISRA C:2012 Rule 21.15: The pointer arguments to the Standard Library functions memcpy, memmove and memcmp shall be pointers to qualified or unqualified versions of compatible types",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0405][misra-c2012-21.16]: violation of misra-c2012-21.16",
            "message": "[C0405][misra-c2012-21.16]: violation of misra-c2012-21.16",
            "translation": "[C0405][misra-c2012-21.16]: Violation of MISRA C:2012 Rule 21.16: The pointer arguments to the Standard Library function memcmp shall point to either a pointer type, an essentially signed type, an essentially unsigned type, an essentially Boolean type or an essentially enum type",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0404][misra-c2012-21.17]: The cstring function call may cause read or write out of bound.\n{ExternalMessage}",
            "message": "[C0404][misra-c2012-21.17]: The cstring function call may cause read or write out of bound.\n{ExternalMessage}",
            "translation": "[C0404][misra-c2012-21.17]: Violation of MISRA C:2012 Rule 21.17: Use of the string handling functions from \u003cstring.h\u003e shall not result in accesses beyond the bounds of the objects referenced by their pointer parameters: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0403][misra-c2012-21.18]: size_t value invalid as function argument.\nsource pointer object type: {SourceType}\ndestination object type: {DestinationType}\nLocation: {Loc}",
            "message": "[C0403][misra-c2012-21.18]: size_t value invalid as function argument.\nsource pointer object type: {SourceType}\ndestination object type: {DestinationType}\nLocation: {Loc}",
            "translation": "[C0403][misra-c2012-21.18]: Violation of MISRA C:2012 Rule 21.18: The size_t argument passed to any function in \u003cstring.h\u003e shall have an appropriate value (implicit conversion from \"pointer to {SourceType}\" to \"{DestinationType}\" at {Loc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SourceType",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.SourceType"
                },
                {
                    "id": "DestinationType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.DestinationType"
                },
                {
                    "id": "Loc",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0403][misra-c2012-21.18]: violation of misra-c2012-21.18\n{ExternalMessage}",
            "message": "[C0403][misra-c2012-21.18]: violation of misra-c2012-21.18\n{ExternalMessage}",
            "translation": "[C0403][misra-c2012-21.18]: Violation of MISRA C:2012 Rule 21.18: The size_t argument passed to any function in \u003cstring.h\u003e shall have an appropriate value: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0402][misra-c2012-21.19]: the return value of function is assigned to non-const qualified type\nsource pointer object type: {SourceType}\ndestination object type: {DestinationType}\nLocation: {Loc}",
            "message": "[C0402][misra-c2012-21.19]: the return value of function is assigned to non-const qualified type\nsource pointer object type: {SourceType}\ndestination object type: {DestinationType}\nLocation: {Loc}",
            "translation": "[C0402][misra-c2012-21.19]: Violation of MISRA C:2012 Rule 21.19: The pointers returned by the Standard Library functions localeconv, getenv, setlocale or, strerror shall only be used as if they have pointer to const-qualified type (implicit conversion from \"pointer to {SourceType}\" to \"{DestinationType}\" at {Loc})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "SourceType",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.SourceType"
                },
                {
                    "id": "DestinationType",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.DestinationType"
                },
                {
                    "id": "Loc",
                    "string": "%[3]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 3,
                    "expr": "result.Loc"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0402][misra-c2012-21.19]: violation of misra-c2012-21.19\n{ExternalMessage}",
            "message": "[C0402][misra-c2012-21.19]: violation of misra-c2012-21.19\n{ExternalMessage}",
            "translation": "[C0402][misra-c2012-21.19]: Violation of MISRA C:2012 Rule 21.19: The pointers returned by the Standard Library functions localeconv, getenv, setlocale or, strerror shall only be used as if they have pointer to const-qualified type: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0401][misra-c2012-21.20]: violation of misra-c2012-21.20\n{ExternalMessage}",
            "message": "[C0401][misra-c2012-21.20]: violation of misra-c2012-21.20\n{ExternalMessage}",
            "translation": "[C0401][misra-c2012-21.20]: Violation of MISRA C:2012 Rule 21.20: The pointer returned by the Standard Library functions asctime, ctime, gmtime, localtime, localeconv, getenv, setlocale or strerror shall not be used following a subsequent call to the same function: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0421][misra-c2012-21.21]: violation of misra-c2012-21.21",
            "message": "[C0421][misra-c2012-21.21]: violation of misra-c2012-21.21",
            "translation": "[C0421][misra-c2012-21.21]: Violation of MISRA C:2012 Rule 21.21: The Standard Library function system of \u003cstdlib.h\u003e shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C0210][misra-c2012-22.1]: violation of misra-c2012-22.1\n{ExternalMessage}",
            "message": "[C0210][misra-c2012-22.1]: violation of misra-c2012-22.1\n{ExternalMessage}",
            "translation": "[C0210][misra-c2012-22.1]: Violation of MISRA C:2012 Rule 22.1: All resources obtained dynamically by means of Standard Library functions shall be explicitly released: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0209][misra-c2012-22.2]: violation of misra-c2012-22.2\n{ExternalMessage}",
            "message": "[C0209][misra-c2012-22.2]: violation of misra-c2012-22.2\n{ExternalMessage}",
            "translation": "[C0209][misra-c2012-22.2]: Violation of MISRA C:2012 Rule 22.2: A block of memory shall only be freed if it was allocated by means of a Standard Library function: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0208][misra-c2012-22.3]: violation of misra-c2012-22.3\n{ExternalMessage}",
            "message": "[C0208][misra-c2012-22.3]: violation of misra-c2012-22.3\n{ExternalMessage}",
            "translation": "[C0208][misra-c2012-22.3]: Violation of MISRA C:2012 Rule 22.3: The same file shall not be open for read and write access at the same time on different streams: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0207][misra-c2012-22.4]: violation of misra-c2012-22.4\n{ExternalMessage}",
            "message": "[C0207][misra-c2012-22.4]: violation of misra-c2012-22.4\n{ExternalMessage}",
            "translation": "[C0207][misra-c2012-22.4]: Violation of MISRA C:2012 Rule 22.4: There shall be no attempt to write to a stream which has been opened as read-only: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0206][misra-c2012-22.5]: violation of misra-c2012-22.5\n{ExternalMessage}",
            "message": "[C0206][misra-c2012-22.5]: violation of misra-c2012-22.5\n{ExternalMessage}",
            "translation": "[C0206][misra-c2012-22.5]: Violation of MISRA C:2012 Rule 22.5: A pointer to a FILE object shall not be dereferenced: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0205][misra-c2012-22.6]: violation of misra-c2012-22.6\n{ExternalMessage}",
            "message": "[C0205][misra-c2012-22.6]: violation of misra-c2012-22.6\n{ExternalMessage}",
            "translation": "[C0205][misra-c2012-22.6]: Violation of MISRA C:2012 Rule 22.6: The value of a pointer to a FILE shall not be used after the associated stream has been closed: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0204][misra-c2012-22.7]: violation of misra-c2012-22.7\n{ExternalMessage}",
            "message": "[C0204][misra-c2012-22.7]: violation of misra-c2012-22.7\n{ExternalMessage}",
            "translation": "[C0204][misra-c2012-22.7]: Violation of MISRA C:2012 Rule 22.7: The macro EOF shall only be compared with the unmodified return value from any Standard Library function capable of returning EOF: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0203][misra-c2012-22.8]: violation of misra-c2012-22.8\n{ExternalMessage}",
            "message": "[C0203][misra-c2012-22.8]: violation of misra-c2012-22.8\n{ExternalMessage}",
            "translation": "[C0203][misra-c2012-22.8]: Violation of MISRA C:2012 Rule 22.8: The value of errno shall be set to zero prior to a call to an errno-setting-function: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0202][misra-c2012-22.9]: violation of misra-c2012-22.9\n{ExternalMessage}",
            "message": "[C0202][misra-c2012-22.9]: violation of misra-c2012-22.9\n{ExternalMessage}",
            "translation": "[C0202][misra-c2012-22.9]: Violation of MISRA C:2012 Rule 22.9: The value of errno shall be tested against zero after calling an errno-setting-function: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C0201][misra-c2012-22.10]: violation of misra-c2012-22.10\n{ExternalMessage}",
            "message": "[C0201][misra-c2012-22.10]: violation of misra-c2012-22.10\n{ExternalMessage}",
            "translation": "[C0201][misra-c2012-22.10]: Violation of MISRA C:2012 Rule 22.10: The value of errno shall only be tested when the last function to be called was an errno-setting-function: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C2306][misra-c2012-dir-4.3]: assembly code should be isolated",
            "message": "[C2306][misra-c2012-dir-4.3]: assembly code should be isolated",
            "translation": "[C2306][misra-c2012-dir-4.3]: Violation of MISRA C:2012 Dir 4.3: Assembly language shall be encapsulated and isolated",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C2306][misra-c2012-dir-4.3]: assembly code should be encapsulated",
            "message": "[C2306][misra-c2012-dir-4.3]: assembly code should be encapsulated",
            "translation": "[C2306][misra-c2012-dir-4.3]: Violation of MISRA C:2012 Dir 4.3: Assembly language shall be encapsulated and isolated",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C2310][misra-c2012-dir-4.7]: error should be tested",
            "message": "[C2310][misra-c2012-dir-4.7]: error should be tested",
            "translation": "[C2310][misra-c2012-dir-4.7]: Violation of MISRA C:2012 Dir 4.7: If a function returns error information, then that error information shall be tested",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C2313][misra-c2012-dir-4.10]: {Filename} has no precaution",
            "message": "[C2313][misra-c2012-dir-4.10]: {Filename} has no precaution",
            "translation": "[C2313][misra-c2012-dir-4.10]: Violation of MISRA C:2012 Dir 4.10: Precautions shall be taken in order to prevent the contents of a header file being included more than once ({Filename} has no precaution)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Filename",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Filename"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C2313][misra-c2012-dir-4.10]: {Filename} and {OtherFilename} has same file identifier",
            "message": "[C2313][misra-c2012-dir-4.10]: {Filename} and {OtherFilename} has same file identifier",
            "translation": "[C2313][misra-c2012-dir-4.10]: Violation of MISRA C:2012 Dir 4.10: Precautions shall be taken in order to prevent the contents of a header file being included more than once ({Filename} and {OtherFilename} have the same file identifier)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Filename",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.Filename"
                },
                {
                    "id": "OtherFilename",
                    "string": "%[2]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 2,
                    "expr": "result.OtherFilename"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C2314][misra-c2012-dir-4.11]: violation of misra-c2012-dir-4.11\n{ExternalMessage}",
            "message": "[C2314][misra-c2012-dir-4.11]: violation of misra-c2012-dir-4.11\n{ExternalMessage}",
            "translation": "[C2314][misra-c2012-dir-4.11]: Violation of MISRA C:2012 Dir 4.11: The validity of values passed to library functions shall be checked: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C2315][misra-c2012-dir-4.12]: dynamic allocation should not be used",
            "message": "[C2315][misra-c2012-dir-4.12]: dynamic allocation should not be used",
            "translation": "[C2315][misra-c2012-dir-4.12]: Violation of MISRA C:2012 Dir 4.12: Dynamic memory allocation shall not be used",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "[C2317][misra-c2012-dir-4.14]: violation of misra-c2012-dir-4.14\n{ExternalMessage}",
            "message": "[C2317][misra-c2012-dir-4.14]: violation of misra-c2012-dir-4.14\n{ExternalMessage}",
            "translation": "[C2317][misra-c2012-dir-4.14]: Violation of MISRA C:2012 Dir 4.14: The validity of values received from external sources shall be checked: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "[C7966][NAIVESYSTEMS_C7966]: violation of NAIVESYSTEMS_C7966\n{ExternalMessage}",
            "message": "[C7966][NAIVESYSTEMS_C7966]: violation of NAIVESYSTEMS_C7966\n{ExternalMessage}",
            "translation": "[C7966][NAIVESYSTEMS_C7966]: Violation of NAIVESYSTEMS_C7966: The size of malloc should be divisible by 4: {ExternalMessage}",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "ExternalMessage",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "result.ExternalMessage"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-1-1: A project shall not contain unreachable code.",
            "message": "Violation of MISRA C++:2008 Rule 0-1-1: A project shall not contain unreachable code.",
            "translation": "Violation of MISRA C++:2008 Rule 0-1-1: A project shall not contain unreachable code.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-1-2: A project shall not contain infeasible paths.",
            "message": "Violation of MISRA C++:2008 Rule 0-1-2: A project shall not contain infeasible paths.",
            "translation": "Violation of MISRA C++:2008 Rule 0-1-2: A project shall not contain infeasible paths.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-1-3: A project shall not contain unused variables.",
            "message": "Violation of MISRA C++:2008 Rule 0-1-3: A project shall not contain unused variables.",
            "translation": "Violation of MISRA C++:2008 Rule 0-1-3: A project shall not contain unused variables.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-1-4: A project shall not contain non-volatile POD variables having only one use.",
            "message": "Violation of MISRA C++:2008 Rule 0-1-4: A project shall not contain non-volatile POD variables having only one use.",
            "translation": "Violation of MISRA C++:2008 Rule 0-1-4: A project shall not contain non-volatile POD variables having only one use.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-1-5: A project shall not contain unused type declarations.",
            "message": "Violation of MISRA C++:2008 Rule 0-1-5: A project shall not contain unused type declarations.",
            "translation": "Violation of MISRA C++:2008 Rule 0-1-5: A project shall not contain unused type declarations.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-1-6: A project shall not contain instances of non-volatile variables being given values that are never subsequently used.",
            "message": "Violation of MISRA C++:2008 Rule 0-1-6: A project shall not contain instances of non-volatile variables being given values that are never subsequently used.",
            "translation": "Violation of MISRA C++:2008 Rule 0-1-6: A project shall not contain instances of non-volatile variables being given values that are never subsequently used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-1-7: The value returned by a function having a non-void return type that is not an overloaded operator shall always be used.",
            "message": "Violation of MISRA C++:2008 Rule 0-1-7: The value returned by a function having a non-void return type that is not an overloaded operator shall always be used.",
            "translation": "Violation of MISRA C++:2008 Rule 0-1-7: The value returned by a function having a non-void return type that is not an overloaded operator shall always be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-1-8: All functions with void return type shall have external side effect(s).",
            "message": "Violation of MISRA C++:2008 Rule 0-1-8: All functions with void return type shall have external side effect(s).",
            "translation": "Violation of MISRA C++:2008 Rule 0-1-8: All functions with void return type shall have external side effect(s).",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-1-9: There shall be no dead code.",
            "message": "Violation of MISRA C++:2008 Rule 0-1-9: There shall be no dead code.",
            "translation": "Violation of MISRA C++:2008 Rule 0-1-9: There shall be no dead code.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-1-10: Every defined function shall be called at least once.",
            "message": "Violation of MISRA C++:2008 Rule 0-1-10: Every defined function shall be called at least once.",
            "translation": "Violation of MISRA C++:2008 Rule 0-1-10: Every defined function shall be called at least once.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-1-11: There shall be no unused parameters (named or unnamed) in non-virtual functions.",
            "message": "Violation of MISRA C++:2008 Rule 0-1-11: There shall be no unused parameters (named or unnamed) in non-virtual functions.",
            "translation": "Violation of MISRA C++:2008 Rule 0-1-11: There shall be no unused parameters (named or unnamed) in non-virtual functions.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-1-12: There shall be no unused parameters (named or unnamed) in the set of parameters for a virtual function and all the functions that override it.",
            "message": "Violation of MISRA C++:2008 Rule 0-1-12: There shall be no unused parameters (named or unnamed) in the set of parameters for a virtual function and all the functions that override it.",
            "translation": "Violation of MISRA C++:2008 Rule 0-1-12: There shall be no unused parameters (named or unnamed) in the set of parameters for a virtual function and all the functions that override it.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-2-1: An object shall not be assigned to an overlapping object.",
            "message": "Violation of MISRA C++:2008 Rule 0-2-1: An object shall not be assigned to an overlapping object.",
            "translation": "Violation of MISRA C++:2008 Rule 0-2-1: An object shall not be assigned to an overlapping object.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-3-1: Minimization of run-time failures shall be ensured by the use of at least one of: (a) static analysis tools/techniques; (b) dynamic tools/techniques; (c) explicit coding of checks to handle run-time faults.",
            "message": "Violation of MISRA C++:2008 Rule 0-3-1: Minimization of run-time failures shall be ensured by the use of at least one of: (a) static analysis tools/techniques; (b) dynamic tools/techniques; (c) explicit coding of checks to handle run-time faults.",
            "translation": "Violation of MISRA C++:2008 Rule 0-3-1: Minimization of run-time failures shall be ensured by the use of at least one of: (a) static analysis tools/techniques; (b) dynamic tools/techniques; (c) explicit coding of checks to handle run-time faults.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-3-2: If a function generates error information, then that error information shall be tested.",
            "message": "Violation of MISRA C++:2008 Rule 0-3-2: If a function generates error information, then that error information shall be tested.",
            "translation": "Violation of MISRA C++:2008 Rule 0-3-2: If a function generates error information, then that error information shall be tested.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-4-1: Use of scaled-integer or fixed-point arithmetic shall be documented.",
            "message": "Violation of MISRA C++:2008 Rule 0-4-1: Use of scaled-integer or fixed-point arithmetic shall be documented.",
            "translation": "Violation of MISRA C++:2008 Rule 0-4-1: Use of scaled-integer or fixed-point arithmetic shall be documented.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-4-2: Use of floating-point arithmetic shall be documented.",
            "message": "Violation of MISRA C++:2008 Rule 0-4-2: Use of floating-point arithmetic shall be documented.",
            "translation": "Violation of MISRA C++:2008 Rule 0-4-2: Use of floating-point arithmetic shall be documented.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 0-4-3: Floating-point implementations shall comply with a defined floating-point standard.",
            "message": "Violation of MISRA C++:2008 Rule 0-4-3: Floating-point implementations shall comply with a defined floating-point standard.",
            "translation": "Violation of MISRA C++:2008 Rule 0-4-3: Floating-point implementations shall comply with a defined floating-point standard.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 1-0-1: All code shall conform to ISO/IEC 14882:2003 \"The C++ Standard Incorporating Technical Corrigendum 1\".",
            "message": "Violation of MISRA C++:2008 Rule 1-0-1: All code shall conform to ISO/IEC 14882:2003 \"The C++ Standard Incorporating Technical Corrigendum 1\".",
            "translation": "Violation of MISRA C++:2008 Rule 1-0-1: All code shall conform to ISO/IEC 14882:2003 \"The C++ Standard Incorporating Technical Corrigendum 1\".",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 1-0-2: Multiple compilers shall only be used if they have a common, defined interface.",
            "message": "Violation of MISRA C++:2008 Rule 1-0-2: Multiple compilers shall only be used if they have a common, defined interface.",
            "translation": "Violation of MISRA C++:2008 Rule 1-0-2: Multiple compilers shall only be used if they have a common, defined interface.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 1-0-3: The implementation of integer division in the chosen compiler shall be determined and documented.",
            "message": "Violation of MISRA C++:2008 Rule 1-0-3: The implementation of integer division in the chosen compiler shall be determined and documented.",
            "translation": "Violation of MISRA C++:2008 Rule 1-0-3: The implementation of integer division in the chosen compiler shall be determined and documented.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-2-1: The character set and the corresponding encoding shall be documented.",
            "message": "Violation of MISRA C++:2008 Rule 2-2-1: The character set and the corresponding encoding shall be documented.",
            "translation": "Violation of MISRA C++:2008 Rule 2-2-1: The character set and the corresponding encoding shall be documented.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-3-1: Trigraphs shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 2-3-1: Trigraphs shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 2-3-1: Trigraphs shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-5-1: Digraphs should not be used.",
            "message": "Violation of MISRA C++:2008 Rule 2-5-1: Digraphs should not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 2-5-1: Digraphs should not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-7-1: The character sequence /* shall not be used within a C-style comment.",
            "message": "Violation of MISRA C++:2008 Rule 2-7-1: The character sequence /* shall not be used within a C-style comment.",
            "translation": "Violation of MISRA C++:2008 Rule 2-7-1: The character sequence /* shall not be used within a C-style comment.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-7-2: Sections of code shall not be \"commented out\" using C-style comments.",
            "message": "Violation of MISRA C++:2008 Rule 2-7-2: Sections of code shall not be \"commented out\" using C-style comments.",
            "translation": "Violation of MISRA C++:2008 Rule 2-7-2: Sections of code shall not be \"commented out\" using C-style comments.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-7-3: Sections of code should not be \"commented out\" using C++ comments.",
            "message": "Violation of MISRA C++:2008 Rule 2-7-3: Sections of code should not be \"commented out\" using C++ comments.",
            "translation": "Violation of MISRA C++:2008 Rule 2-7-3: Sections of code should not be \"commented out\" using C++ comments.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-10-1: Different identifiers shall be typographically unambiguous.",
            "message": "Violation of MISRA C++:2008 Rule 2-10-1: Different identifiers shall be typographically unambiguous.",
            "translation": "Violation of MISRA C++:2008 Rule 2-10-1: Different identifiers shall be typographically unambiguous.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-10-2: Identifiers declared in an inner scope shall not hide an identifier declared in an outer scope.",
            "message": "Violation of MISRA C++:2008 Rule 2-10-2: Identifiers declared in an inner scope shall not hide an identifier declared in an outer scope.",
            "translation": "Violation of MISRA C++:2008 Rule 2-10-2: Identifiers declared in an inner scope shall not hide an identifier declared in an outer scope.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-10-3: A typedef name (including qualification, if any) shall be a unique identifier.",
            "message": "Violation of MISRA C++:2008 Rule 2-10-3: A typedef name (including qualification, if any) shall be a unique identifier.",
            "translation": "Violation of MISRA C++:2008 Rule 2-10-3: A typedef name (including qualification, if any) shall be a unique identifier.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-10-4: A class, union or enum name (including qualification, if any) shall be a unique identifier.",
            "message": "Violation of MISRA C++:2008 Rule 2-10-4: A class, union or enum name (including qualification, if any) shall be a unique identifier.",
            "translation": "Violation of MISRA C++:2008 Rule 2-10-4: A class, union or enum name (including qualification, if any) shall be a unique identifier.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-10-5: The identifier name of a non-member object or function with static storage duration should not be reused.",
            "message": "Violation of MISRA C++:2008 Rule 2-10-5: The identifier name of a non-member object or function with static storage duration should not be reused.",
            "translation": "Violation of MISRA C++:2008 Rule 2-10-5: The identifier name of a non-member object or function with static storage duration should not be reused.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-10-6: If an identifier refers to a type, it shall not also refer to an object or a function in the same scope.",
            "message": "Violation of MISRA C++:2008 Rule 2-10-6: If an identifier refers to a type, it shall not also refer to an object or a function in the same scope.",
            "translation": "Violation of MISRA C++:2008 Rule 2-10-6: If an identifier refers to a type, it shall not also refer to an object or a function in the same scope.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-13-1: Only those escape sequences that are defined in ISO/IEC 14882:2003 shall be used.",
            "message": "Violation of MISRA C++:2008 Rule 2-13-1: Only those escape sequences that are defined in ISO/IEC 14882:2003 shall be used.",
            "translation": "Violation of MISRA C++:2008 Rule 2-13-1: Only those escape sequences that are defined in ISO/IEC 14882:2003 shall be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-13-2: Octal constants (other than zero) and octal escape sequences (other than \"\\0\") shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 2-13-2: Octal constants (other than zero) and octal escape sequences (other than \"\\0\") shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 2-13-2: Octal constants (other than zero) and octal escape sequences (other than \"\\0\") shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-13-3: A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type.",
            "message": "Violation of MISRA C++:2008 Rule 2-13-3: A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type.",
            "translation": "Violation of MISRA C++:2008 Rule 2-13-3: A \"U\" suffix shall be applied to all octal or hexadecimal integer literals of unsigned type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-13-4: Literal suffixes shall be upper case.",
            "message": "Violation of MISRA C++:2008 Rule 2-13-4: Literal suffixes shall be upper case.",
            "translation": "Violation of MISRA C++:2008 Rule 2-13-4: Literal suffixes shall be upper case.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 2-13-5: Narrow and wide string literals shall not be concatenated.",
            "message": "Violation of MISRA C++:2008 Rule 2-13-5: Narrow and wide string literals shall not be concatenated.",
            "translation": "Violation of MISRA C++:2008 Rule 2-13-5: Narrow and wide string literals shall not be concatenated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 3-1-1: It shall be possible to include any header file in multiple translation units without violaing the One Definition Rule.",
            "message": "Violation of MISRA C++:2008 Rule 3-1-1: It shall be possible to include any header file in multiple translation units without violaing the One Definition Rule.",
            "translation": "Violation of MISRA C++:2008 Rule 3-1-1: It shall be possible to include any header file in multiple translation units without violaing the One Definition Rule.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 3-1-2: Functions shall not be declared at block scope.",
            "message": "Violation of MISRA C++:2008 Rule 3-1-2: Functions shall not be declared at block scope.",
            "translation": "Violation of MISRA C++:2008 Rule 3-1-2: Functions shall not be declared at block scope.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 3-1-3: When an array is declared, its size shall either be stated explicitly or defined implicitly by initialization.",
            "message": "Violation of MISRA C++:2008 Rule 3-1-3: When an array is declared, its size shall either be stated explicitly or defined implicitly by initialization.",
            "translation": "Violation of MISRA C++:2008 Rule 3-1-3: When an array is declared, its size shall either be stated explicitly or defined implicitly by initialization.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 3-2-1: All declarations of an object or function shall have compatible types.",
            "message": "Violation of MISRA C++:2008 Rule 3-2-1: All declarations of an object or function shall have compatible types.",
            "translation": "Violation of MISRA C++:2008 Rule 3-2-1: All declarations of an object or function shall have compatible types.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 3-2-2: The One Definition Rule shall not be violated.",
            "message": "Violation of MISRA C++:2008 Rule 3-2-2: The One Definition Rule shall not be violated.",
            "translation": "Violation of MISRA C++:2008 Rule 3-2-2: The One Definition Rule shall not be violated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 3-2-3: A type, object or function that is used in multiple translation units shall be declared in one and only one file.",
            "message": "Violation of MISRA C++:2008 Rule 3-2-3: A type, object or function that is used in multiple translation units shall be declared in one and only one file.",
            "translation": "Violation of MISRA C++:2008 Rule 3-2-3: A type, object or function that is used in multiple translation units shall be declared in one and only one file.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 3-2-4: An identifier with external linkage shall have exactly one definition.",
            "message": "Violation of MISRA C++:2008 Rule 3-2-4: An identifier with external linkage shall have exactly one definition.",
            "translation": "Violation of MISRA C++:2008 Rule 3-2-4: An identifier with external linkage shall have exactly one definition.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 3-3-1: Objects or functions with external linkage shall be declared in a header file.",
            "message": "Violation of MISRA C++:2008 Rule 3-3-1: Objects or functions with external linkage shall be declared in a header file.",
            "translation": "Violation of MISRA C++:2008 Rule 3-3-1: Objects or functions with external linkage shall be declared in a header file.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 3-3-2: If a function has internal linkage then all re-declarations shall include the static storage class specifier.",
            "message": "Violation of MISRA C++:2008 Rule 3-3-2: If a function has internal linkage then all re-declarations shall include the static storage class specifier.",
            "translation": "Violation of MISRA C++:2008 Rule 3-3-2: If a function has internal linkage then all re-declarations shall include the static storage class specifier.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 3-4-1: An identfier declared to be an object or type shall be defined in a block that minimizes its visibility.",
            "message": "Violation of MISRA C++:2008 Rule 3-4-1: An identfier declared to be an object or type shall be defined in a block that minimizes its visibility.",
            "translation": "Violation of MISRA C++:2008 Rule 3-4-1: An identfier declared to be an object or type shall be defined in a block that minimizes its visibility.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 3-9-1: The types used for an object, a function return type, or a function parameter shalll be token-for-token identical in all declarations and re-declarations.",
            "message": "Violation of MISRA C++:2008 Rule 3-9-1: The types used for an object, a function return type, or a function parameter shalll be token-for-token identical in all declarations and re-declarations.",
            "translation": "Violation of MISRA C++:2008 Rule 3-9-1: The types used for an object, a function return type, or a function parameter shalll be token-for-token identical in all declarations and re-declarations.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 3-9-2: typedefs that indicate size and signedness should be used in place of the basic numerical types.",
            "message": "Violation of MISRA C++:2008 Rule 3-9-2: typedefs that indicate size and signedness should be used in place of the basic numerical types.",
            "translation": "Violation of MISRA C++:2008 Rule 3-9-2: typedefs that indicate size and signedness should be used in place of the basic numerical types.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 3-9-3: The underlying bit representations of floating-point values shall not be used .",
            "message": "Violation of MISRA C++:2008 Rule 3-9-3: The underlying bit representations of floating-point values shall not be used .",
            "translation": "Violation of MISRA C++:2008 Rule 3-9-3: The underlying bit representations of floating-point values shall not be used .",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 4-5-1: Expressions with type bool shall not be used as operands to built-in operators other than the assignment operator =, the logical operators \u0026\u0026, ||, !, the equality operators == and !=, the unary \u0026 operator, and the conditional operator.",
            "message": "Violation of MISRA C++:2008 Rule 4-5-1: Expressions with type bool shall not be used as operands to built-in operators other than the assignment operator =, the logical operators \u0026\u0026, ||, !, the equality operators == and !=, the unary \u0026 operator, and the conditional operator.",
            "translation": "Violation of MISRA C++:2008 Rule 4-5-1: Expressions with type bool shall not be used as operands to built-in operators other than the assignment operator =, the logical operators \u0026\u0026, ||, !, the equality operators == and !=, the unary \u0026 operator, and the conditional operator.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 4-5-2: Expressions with type enum shall not be used as operands to built-in operators other than the subscript operator [ ], the assignment operator =, the equality operators == and !=, the unary \u0026 operator, and the relational operators \u003c, \u003c=, \u003e, \u003e=.",
            "message": "Violation of MISRA C++:2008 Rule 4-5-2: Expressions with type enum shall not be used as operands to built-in operators other than the subscript operator [ ], the assignment operator =, the equality operators == and !=, the unary \u0026 operator, and the relational operators \u003c, \u003c=, \u003e, \u003e=.",
            "translation": "Violation of MISRA C++:2008 Rule 4-5-2: Expressions with type enum shall not be used as operands to built-in operators other than the subscript operator [ ], the assignment operator =, the equality operators == and !=, the unary \u0026 operator, and the relational operators \u003c, \u003c=, \u003e, \u003e=.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 4-5-3: Expressions with type (plain) char and wchar_t shall not be used as operands to built-in operators other than the assignment operator =, the equality operators == and !=, and the unary \u0026 operator.",
            "message": "Violation of MISRA C++:2008 Rule 4-5-3: Expressions with type (plain) char and wchar_t shall not be used as operands to built-in operators other than the assignment operator =, the equality operators == and !=, and the unary \u0026 operator.",
            "translation": "Violation of MISRA C++:2008 Rule 4-5-3: Expressions with type (plain) char and wchar_t shall not be used as operands to built-in operators other than the assignment operator =, the equality operators == and !=, and the unary \u0026 operator.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 4-10-1: NULL shall not be used as an integer value.",
            "message": "Violation of MISRA C++:2008 Rule 4-10-1: NULL shall not be used as an integer value.",
            "translation": "Violation of MISRA C++:2008 Rule 4-10-1: NULL shall not be used as an integer value.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 4-10-2: Literal zero (0) shall not be used as the null-pointer-constant",
            "message": "Violation of MISRA C++:2008 Rule 4-10-2: Literal zero (0) shall not be used as the null-pointer-constant",
            "translation": "Violation of MISRA C++:2008 Rule 4-10-2: Literal zero (0) shall not be used as the null-pointer-constant",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-1: The value of an expression shall be the same under any order of evaluation that the standard permits.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-1: The value of an expression shall be the same under any order of evaluation that the standard permits.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-1: The value of an expression shall be the same under any order of evaluation that the standard permits.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-2: Limited dependence should be placed on C++ operator precedence rules in expressions.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-2: Limited dependence should be placed on C++ operator precedence rules in expressions.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-2: Limited dependence should be placed on C++ operator precedence rules in expressions.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-3: A cvalue expression shall not be implicitly converted to a different underlying type.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-3: A cvalue expression shall not be implicitly converted to a different underlying type.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-3: A cvalue expression shall not be implicitly converted to a different underlying type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-4: An implicit integral conversion shall not change the signedness of the underlying type.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-4: An implicit integral conversion shall not change the signedness of the underlying type.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-4: An implicit integral conversion shall not change the signedness of the underlying type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-5: There shall be no implicit floating-integral conversions.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-5: There shall be no implicit floating-integral conversions.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-5: There shall be no implicit floating-integral conversions.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-6: An implicit integral or floating-point conversion shall not reduce the size of the underlying type.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-6: An implicit integral or floating-point conversion shall not reduce the size of the underlying type.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-6: An implicit integral or floating-point conversion shall not reduce the size of the underlying type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-7: There shall be no explicit floating-integral conversions of a cvalue expression.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-7: There shall be no explicit floating-integral conversions of a cvalue expression.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-7: There shall be no explicit floating-integral conversions of a cvalue expression.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-8: An explicit integral or floating-point conversion shall not increase the size of the underlying type of a cvalue expression.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-8: An explicit integral or floating-point conversion shall not increase the size of the underlying type of a cvalue expression.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-8: An explicit integral or floating-point conversion shall not increase the size of the underlying type of a cvalue expression.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-9: An explicit integral conversion shall not change the signedness of the underlying type of a cvalue expression.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-9: An explicit integral conversion shall not change the signedness of the underlying type of a cvalue expression.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-9: An explicit integral conversion shall not change the signedness of the underlying type of a cvalue expression.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-10: If the bitwise operators ~ and \u003c\u003c are applied to an operand with an underlying type of unsigned char or unsigned short, the result shall be immediately cast to the underlying type of the operand.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-10: If the bitwise operators ~ and \u003c\u003c are applied to an operand with an underlying type of unsigned char or unsigned short, the result shall be immediately cast to the underlying type of the operand.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-10: If the bitwise operators ~ and \u003c\u003c are applied to an operand with an underlying type of unsigned char or unsigned short, the result shall be immediately cast to the underlying type of the operand.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-11: The plain char type shall only be used for the storage and use of character values.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-11: The plain char type shall only be used for the storage and use of character values.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-11: The plain char type shall only be used for the storage and use of character values.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-12: signed char and unsigned char type shall only be used for the storage and use of numeric values.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-12: signed char and unsigned char type shall only be used for the storage and use of numeric values.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-12: signed char and unsigned char type shall only be used for the storage and use of numeric values.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-13: The condition of an if-statement and the condition of an iteration-statement shall have type bool.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-13: The condition of an if-statement and the condition of an iteration-statement shall have type bool.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-13: The condition of an if-statement and the condition of an iteration-statement shall have type bool.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-14: The first operand of a conditional-operator shall have type bool.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-14: The first operand of a conditional-operator shall have type bool.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-14: The first operand of a conditional-operator shall have type bool.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-15: Array indexing shall be the only form of pointer arithmetic.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-15: Array indexing shall be the only form of pointer arithmetic.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-15: Array indexing shall be the only form of pointer arithmetic.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-16: A pointer operand and any pointer resulting from pointer arithmetic using that operand shall both address elements of the same array.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-16: A pointer operand and any pointer resulting from pointer arithmetic using that operand shall both address elements of the same array.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-16: A pointer operand and any pointer resulting from pointer arithmetic using that operand shall both address elements of the same array.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-17: Subtraction between pointers shall only be applied to pointers that address elements of the same array.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-17: Subtraction between pointers shall only be applied to pointers that address elements of the same array.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-17: Subtraction between pointers shall only be applied to pointers that address elements of the same array.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-18: \u003e, \u003e=, \u003c, \u003c= shall not be applied to objects of pointer type, except where they point to the same array.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-18: \u003e, \u003e=, \u003c, \u003c= shall not be applied to objects of pointer type, except where they point to the same array.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-18: \u003e, \u003e=, \u003c, \u003c= shall not be applied to objects of pointer type, except where they point to the same array.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-19: The declaration of objects shall contain no more than two levels of pointer indirection.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-19: The declaration of objects shall contain no more than two levels of pointer indirection.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-19: The declaration of objects shall contain no more than two levels of pointer indirection.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-20: Non-constant operands to a binary bitwise operator shall have the same underlying type.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-20: Non-constant operands to a binary bitwise operator shall have the same underlying type.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-20: Non-constant operands to a binary bitwise operator shall have the same underlying type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-0-21: Bitwise operators shall only be applied to operands of unsigned underlying type.",
            "message": "Violation of MISRA C++:2008 Rule 5-0-21: Bitwise operators shall only be applied to operands of unsigned underlying type.",
            "translation": "Violation of MISRA C++:2008 Rule 5-0-21: Bitwise operators shall only be applied to operands of unsigned underlying type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-2-1: Each operand of a logical \u0026\u0026 or | | shall be a postfix-expression.",
            "message": "Violation of MISRA C++:2008 Rule 5-2-1: Each operand of a logical \u0026\u0026 or | | shall be a postfix-expression.",
            "translation": "Violation of MISRA C++:2008 Rule 5-2-1: Each operand of a logical \u0026\u0026 or | | shall be a postfix-expression.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-2-2: A pointer to a virtual base class shall only be cast to a pointer to a derived class by means of dynamic_cast.",
            "message": "Violation of MISRA C++:2008 Rule 5-2-2: A pointer to a virtual base class shall only be cast to a pointer to a derived class by means of dynamic_cast.",
            "translation": "Violation of MISRA C++:2008 Rule 5-2-2: A pointer to a virtual base class shall only be cast to a pointer to a derived class by means of dynamic_cast.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-2-3: Casts from a base class to a derived class should not be performed on polymorphic types.",
            "message": "Violation of MISRA C++:2008 Rule 5-2-3: Casts from a base class to a derived class should not be performed on polymorphic types.",
            "translation": "Violation of MISRA C++:2008 Rule 5-2-3: Casts from a base class to a derived class should not be performed on polymorphic types.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-2-4: C-style casts (other than void casts) and functional notation casts (other than explicit constructor call) shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 5-2-4: C-style casts (other than void casts) and functional notation casts (other than explicit constructor call) shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 5-2-4: C-style casts (other than void casts) and functional notation casts (other than explicit constructor call) shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-2-5: A cast shall not remove any const or volatile qualification from the type of a pointer or reference.",
            "message": "Violation of MISRA C++:2008 Rule 5-2-5: A cast shall not remove any const or volatile qualification from the type of a pointer or reference.",
            "translation": "Violation of MISRA C++:2008 Rule 5-2-5: A cast shall not remove any const or volatile qualification from the type of a pointer or reference.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-2-6: A cast shall not convert a pointer to a function to any other pointer type, including a pointer to function type.",
            "message": "Violation of MISRA C++:2008 Rule 5-2-6: A cast shall not convert a pointer to a function to any other pointer type, including a pointer to function type.",
            "translation": "Violation of MISRA C++:2008 Rule 5-2-6: A cast shall not convert a pointer to a function to any other pointer type, including a pointer to function type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-2-7: An object with pointer type shall not be converted to an unrelated pointer type, either directly or indirectly.",
            "message": "Violation of MISRA C++:2008 Rule 5-2-7: An object with pointer type shall not be converted to an unrelated pointer type, either directly or indirectly.",
            "translation": "Violation of MISRA C++:2008 Rule 5-2-7: An object with pointer type shall not be converted to an unrelated pointer type, either directly or indirectly.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-2-8: An object with integer type or pointer to void type shall not be converted to an object with poiner type.",
            "message": "Violation of MISRA C++:2008 Rule 5-2-8: An object with integer type or pointer to void type shall not be converted to an object with poiner type.",
            "translation": "Violation of MISRA C++:2008 Rule 5-2-8: An object with integer type or pointer to void type shall not be converted to an object with poiner type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-2-9: A cast should not convert a pointer type to an integral type.",
            "message": "Violation of MISRA C++:2008 Rule 5-2-9: A cast should not convert a pointer type to an integral type.",
            "translation": "Violation of MISRA C++:2008 Rule 5-2-9: A cast should not convert a pointer type to an integral type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-2-10: The increment (++) and decrement (--) operators should not be mixed with other operators in an exression.",
            "message": "Violation of MISRA C++:2008 Rule 5-2-10: The increment (++) and decrement (--) operators should not be mixed with other operators in an exression.",
            "translation": "Violation of MISRA C++:2008 Rule 5-2-10: The increment (++) and decrement (--) operators should not be mixed with other operators in an exression.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-2-11: The comma operator, \u0026\u0026 operator and the || operator shall not be overloaded.",
            "message": "Violation of MISRA C++:2008 Rule 5-2-11: The comma operator, \u0026\u0026 operator and the || operator shall not be overloaded.",
            "translation": "Violation of MISRA C++:2008 Rule 5-2-11: The comma operator, \u0026\u0026 operator and the || operator shall not be overloaded.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-2-12: An identifier with array type passed as a function argument shall not decay to a pointer.",
            "message": "Violation of MISRA C++:2008 Rule 5-2-12: An identifier with array type passed as a function argument shall not decay to a pointer.",
            "translation": "Violation of MISRA C++:2008 Rule 5-2-12: An identifier with array type passed as a function argument shall not decay to a pointer.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-3-1: Each operand of the ! operator, the logical \u0026\u0026 or the logical operators shall have type bool.",
            "message": "Violation of MISRA C++:2008 Rule 5-3-1: Each operand of the ! operator, the logical \u0026\u0026 or the logical operators shall have type bool.",
            "translation": "Violation of MISRA C++:2008 Rule 5-3-1: Each operand of the ! operator, the logical \u0026\u0026 or the logical operators shall have type bool.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-3-2: The unary minus operator shall not be applied to an expression whose underlying type is unsigned.",
            "message": "Violation of MISRA C++:2008 Rule 5-3-2: The unary minus operator shall not be applied to an expression whose underlying type is unsigned.",
            "translation": "Violation of MISRA C++:2008 Rule 5-3-2: The unary minus operator shall not be applied to an expression whose underlying type is unsigned.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-3-3: The unary \u0026 operator shall not be overloaded.",
            "message": "Violation of MISRA C++:2008 Rule 5-3-3: The unary \u0026 operator shall not be overloaded.",
            "translation": "Violation of MISRA C++:2008 Rule 5-3-3: The unary \u0026 operator shall not be overloaded.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-3-4: Evaluation of the operand to the sizeof operator shall not contain side effects.",
            "message": "Violation of MISRA C++:2008 Rule 5-3-4: Evaluation of the operand to the sizeof operator shall not contain side effects.",
            "translation": "Violation of MISRA C++:2008 Rule 5-3-4: Evaluation of the operand to the sizeof operator shall not contain side effects.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-8-1: The right hand operand of a shift operator shall lie between zero and one less than the width in bits of the underlying type of the left hand operand.",
            "message": "Violation of MISRA C++:2008 Rule 5-8-1: The right hand operand of a shift operator shall lie between zero and one less than the width in bits of the underlying type of the left hand operand.",
            "translation": "Violation of MISRA C++:2008 Rule 5-8-1: The right hand operand of a shift operator shall lie between zero and one less than the width in bits of the underlying type of the left hand operand.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-14-1: The right hand operand of a logical \u0026\u0026 or || operator shall not contain side effects.",
            "message": "Violation of MISRA C++:2008 Rule 5-14-1: The right hand operand of a logical \u0026\u0026 or || operator shall not contain side effects.",
            "translation": "Violation of MISRA C++:2008 Rule 5-14-1: The right hand operand of a logical \u0026\u0026 or || operator shall not contain side effects.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-17-1: The semantic equivalence between a binary operator and its asignment operator form shall be preserved.",
            "message": "Violation of MISRA C++:2008 Rule 5-17-1: The semantic equivalence between a binary operator and its asignment operator form shall be preserved.",
            "translation": "Violation of MISRA C++:2008 Rule 5-17-1: The semantic equivalence between a binary operator and its asignment operator form shall be preserved.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-18-1: The comma operator shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 5-18-1: The comma operator shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 5-18-1: The comma operator shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 5-19-1: Evaluation of constant unsigned integer expressions should not lead to wrap-around.",
            "message": "Violation of MISRA C++:2008 Rule 5-19-1: Evaluation of constant unsigned integer expressions should not lead to wrap-around.",
            "translation": "Violation of MISRA C++:2008 Rule 5-19-1: Evaluation of constant unsigned integer expressions should not lead to wrap-around.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-2-1: Assignment operators shall not be used in sub-expressions.",
            "message": "Violation of MISRA C++:2008 Rule 6-2-1: Assignment operators shall not be used in sub-expressions.",
            "translation": "Violation of MISRA C++:2008 Rule 6-2-1: Assignment operators shall not be used in sub-expressions.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-2-2: Floating-point expressions shall not be directly or indirectly tested for equality or inequality.",
            "message": "Violation of MISRA C++:2008 Rule 6-2-2: Floating-point expressions shall not be directly or indirectly tested for equality or inequality.",
            "translation": "Violation of MISRA C++:2008 Rule 6-2-2: Floating-point expressions shall not be directly or indirectly tested for equality or inequality.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-2-3: Before preprocessing, a null statement shall only occur on a line by itself; it may be followed by a comment, provided that the first character following the null statement is a white-space character.",
            "message": "Violation of MISRA C++:2008 Rule 6-2-3: Before preprocessing, a null statement shall only occur on a line by itself; it may be followed by a comment, provided that the first character following the null statement is a white-space character.",
            "translation": "Violation of MISRA C++:2008 Rule 6-2-3: Before preprocessing, a null statement shall only occur on a line by itself; it may be followed by a comment, provided that the first character following the null statement is a white-space character.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-3-1: The statement forming the body of a switch, while, do ... while or for statement shall be a compound statement.",
            "message": "Violation of MISRA C++:2008 Rule 6-3-1: The statement forming the body of a switch, while, do ... while or for statement shall be a compound statement.",
            "translation": "Violation of MISRA C++:2008 Rule 6-3-1: The statement forming the body of a switch, while, do ... while or for statement shall be a compound statement.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-4-1: An if (condition) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement.",
            "message": "Violation of MISRA C++:2008 Rule 6-4-1: An if (condition) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement.",
            "translation": "Violation of MISRA C++:2008 Rule 6-4-1: An if (condition) construct shall be followed by a compound statement. The else keyword shall be followed by either a compound statement, or another if statement.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-4-2: All if ... else if constructs shall be terminated with an else clause.",
            "message": "Violation of MISRA C++:2008 Rule 6-4-2: All if ... else if constructs shall be terminated with an else clause.",
            "translation": "Violation of MISRA C++:2008 Rule 6-4-2: All if ... else if constructs shall be terminated with an else clause.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-4-3: A switch statement shall be a well-formed switch statement.",
            "message": "Violation of MISRA C++:2008 Rule 6-4-3: A switch statement shall be a well-formed switch statement.",
            "translation": "Violation of MISRA C++:2008 Rule 6-4-3: A switch statement shall be a well-formed switch statement.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-4-4: A switch-label shall only be used when the most closely-enclosing compound statement is the body of a switch statement.",
            "message": "Violation of MISRA C++:2008 Rule 6-4-4: A switch-label shall only be used when the most closely-enclosing compound statement is the body of a switch statement.",
            "translation": "Violation of MISRA C++:2008 Rule 6-4-4: A switch-label shall only be used when the most closely-enclosing compound statement is the body of a switch statement.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-4-5: An unconditional throw or break statement shall terminate every non-empty switch-clause.",
            "message": "Violation of MISRA C++:2008 Rule 6-4-5: An unconditional throw or break statement shall terminate every non-empty switch-clause.",
            "translation": "Violation of MISRA C++:2008 Rule 6-4-5: An unconditional throw or break statement shall terminate every non-empty switch-clause.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-4-6: The final clause of a switch statement shall be the default-clause.",
            "message": "Violation of MISRA C++:2008 Rule 6-4-6: The final clause of a switch statement shall be the default-clause.",
            "translation": "Violation of MISRA C++:2008 Rule 6-4-6: The final clause of a switch statement shall be the default-clause.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-4-7: The condition of a switch statement shall not have bool type.",
            "message": "Violation of MISRA C++:2008 Rule 6-4-7: The condition of a switch statement shall not have bool type.",
            "translation": "Violation of MISRA C++:2008 Rule 6-4-7: The condition of a switch statement shall not have bool type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-4-8: Every switch statement shall have at least one case-clause,",
            "message": "Violation of MISRA C++:2008 Rule 6-4-8: Every switch statement shall have at least one case-clause,",
            "translation": "Violation of MISRA C++:2008 Rule 6-4-8: Every switch statement shall have at least one case-clause,",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-5-1: A for loop shall contain a single loop-counter which shall not have floating type.",
            "message": "Violation of MISRA C++:2008 Rule 6-5-1: A for loop shall contain a single loop-counter which shall not have floating type.",
            "translation": "Violation of MISRA C++:2008 Rule 6-5-1: A for loop shall contain a single loop-counter which shall not have floating type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-5-2: If loop-counter is not modified by -- or ++, then, within condition, the loop-counter shall only be used as an operand to \u003c=, \u003c, \u003e or \u003e=.",
            "message": "Violation of MISRA C++:2008 Rule 6-5-2: If loop-counter is not modified by -- or ++, then, within condition, the loop-counter shall only be used as an operand to \u003c=, \u003c, \u003e or \u003e=.",
            "translation": "Violation of MISRA C++:2008 Rule 6-5-2: If loop-counter is not modified by -- or ++, then, within condition, the loop-counter shall only be used as an operand to \u003c=, \u003c, \u003e or \u003e=.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-5-3: The loop-counter shall not be modified within statement.",
            "message": "Violation of MISRA C++:2008 Rule 6-5-3: The loop-counter shall not be modified within statement.",
            "translation": "Violation of MISRA C++:2008 Rule 6-5-3: The loop-counter shall not be modified within statement.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-5-4: The loop-counter shall be modified by one of: --, ++,-=n, or +=n; where n remains constant for the duration of the loop.",
            "message": "Violation of MISRA C++:2008 Rule 6-5-4: The loop-counter shall be modified by one of: --, ++,-=n, or +=n; where n remains constant for the duration of the loop.",
            "translation": "Violation of MISRA C++:2008 Rule 6-5-4: The loop-counter shall be modified by one of: --, ++,-=n, or +=n; where n remains constant for the duration of the loop.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-5-5: A loop-control-variable other than the loop-counter shall not be modified within condition or expression.",
            "message": "Violation of MISRA C++:2008 Rule 6-5-5: A loop-control-variable other than the loop-counter shall not be modified within condition or expression.",
            "translation": "Violation of MISRA C++:2008 Rule 6-5-5: A loop-control-variable other than the loop-counter shall not be modified within condition or expression.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-5-6: A loop-control-variable other than the loop-counter which is modified in statement shall have type bool.",
            "message": "Violation of MISRA C++:2008 Rule 6-5-6: A loop-control-variable other than the loop-counter which is modified in statement shall have type bool.",
            "translation": "Violation of MISRA C++:2008 Rule 6-5-6: A loop-control-variable other than the loop-counter which is modified in statement shall have type bool.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-6-1: Any label referenced by a goto statement shall be declared in the same block, or in a block enclosing the goto statement.",
            "message": "Violation of MISRA C++:2008 Rule 6-6-1: Any label referenced by a goto statement shall be declared in the same block, or in a block enclosing the goto statement.",
            "translation": "Violation of MISRA C++:2008 Rule 6-6-1: Any label referenced by a goto statement shall be declared in the same block, or in a block enclosing the goto statement.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-6-2: The goto statement shall jump to a label declared later in the same function body.",
            "message": "Violation of MISRA C++:2008 Rule 6-6-2: The goto statement shall jump to a label declared later in the same function body.",
            "translation": "Violation of MISRA C++:2008 Rule 6-6-2: The goto statement shall jump to a label declared later in the same function body.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-6-3: The continue statement shall only be used within a well-formed for loop.",
            "message": "Violation of MISRA C++:2008 Rule 6-6-3: The continue statement shall only be used within a well-formed for loop.",
            "translation": "Violation of MISRA C++:2008 Rule 6-6-3: The continue statement shall only be used within a well-formed for loop.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-6-4: For any iteration statement there shall be no more than one break or goto statement used for loop termination.",
            "message": "Violation of MISRA C++:2008 Rule 6-6-4: For any iteration statement there shall be no more than one break or goto statement used for loop termination.",
            "translation": "Violation of MISRA C++:2008 Rule 6-6-4: For any iteration statement there shall be no more than one break or goto statement used for loop termination.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 6-6-5: A function shall have a single point of exit at the end of the function.",
            "message": "Violation of MISRA C++:2008 Rule 6-6-5: A function shall have a single point of exit at the end of the function.",
            "translation": "Violation of MISRA C++:2008 Rule 6-6-5: A function shall have a single point of exit at the end of the function.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-1-1: A variable which is not modified shall be const qualified.",
            "message": "Violation of MISRA C++:2008 Rule 7-1-1: A variable which is not modified shall be const qualified.",
            "translation": "Violation of MISRA C++:2008 Rule 7-1-1: A variable which is not modified shall be const qualified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-1-2: A pointer or reference parameter in a function shall be declared as pointer to const or reference to const if the corresponding object is not modified.",
            "message": "Violation of MISRA C++:2008 Rule 7-1-2: A pointer or reference parameter in a function shall be declared as pointer to const or reference to const if the corresponding object is not modified.",
            "translation": "Violation of MISRA C++:2008 Rule 7-1-2: A pointer or reference parameter in a function shall be declared as pointer to const or reference to const if the corresponding object is not modified.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-2-1: An expression with enum underlying type shall only have values corresponding to the enumerators of the enumeration.",
            "message": "Violation of MISRA C++:2008 Rule 7-2-1: An expression with enum underlying type shall only have values corresponding to the enumerators of the enumeration.",
            "translation": "Violation of MISRA C++:2008 Rule 7-2-1: An expression with enum underlying type shall only have values corresponding to the enumerators of the enumeration.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-3-1: The global namespace shall only contain main, namespace declarations and extern \"C\" declarations.",
            "message": "Violation of MISRA C++:2008 Rule 7-3-1: The global namespace shall only contain main, namespace declarations and extern \"C\" declarations.",
            "translation": "Violation of MISRA C++:2008 Rule 7-3-1: The global namespace shall only contain main, namespace declarations and extern \"C\" declarations.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-3-2: The identifier main shall not be used for a function other than the global function main.",
            "message": "Violation of MISRA C++:2008 Rule 7-3-2: The identifier main shall not be used for a function other than the global function main.",
            "translation": "Violation of MISRA C++:2008 Rule 7-3-2: The identifier main shall not be used for a function other than the global function main.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-3-3: There shall be no unnamed namespaces in header files.",
            "message": "Violation of MISRA C++:2008 Rule 7-3-3: There shall be no unnamed namespaces in header files.",
            "translation": "Violation of MISRA C++:2008 Rule 7-3-3: There shall be no unnamed namespaces in header files.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-3-4: using-directives shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 7-3-4: using-directives shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 7-3-4: using-directives shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-3-5: Multiple declarations for an identifier in the same namespace shall not straddle a using-declaration for that idenifier.",
            "message": "Violation of MISRA C++:2008 Rule 7-3-5: Multiple declarations for an identifier in the same namespace shall not straddle a using-declaration for that idenifier.",
            "translation": "Violation of MISRA C++:2008 Rule 7-3-5: Multiple declarations for an identifier in the same namespace shall not straddle a using-declaration for that idenifier.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-3-6: using-directives and using-declarations (excluding class scope or function scope using-declarations) shall not be used in header files.",
            "message": "Violation of MISRA C++:2008 Rule 7-3-6: using-directives and using-declarations (excluding class scope or function scope using-declarations) shall not be used in header files.",
            "translation": "Violation of MISRA C++:2008 Rule 7-3-6: using-directives and using-declarations (excluding class scope or function scope using-declarations) shall not be used in header files.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-4-1: All usage of assembler shall be documented.",
            "message": "Violation of MISRA C++:2008 Rule 7-4-1: All usage of assembler shall be documented.",
            "translation": "Violation of MISRA C++:2008 Rule 7-4-1: All usage of assembler shall be documented.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-4-2: Assembler instructions shall only be introduced using the asm declaration.",
            "message": "Violation of MISRA C++:2008 Rule 7-4-2: Assembler instructions shall only be introduced using the asm declaration.",
            "translation": "Violation of MISRA C++:2008 Rule 7-4-2: Assembler instructions shall only be introduced using the asm declaration.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-4-3: Assembly language shall be encapsulated and isolated.",
            "message": "Violation of MISRA C++:2008 Rule 7-4-3: Assembly language shall be encapsulated and isolated.",
            "translation": "Violation of MISRA C++:2008 Rule 7-4-3: Assembly language shall be encapsulated and isolated.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-5-1: A function shall not return a reference or a pointer to an automatic variable (including parameters) defined within the function.",
            "message": "Violation of MISRA C++:2008 Rule 7-5-1: A function shall not return a reference or a pointer to an automatic variable (including parameters) defined within the function.",
            "translation": "Violation of MISRA C++:2008 Rule 7-5-1: A function shall not return a reference or a pointer to an automatic variable (including parameters) defined within the function.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-5-2: The address of an object with automatic storage shall not be assigned to another object that may persist after the first object has ceased to exist.",
            "message": "Violation of MISRA C++:2008 Rule 7-5-2: The address of an object with automatic storage shall not be assigned to another object that may persist after the first object has ceased to exist.",
            "translation": "Violation of MISRA C++:2008 Rule 7-5-2: The address of an object with automatic storage shall not be assigned to another object that may persist after the first object has ceased to exist.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-5-3: A function shall not return a reference or a pointer to a parameter that is passed by reference or const reference.",
            "message": "Violation of MISRA C++:2008 Rule 7-5-3: A function shall not return a reference or a pointer to a parameter that is passed by reference or const reference.",
            "translation": "Violation of MISRA C++:2008 Rule 7-5-3: A function shall not return a reference or a pointer to a parameter that is passed by reference or const reference.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 7-5-4: Functions should not call themselves, either directly or indirectly.",
            "message": "Violation of MISRA C++:2008 Rule 7-5-4: Functions should not call themselves, either directly or indirectly.",
            "translation": "Violation of MISRA C++:2008 Rule 7-5-4: Functions should not call themselves, either directly or indirectly.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 8-0-1: An init-declarator-list or a member-declarator-list shall consist of a single init-declarator or member-declarator respectively.",
            "message": "Violation of MISRA C++:2008 Rule 8-0-1: An init-declarator-list or a member-declarator-list shall consist of a single init-declarator or member-declarator respectively.",
            "translation": "Violation of MISRA C++:2008 Rule 8-0-1: An init-declarator-list or a member-declarator-list shall consist of a single init-declarator or member-declarator respectively.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 8-3-1: Parameters in an overriding virtual function shall either use the same default arguments as the function they ovrride, or else shall not specify any default arguments.",
            "message": "Violation of MISRA C++:2008 Rule 8-3-1: Parameters in an overriding virtual function shall either use the same default arguments as the function they ovrride, or else shall not specify any default arguments.",
            "translation": "Violation of MISRA C++:2008 Rule 8-3-1: Parameters in an overriding virtual function shall either use the same default arguments as the function they ovrride, or else shall not specify any default arguments.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 8-4-1: Functions shall not be defined using the ellipsis notation.",
            "message": "Violation of MISRA C++:2008 Rule 8-4-1: Functions shall not be defined using the ellipsis notation.",
            "translation": "Violation of MISRA C++:2008 Rule 8-4-1: Functions shall not be defined using the ellipsis notation.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 8-4-2: The identifiers used for the parameters in a re-declaration of a function shall be identical to those in the declaration.",
            "message": "Violation of MISRA C++:2008 Rule 8-4-2: The identifiers used for the parameters in a re-declaration of a function shall be identical to those in the declaration.",
            "translation": "Violation of MISRA C++:2008 Rule 8-4-2: The identifiers used for the parameters in a re-declaration of a function shall be identical to those in the declaration.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 8-4-3: All exit paths from a function with non-void return type shall have an explicit return statement with an expression.",
            "message": "Violation of MISRA C++:2008 Rule 8-4-3: All exit paths from a function with non-void return type shall have an explicit return statement with an expression.",
            "translation": "Violation of MISRA C++:2008 Rule 8-4-3: All exit paths from a function with non-void return type shall have an explicit return statement with an expression.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 8-4-4: A function identifier shall either be used to call the function or it shall be preceded by \u0026.",
            "message": "Violation of MISRA C++:2008 Rule 8-4-4: A function identifier shall either be used to call the function or it shall be preceded by \u0026.",
            "translation": "Violation of MISRA C++:2008 Rule 8-4-4: A function identifier shall either be used to call the function or it shall be preceded by \u0026.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 8-5-1: All variables shall have a defined value before they are used.",
            "message": "Violation of MISRA C++:2008 Rule 8-5-1: All variables shall have a defined value before they are used.",
            "translation": "Violation of MISRA C++:2008 Rule 8-5-1: All variables shall have a defined value before they are used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 8-5-2: Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures.",
            "message": "Violation of MISRA C++:2008 Rule 8-5-2: Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures.",
            "translation": "Violation of MISRA C++:2008 Rule 8-5-2: Braces shall be used to indicate and match the structure in the non-zero initialization of arrays and structures.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 8-5-3: In an enumerator list, the = construct shall not be used to explicitly initialize members other than the first, unless all items are explicitly initialized.",
            "message": "Violation of MISRA C++:2008 Rule 8-5-3: In an enumerator list, the = construct shall not be used to explicitly initialize members other than the first, unless all items are explicitly initialized.",
            "translation": "Violation of MISRA C++:2008 Rule 8-5-3: In an enumerator list, the = construct shall not be used to explicitly initialize members other than the first, unless all items are explicitly initialized.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 9-3-1: const member functions shall not return non-const pointers or references to class-data.",
            "message": "Violation of MISRA C++:2008 Rule 9-3-1: const member functions shall not return non-const pointers or references to class-data.",
            "translation": "Violation of MISRA C++:2008 Rule 9-3-1: const member functions shall not return non-const pointers or references to class-data.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 9-3-2: Member functions shall not return non-const handles to class-data.",
            "message": "Violation of MISRA C++:2008 Rule 9-3-2: Member functions shall not return non-const handles to class-data.",
            "translation": "Violation of MISRA C++:2008 Rule 9-3-2: Member functions shall not return non-const handles to class-data.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 9-3-3: If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const.",
            "message": "Violation of MISRA C++:2008 Rule 9-3-3: If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const.",
            "translation": "Violation of MISRA C++:2008 Rule 9-3-3: If a member function can be made static then it shall be made static, otherwise if it can be made const then it shall be made const.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 9-5-1: Unions shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 9-5-1: Unions shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 9-5-1: Unions shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 9-6-1: When the absolute positioning of bits representing a bit-field is required, then the behaviour and packing of bit-fields shall be documented.",
            "message": "Violation of MISRA C++:2008 Rule 9-6-1: When the absolute positioning of bits representing a bit-field is required, then the behaviour and packing of bit-fields shall be documented.",
            "translation": "Violation of MISRA C++:2008 Rule 9-6-1: When the absolute positioning of bits representing a bit-field is required, then the behaviour and packing of bit-fields shall be documented.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 9-6-2: Bit-fields shall be either bool type or an explicitly unsigned or signed integral type.",
            "message": "Violation of MISRA C++:2008 Rule 9-6-2: Bit-fields shall be either bool type or an explicitly unsigned or signed integral type.",
            "translation": "Violation of MISRA C++:2008 Rule 9-6-2: Bit-fields shall be either bool type or an explicitly unsigned or signed integral type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 9-6-3: Bit-fields shall not have enum type.",
            "message": "Violation of MISRA C++:2008 Rule 9-6-3: Bit-fields shall not have enum type.",
            "translation": "Violation of MISRA C++:2008 Rule 9-6-3: Bit-fields shall not have enum type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 9-6-4: Named bit-fields with signed integer type shall have a length of more than one bit.",
            "message": "Violation of MISRA C++:2008 Rule 9-6-4: Named bit-fields with signed integer type shall have a length of more than one bit.",
            "translation": "Violation of MISRA C++:2008 Rule 9-6-4: Named bit-fields with signed integer type shall have a length of more than one bit.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 10-1-1: Classes should not be derived from virtual bases.",
            "message": "Violation of MISRA C++:2008 Rule 10-1-1: Classes should not be derived from virtual bases.",
            "translation": "Violation of MISRA C++:2008 Rule 10-1-1: Classes should not be derived from virtual bases.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 10-1-2: A base class shall only be declared virtual if it is used in a diamond hierarchy.",
            "message": "Violation of MISRA C++:2008 Rule 10-1-2: A base class shall only be declared virtual if it is used in a diamond hierarchy.",
            "translation": "Violation of MISRA C++:2008 Rule 10-1-2: A base class shall only be declared virtual if it is used in a diamond hierarchy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 10-1-3: An accessible base class shall not be both virtual and non-virtual in the same hierarchy.",
            "message": "Violation of MISRA C++:2008 Rule 10-1-3: An accessible base class shall not be both virtual and non-virtual in the same hierarchy.",
            "translation": "Violation of MISRA C++:2008 Rule 10-1-3: An accessible base class shall not be both virtual and non-virtual in the same hierarchy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 10-2-1: All accessible entity names within a multiple inheritance hierarchy should be unique.",
            "message": "Violation of MISRA C++:2008 Rule 10-2-1: All accessible entity names within a multiple inheritance hierarchy should be unique.",
            "translation": "Violation of MISRA C++:2008 Rule 10-2-1: All accessible entity names within a multiple inheritance hierarchy should be unique.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 10-3-1: There shall be no more than one definition of each virtual function on each path through the inheritance hierarchy.",
            "message": "Violation of MISRA C++:2008 Rule 10-3-1: There shall be no more than one definition of each virtual function on each path through the inheritance hierarchy.",
            "translation": "Violation of MISRA C++:2008 Rule 10-3-1: There shall be no more than one definition of each virtual function on each path through the inheritance hierarchy.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 10-3-2: Each overriding virtual function shall be declared with the virtual keyword.",
            "message": "Violation of MISRA C++:2008 Rule 10-3-2: Each overriding virtual function shall be declared with the virtual keyword.",
            "translation": "Violation of MISRA C++:2008 Rule 10-3-2: Each overriding virtual function shall be declared with the virtual keyword.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 10-3-3: A virtual function shall only be overridden by a pure virtual function if it is itself declared as pure virtual.",
            "message": "Violation of MISRA C++:2008 Rule 10-3-3: A virtual function shall only be overridden by a pure virtual function if it is itself declared as pure virtual.",
            "translation": "Violation of MISRA C++:2008 Rule 10-3-3: A virtual function shall only be overridden by a pure virtual function if it is itself declared as pure virtual.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 11-0-1: Member data in non-POD class types shall be private.",
            "message": "Violation of MISRA C++:2008 Rule 11-0-1: Member data in non-POD class types shall be private.",
            "translation": "Violation of MISRA C++:2008 Rule 11-0-1: Member data in non-POD class types shall be private.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 12-1-1: An object's dynamic type shall not be used from the body of its constructor or destructor.",
            "message": "Violation of MISRA C++:2008 Rule 12-1-1: An object's dynamic type shall not be used from the body of its constructor or destructor.",
            "translation": "Violation of MISRA C++:2008 Rule 12-1-1: An object's dynamic type shall not be used from the body of its constructor or destructor.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 12-1-2: AlI constructors of a class should explicitly call a constructor for all of its immediate base classes and all virtual base classes.",
            "message": "Violation of MISRA C++:2008 Rule 12-1-2: AlI constructors of a class should explicitly call a constructor for all of its immediate base classes and all virtual base classes.",
            "translation": "Violation of MISRA C++:2008 Rule 12-1-2: AlI constructors of a class should explicitly call a constructor for all of its immediate base classes and all virtual base classes.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 12-1-3: All constructors that are callable with a single argument of fundamental type shall be declared explicit.",
            "message": "Violation of MISRA C++:2008 Rule 12-1-3: All constructors that are callable with a single argument of fundamental type shall be declared explicit.",
            "translation": "Violation of MISRA C++:2008 Rule 12-1-3: All constructors that are callable with a single argument of fundamental type shall be declared explicit.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 12-8-1: A copy constructor shall only initialize its base classes and the non-static members of the class of which it is a member.",
            "message": "Violation of MISRA C++:2008 Rule 12-8-1: A copy constructor shall only initialize its base classes and the non-static members of the class of which it is a member.",
            "translation": "Violation of MISRA C++:2008 Rule 12-8-1: A copy constructor shall only initialize its base classes and the non-static members of the class of which it is a member.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 12-8-2: The copy assignment operator shall be declared protected or private in an abstract class.",
            "message": "Violation of MISRA C++:2008 Rule 12-8-2: The copy assignment operator shall be declared protected or private in an abstract class.",
            "translation": "Violation of MISRA C++:2008 Rule 12-8-2: The copy assignment operator shall be declared protected or private in an abstract class.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 14-5-1: A non-member genericfunction shall only be declared in a namespace that is not an associated namespace.",
            "message": "Violation of MISRA C++:2008 Rule 14-5-1: A non-member genericfunction shall only be declared in a namespace that is not an associated namespace.",
            "translation": "Violation of MISRA C++:2008 Rule 14-5-1: A non-member genericfunction shall only be declared in a namespace that is not an associated namespace.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 14-5-2: A copy constructor shall be declared when there is a template constuctor with a single parameter that is a generic parameter.",
            "message": "Violation of MISRA C++:2008 Rule 14-5-2: A copy constructor shall be declared when there is a template constuctor with a single parameter that is a generic parameter.",
            "translation": "Violation of MISRA C++:2008 Rule 14-5-2: A copy constructor shall be declared when there is a template constuctor with a single parameter that is a generic parameter.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 14-5-3: A copy assignment operator shall be declared when there is a template assignment operator with a parameter that is a generic parameter:",
            "message": "Violation of MISRA C++:2008 Rule 14-5-3: A copy assignment operator shall be declared when there is a template assignment operator with a parameter that is a generic parameter:",
            "translation": "Violation of MISRA C++:2008 Rule 14-5-3: A copy assignment operator shall be declared when there is a template assignment operator with a parameter that is a generic parameter:",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 14-6-1: In a class template with a dependent base, any name that may be found in that dependent base shall be referred to using a qualified-id or this-\u003e.",
            "message": "Violation of MISRA C++:2008 Rule 14-6-1: In a class template with a dependent base, any name that may be found in that dependent base shall be referred to using a qualified-id or this-\u003e.",
            "translation": "Violation of MISRA C++:2008 Rule 14-6-1: In a class template with a dependent base, any name that may be found in that dependent base shall be referred to using a qualified-id or this-\u003e.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 14-6-2: The function chosen by overload resolution shall resolve to a function declared previously in the translation unit.",
            "message": "Violation of MISRA C++:2008 Rule 14-6-2: The function chosen by overload resolution shall resolve to a function declared previously in the translation unit.",
            "translation": "Violation of MISRA C++:2008 Rule 14-6-2: The function chosen by overload resolution shall resolve to a function declared previously in the translation unit.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 14-7-1: All class templates, function templates, class template member functions and class template static members shall be instantiated at least once.",
            "message": "Violation of MISRA C++:2008 Rule 14-7-1: All class templates, function templates, class template member functions and class template static members shall be instantiated at least once.",
            "translation": "Violation of MISRA C++:2008 Rule 14-7-1: All class templates, function templates, class template member functions and class template static members shall be instantiated at least once.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 14-7-2: For any given template specialization, an explicit instantiation of the template with the template arguments used in the specializaion shall not render the program ill-formed",
            "message": "Violation of MISRA C++:2008 Rule 14-7-2: For any given template specialization, an explicit instantiation of the template with the template arguments used in the specializaion shall not render the program ill-formed",
            "translation": "Violation of MISRA C++:2008 Rule 14-7-2: For any given template specialization, an explicit instantiation of the template with the template arguments used in the specializaion shall not render the program ill-formed",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 14-7-3: All partial and explicit specializations for a template shall be declared in the same file as the declaration of their primary template.",
            "message": "Violation of MISRA C++:2008 Rule 14-7-3: All partial and explicit specializations for a template shall be declared in the same file as the declaration of their primary template.",
            "translation": "Violation of MISRA C++:2008 Rule 14-7-3: All partial and explicit specializations for a template shall be declared in the same file as the declaration of their primary template.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 14-8-1: Overloaded function templates shall not be explicitly specialized.",
            "message": "Violation of MISRA C++:2008 Rule 14-8-1: Overloaded function templates shall not be explicitly specialized.",
            "translation": "Violation of MISRA C++:2008 Rule 14-8-1: Overloaded function templates shall not be explicitly specialized.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 14-8-2: The viable function set for a function call should either contain no function specializaions, or only contain function specializations.",
            "message": "Violation of MISRA C++:2008 Rule 14-8-2: The viable function set for a function call should either contain no function specializaions, or only contain function specializations.",
            "translation": "Violation of MISRA C++:2008 Rule 14-8-2: The viable function set for a function call should either contain no function specializaions, or only contain function specializations.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-0-1: Exceptions shall only be used for error handling.",
            "message": "Violation of MISRA C++:2008 Rule 15-0-1: Exceptions shall only be used for error handling.",
            "translation": "Violation of MISRA C++:2008 Rule 15-0-1: Exceptions shall only be used for error handling.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-0-2: An exception object should not have pointer type.",
            "message": "Violation of MISRA C++:2008 Rule 15-0-2: An exception object should not have pointer type.",
            "translation": "Violation of MISRA C++:2008 Rule 15-0-2: An exception object should not have pointer type.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-0-3: Control shall not be transferred into a try or catch block using a goto or a switch statement.",
            "message": "Violation of MISRA C++:2008 Rule 15-0-3: Control shall not be transferred into a try or catch block using a goto or a switch statement.",
            "translation": "Violation of MISRA C++:2008 Rule 15-0-3: Control shall not be transferred into a try or catch block using a goto or a switch statement.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-1-1: The assignment-expression of a throw statement shall not itself cause an exception to be thrown.",
            "message": "Violation of MISRA C++:2008 Rule 15-1-1: The assignment-expression of a throw statement shall not itself cause an exception to be thrown.",
            "translation": "Violation of MISRA C++:2008 Rule 15-1-1: The assignment-expression of a throw statement shall not itself cause an exception to be thrown.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-1-2: NULL shall not be thrown explicitly.",
            "message": "Violation of MISRA C++:2008 Rule 15-1-2: NULL shall not be thrown explicitly.",
            "translation": "Violation of MISRA C++:2008 Rule 15-1-2: NULL shall not be thrown explicitly.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-1-3: An empty throw (throw;) shall only be used in the compound-statement of a catch handler.",
            "message": "Violation of MISRA C++:2008 Rule 15-1-3: An empty throw (throw;) shall only be used in the compound-statement of a catch handler.",
            "translation": "Violation of MISRA C++:2008 Rule 15-1-3: An empty throw (throw;) shall only be used in the compound-statement of a catch handler.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-3-1: Exceptions shall be raised only after start-up and before termination of the program.",
            "message": "Violation of MISRA C++:2008 Rule 15-3-1: Exceptions shall be raised only after start-up and before termination of the program.",
            "translation": "Violation of MISRA C++:2008 Rule 15-3-1: Exceptions shall be raised only after start-up and before termination of the program.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-3-2: There should be at least one exception handler to catch all otherwise unhandled exceptions.",
            "message": "Violation of MISRA C++:2008 Rule 15-3-2: There should be at least one exception handler to catch all otherwise unhandled exceptions.",
            "translation": "Violation of MISRA C++:2008 Rule 15-3-2: There should be at least one exception handler to catch all otherwise unhandled exceptions.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-3-3: Handlers of a function-try-block implementation of a class constructor or destructor shall not reference non-static members from this class or its bases.",
            "message": "Violation of MISRA C++:2008 Rule 15-3-3: Handlers of a function-try-block implementation of a class constructor or destructor shall not reference non-static members from this class or its bases.",
            "translation": "Violation of MISRA C++:2008 Rule 15-3-3: Handlers of a function-try-block implementation of a class constructor or destructor shall not reference non-static members from this class or its bases.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-3-4: Each exception explicitly thrown in the code shall have a handler of a compatible type in all calll paths that could lead to that point.",
            "message": "Violation of MISRA C++:2008 Rule 15-3-4: Each exception explicitly thrown in the code shall have a handler of a compatible type in all calll paths that could lead to that point.",
            "translation": "Violation of MISRA C++:2008 Rule 15-3-4: Each exception explicitly thrown in the code shall have a handler of a compatible type in all calll paths that could lead to that point.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-3-5: A class type exception shall always be caught by reference.",
            "message": "Violation of MISRA C++:2008 Rule 15-3-5: A class type exception shall always be caught by reference.",
            "translation": "Violation of MISRA C++:2008 Rule 15-3-5: A class type exception shall always be caught by reference.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-3-6: Where multiple handlers are provided in a single try-catch statement or, fuction-try-block for a derived class and some or all of its bases, the handlers shall be ordered most-derived to base class.",
            "message": "Violation of MISRA C++:2008 Rule 15-3-6: Where multiple handlers are provided in a single try-catch statement or, fuction-try-block for a derived class and some or all of its bases, the handlers shall be ordered most-derived to base class.",
            "translation": "Violation of MISRA C++:2008 Rule 15-3-6: Where multiple handlers are provided in a single try-catch statement or, fuction-try-block for a derived class and some or all of its bases, the handlers shall be ordered most-derived to base class.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-3-7: Where multiple handlers are provided in a single try-catch statement or function-try-block, any elipsis (catch-all) handler shall occur last.",
            "message": "Violation of MISRA C++:2008 Rule 15-3-7: Where multiple handlers are provided in a single try-catch statement or function-try-block, any elipsis (catch-all) handler shall occur last.",
            "translation": "Violation of MISRA C++:2008 Rule 15-3-7: Where multiple handlers are provided in a single try-catch statement or function-try-block, any elipsis (catch-all) handler shall occur last.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-4-1: If a function is declared with an exception-specification, then all declarations of the same function (in other translaion units) shall be declared with the same set of type -ids.",
            "message": "Violation of MISRA C++:2008 Rule 15-4-1: If a function is declared with an exception-specification, then all declarations of the same function (in other translaion units) shall be declared with the same set of type -ids.",
            "translation": "Violation of MISRA C++:2008 Rule 15-4-1: If a function is declared with an exception-specification, then all declarations of the same function (in other translaion units) shall be declared with the same set of type -ids.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-5-1: A class destructor shall not exit with an exception.",
            "message": "Violation of MISRA C++:2008 Rule 15-5-1: A class destructor shall not exit with an exception.",
            "translation": "Violation of MISRA C++:2008 Rule 15-5-1: A class destructor shall not exit with an exception.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-5-2: Where a function's declaration includes an exception-specification, the function shall only be capable of throwing exceptions of the indicated type(s).",
            "message": "Violation of MISRA C++:2008 Rule 15-5-2: Where a function's declaration includes an exception-specification, the function shall only be capable of throwing exceptions of the indicated type(s).",
            "translation": "Violation of MISRA C++:2008 Rule 15-5-2: Where a function's declaration includes an exception-specification, the function shall only be capable of throwing exceptions of the indicated type(s).",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 15-5-3: The terminate() function shall not be called implicitly.",
            "message": "Violation of MISRA C++:2008 Rule 15-5-3: The terminate() function shall not be called implicitly.",
            "translation": "Violation of MISRA C++:2008 Rule 15-5-3: The terminate() function shall not be called implicitly.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-0-1: #include directives in a file shall only be preceded by other preprocessor directives or comments.",
            "message": "Violation of MISRA C++:2008 Rule 16-0-1: #include directives in a file shall only be preceded by other preprocessor directives or comments.",
            "translation": "Violation of MISRA C++:2008 Rule 16-0-1: #include directives in a file shall only be preceded by other preprocessor directives or comments.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-0-2: Macros shall only be #define’d or #undef'd in the global namespace.",
            "message": "Violation of MISRA C++:2008 Rule 16-0-2: Macros shall only be #define’d or #undef'd in the global namespace.",
            "translation": "Violation of MISRA C++:2008 Rule 16-0-2: Macros shall only be #define’d or #undef'd in the global namespace.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-0-3: #undef shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 16-0-3: #undef shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 16-0-3: #undef shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-0-4: Function-like macros shall not be defined.",
            "message": "Violation of MISRA C++:2008 Rule 16-0-4: Function-like macros shall not be defined.",
            "translation": "Violation of MISRA C++:2008 Rule 16-0-4: Function-like macros shall not be defined.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-0-5: Arguments to a function-like macro shall not contain tokens that look like preprocessing directives.",
            "message": "Violation of MISRA C++:2008 Rule 16-0-5: Arguments to a function-like macro shall not contain tokens that look like preprocessing directives.",
            "translation": "Violation of MISRA C++:2008 Rule 16-0-5: Arguments to a function-like macro shall not contain tokens that look like preprocessing directives.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-0-6: In the definition of a function-like macro, each instance of a parameter shall be enclosed in parentheses, unless it is used as the operand of # or ##.",
            "message": "Violation of MISRA C++:2008 Rule 16-0-6: In the definition of a function-like macro, each instance of a parameter shall be enclosed in parentheses, unless it is used as the operand of # or ##.",
            "translation": "Violation of MISRA C++:2008 Rule 16-0-6: In the definition of a function-like macro, each instance of a parameter shall be enclosed in parentheses, unless it is used as the operand of # or ##.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-0-7: Undefined macro identifiers shall not be used in #if or #elif preprocessor directives, except as operands to the defined operator.",
            "message": "Violation of MISRA C++:2008 Rule 16-0-7: Undefined macro identifiers shall not be used in #if or #elif preprocessor directives, except as operands to the defined operator.",
            "translation": "Violation of MISRA C++:2008 Rule 16-0-7: Undefined macro identifiers shall not be used in #if or #elif preprocessor directives, except as operands to the defined operator.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-0-8: If the # token appears as the first token on a line, then it shall be immediately followed by a preprocessing token.",
            "message": "Violation of MISRA C++:2008 Rule 16-0-8: If the # token appears as the first token on a line, then it shall be immediately followed by a preprocessing token.",
            "translation": "Violation of MISRA C++:2008 Rule 16-0-8: If the # token appears as the first token on a line, then it shall be immediately followed by a preprocessing token.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-1-1: The defined preprocessor operator shall only be used in one of the two standard forms.",
            "message": "Violation of MISRA C++:2008 Rule 16-1-1: The defined preprocessor operator shall only be used in one of the two standard forms.",
            "translation": "Violation of MISRA C++:2008 Rule 16-1-1: The defined preprocessor operator shall only be used in one of the two standard forms.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-1-2: All #else, #elif and #endif preprocessor directives shall reside in the same file as the #if or #ifdef directive to which they are related.",
            "message": "Violation of MISRA C++:2008 Rule 16-1-2: All #else, #elif and #endif preprocessor directives shall reside in the same file as the #if or #ifdef directive to which they are related.",
            "translation": "Violation of MISRA C++:2008 Rule 16-1-2: All #else, #elif and #endif preprocessor directives shall reside in the same file as the #if or #ifdef directive to which they are related.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-2-1: The pre-processor shall only be used for file inclusion and include guards.",
            "message": "Violation of MISRA C++:2008 Rule 16-2-1: The pre-processor shall only be used for file inclusion and include guards.",
            "translation": "Violation of MISRA C++:2008 Rule 16-2-1: The pre-processor shall only be used for file inclusion and include guards.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-2-2: C++ macros shall only be used for include guards, type qualifiers, or storage class specifiers.",
            "message": "Violation of MISRA C++:2008 Rule 16-2-2: C++ macros shall only be used for include guards, type qualifiers, or storage class specifiers.",
            "translation": "Violation of MISRA C++:2008 Rule 16-2-2: C++ macros shall only be used for include guards, type qualifiers, or storage class specifiers.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-2-3: Include guards shall be provided.",
            "message": "Violation of MISRA C++:2008 Rule 16-2-3: Include guards shall be provided.",
            "translation": "Violation of MISRA C++:2008 Rule 16-2-3: Include guards shall be provided.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-2-4: The ', \", /* or // characters shall not occur in a header file name.",
            "message": "Violation of MISRA C++:2008 Rule 16-2-4: The ', \", /* or // characters shall not occur in a header file name.",
            "translation": "Violation of MISRA C++:2008 Rule 16-2-4: The ', \", /* or // characters shall not occur in a header file name.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-2-5: The \\ character should not occur in a header file name.",
            "message": "Violation of MISRA C++:2008 Rule 16-2-5: The \\ character should not occur in a header file name.",
            "translation": "Violation of MISRA C++:2008 Rule 16-2-5: The \\ character should not occur in a header file name.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-2-6: The #include directive shall be followed by either a \u003cfilename\u003e or \"filename\" sequence.",
            "message": "Violation of MISRA C++:2008 Rule 16-2-6: The #include directive shall be followed by either a \u003cfilename\u003e or \"filename\" sequence.",
            "translation": "Violation of MISRA C++:2008 Rule 16-2-6: The #include directive shall be followed by either a \u003cfilename\u003e or \"filename\" sequence.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-3-1: There shall be at most one occurrence of the # or ## operators in a single macro definition.",
            "message": "Violation of MISRA C++:2008 Rule 16-3-1: There shall be at most one occurrence of the # or ## operators in a single macro definition.",
            "translation": "Violation of MISRA C++:2008 Rule 16-3-1: There shall be at most one occurrence of the # or ## operators in a single macro definition.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-3-2: The # and ## operators should not be used.",
            "message": "Violation of MISRA C++:2008 Rule 16-3-2: The # and ## operators should not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 16-3-2: The # and ## operators should not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 16-6-1: All uses of the #pragma directive shall be documented.",
            "message": "Violation of MISRA C++:2008 Rule 16-6-1: All uses of the #pragma directive shall be documented.",
            "translation": "Violation of MISRA C++:2008 Rule 16-6-1: All uses of the #pragma directive shall be documented.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 17-0-1: Reserved identifiers, macros and functions in the standard library shall not be defined, redefined or undefined.",
            "message": "Violation of MISRA C++:2008 Rule 17-0-1: Reserved identifiers, macros and functions in the standard library shall not be defined, redefined or undefined.",
            "translation": "Violation of MISRA C++:2008 Rule 17-0-1: Reserved identifiers, macros and functions in the standard library shall not be defined, redefined or undefined.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 17-0-2: The names of standard library macros and objects shall not be reused.",
            "message": "Violation of MISRA C++:2008 Rule 17-0-2: The names of standard library macros and objects shall not be reused.",
            "translation": "Violation of MISRA C++:2008 Rule 17-0-2: The names of standard library macros and objects shall not be reused.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 17-0-3: The names of standard library functions shall not be overridden.",
            "message": "Violation of MISRA C++:2008 Rule 17-0-3: The names of standard library functions shall not be overridden.",
            "translation": "Violation of MISRA C++:2008 Rule 17-0-3: The names of standard library functions shall not be overridden.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 17-0-4: All library code shall conform to MISRA C++.",
            "message": "Violation of MISRA C++:2008 Rule 17-0-4: All library code shall conform to MISRA C++.",
            "translation": "Violation of MISRA C++:2008 Rule 17-0-4: All library code shall conform to MISRA C++.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 17-0-5: The setjmp macro and the longjmp function shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 17-0-5: The setjmp macro and the longjmp function shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 17-0-5: The setjmp macro and the longjmp function shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 18-0-1: The C library shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 18-0-1: The C library shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 18-0-1: The C library shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 18-0-2: The library functions atof, atoi and atol from library \u003ccstdlib\u003e shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 18-0-2: The library functions atof, atoi and atol from library \u003ccstdlib\u003e shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 18-0-2: The library functions atof, atoi and atol from library \u003ccstdlib\u003e shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 18-0-3: The library functions abort, exit, getenv and system from library \u003ccstdlib\u003e shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 18-0-3: The library functions abort, exit, getenv and system from library \u003ccstdlib\u003e shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 18-0-3: The library functions abort, exit, getenv and system from library \u003ccstdlib\u003e shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 18-0-4: The time handling functions of library \u003cctime\u003e shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 18-0-4: The time handling functions of library \u003cctime\u003e shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 18-0-4: The time handling functions of library \u003cctime\u003e shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 18-0-5: The unbounded functions of library \u003ccstring\u003e shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 18-0-5: The unbounded functions of library \u003ccstring\u003e shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 18-0-5: The unbounded functions of library \u003ccstring\u003e shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 18-2-1: The macro offsetof shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 18-2-1: The macro offsetof shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 18-2-1: The macro offsetof shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 18-4-1: Dynamic heap memory allocation shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 18-4-1: Dynamic heap memory allocation shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 18-4-1: Dynamic heap memory allocation shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 18-7-1: The signal handling facilities of \u003ccsignal\u003e shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 18-7-1: The signal handling facilities of \u003ccsignal\u003e shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 18-7-1: The signal handling facilities of \u003ccsignal\u003e shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 19-3-1: The error indicator errno shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 19-3-1: The error indicator errno shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 19-3-1: The error indicator errno shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Violation of MISRA C++:2008 Rule 27-0-1: The stream input/output library \u003ccstdio\u003e shall not be used.",
            "message": "Violation of MISRA C++:2008 Rule 27-0-1: The stream input/output library \u003ccstdio\u003e shall not be used.",
            "translation": "Violation of MISRA C++:2008 Rule 27-0-1: The stream input/output library \u003ccstdio\u003e shall not be used.",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "{Clines} lines of C code",
            "message": "{Clines} lines of C code",
            "translation": "{Clines} lines of C code",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Clines",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "clines"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Cpplines} lines of C++ code",
            "message": "{Cpplines} lines of C++ code",
            "translation": "{Cpplines} lines of C++ code",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Cpplines",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "cpplines"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Headerlines} lines of headers",
            "message": "{Headerlines} lines of headers",
            "translation": "{Headerlines} lines of headers",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Headerlines",
                    "string": "%[1]d",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 1,
                    "expr": "headerlines"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Use {NumWorkers} CPU(s)",
            "message": "Use {NumWorkers} CPU(s)",
            "translation": "Use {NumWorkers} CPU(s)",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "NumWorkers",
                    "string": "%[1]d",
                    "type": "int32",
                    "underlyingType": "int32",
                    "argNum": 1,
                    "expr": "numWorkers"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Start preparing CTU information",
            "message": "Start preparing CTU information",
            "translation": "Start preparing CTU information",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "CTU information preparation completed [{TimeUsed}]",
            "message": "CTU information preparation completed [{TimeUsed}]",
            "translation": "CTU information preparation completed [{TimeUsed}]",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TimeUsed",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "timeUsed"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Start preparing STU information",
            "message": "Start preparing STU information",
            "translation": "Start preparing STU information",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "{Percent} STU information preparation completed ({FinishededTaskNumbers}/{TaskNumbers})",
            "message": "{Percent} STU information preparation completed ({FinishededTaskNumbers}/{TaskNumbers})",
            "translation": "{Percent} STU information preparation completed ({FinishededTaskNumbers}/{TaskNumbers})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Percent",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "percent"
                },
                {
                    "id": "FinishededTaskNumbers",
                    "string": "%[2]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "finishededTaskNumbers"
                },
                {
                    "id": "TaskNumbers",
                    "string": "%[3]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 3,
                    "expr": "taskNumbers"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "STU information preparation completed [{TimeUsed}]",
            "message": "STU information preparation completed [{TimeUsed}]",
            "translation": "STU information preparation completed [{TimeUsed}]",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TimeUsed",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "timeUsed"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Analysis completed [{TimeUsed}]",
            "message": "Analysis completed [{TimeUsed}]",
            "translation": "Analysis completed [{TimeUsed}]",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TimeUsed",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "timeUsed"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "{Percent} BuildAction preparation completed ({StartedTaskNumbers}/{TaskNumbers})",
            "message": "{Percent} BuildAction preparation completed ({StartedTaskNumbers}/{TaskNumbers})",
            "translation": "{Percent} BuildAction preparation completed ({StartedTaskNumbers}/{TaskNumbers})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Percent",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "percent"
                },
                {
                    "id": "StartedTaskNumbers",
                    "string": "%[2]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 2,
                    "expr": "startedTaskNumbers"
                },
                {
                    "id": "TaskNumbers",
                    "string": "%[3]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 3,
                    "expr": "taskNumbers"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "BuildAction preparation completed [{TimeUsed}]",
            "message": "BuildAction preparation completed [{TimeUsed}]",
            "translation": "BuildAction preparation completed [{TimeUsed}]",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TimeUsed",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "timeUsed"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Starting generating CTU infomation",
            "message": "Starting generating CTU infomation",
            "translation": "Starting generating CTU infomation",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "{Percent} CTU information generated ({FinishedTaskNumbers}/{TaskNumbers})",
            "message": "{Percent} CTU information generated ({FinishedTaskNumbers}/{TaskNumbers})",
            "translation": "{Percent} CTU information generated ({FinishedTaskNumbers}/{TaskNumbers})",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "Percent",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "percent"
                },
                {
                    "id": "FinishedTaskNumbers",
                    "string": "%[2]v",
                    "type": "int32",
                    "underlyingType": "int32",
                    "argNum": 2,
                    "expr": "finishedTaskNumbers"
                },
                {
                    "id": "TaskNumbers",
                    "string": "%[3]v",
                    "type": "int",
                    "underlyingType": "int",
                    "argNum": 3,
                    "expr": "taskNumbers"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "CTU information generated successfully [{TimeUsed}]",
            "message": "CTU information generated successfully [{TimeUsed}]",
            "translation": "CTU information generated successfully [{TimeUsed}]",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TimeUsed",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "timeUsed"
                }
            ],
            "fuzzy": true
        },
        {
            "id": "Starting writing CTU information",
            "message": "Starting writing CTU information",
            "translation": "Starting writing CTU information",
            "translatorComment": "Copied from source.",
            "fuzzy": true
        },
        {
            "id": "Writing CTU information completed [{TimeUsed}]",
            "message": "Writing CTU information completed [{TimeUsed}]",
            "translation": "Writing CTU information completed [{TimeUsed}]",
            "translatorComment": "Copied from source.",
            "placeholders": [
                {
                    "id": "TimeUsed",
                    "string": "%[1]s",
                    "type": "string",
                    "underlyingType": "string",
                    "argNum": 1,
                    "expr": "timeUsed"
                }
            ],
            "fuzzy": true
        }
    ]
}