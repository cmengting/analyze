//
//Copyright 2022 Naive Systems Ltd.
//
//This software contains information and intellectual property that is
//confidential and proprietary to Naive Systems Ltd. and its affiliates.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.1
// source: analyzer/proto/analyzer.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// An analyzer definition.
type Definition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// A machine-readable name of the analyzer.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// A human-readable description of the analyzer.
	Description string `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// A list of rules supported by this analyzer.
	Rules []string `protobuf:"bytes,3,rep,name=rules,proto3" json:"rules,omitempty"`
	// File or directory location where the build artifacts of the analyzer should
	// be copied from.
	SourceLocation string `protobuf:"bytes,4,opt,name=source_location,json=sourceLocation,proto3" json:"source_location,omitempty"`
	// File or directory location in the container where the artifacts should be
	// copied to.
	TargetLocation string `protobuf:"bytes,5,opt,name=target_location,json=targetLocation,proto3" json:"target_location,omitempty"`
	// Absolute path in the container to invoke the analyzer.
	InvocationPath string `protobuf:"bytes,6,opt,name=invocation_path,json=invocationPath,proto3" json:"invocation_path,omitempty"`
	// A list of owners who are responsible for the quality of the analyzer.
	// In case of emergencies, owners should be contacted in the specified order.
	// Usually the owners are identified with their corporate email addresses.
	Owners []string `protobuf:"bytes,7,rep,name=owners,proto3" json:"owners,omitempty"`
}

func (x *Definition) Reset() {
	*x = Definition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analyzer_proto_analyzer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Definition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Definition) ProtoMessage() {}

func (x *Definition) ProtoReflect() protoreflect.Message {
	mi := &file_analyzer_proto_analyzer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Definition.ProtoReflect.Descriptor instead.
func (*Definition) Descriptor() ([]byte, []int) {
	return file_analyzer_proto_analyzer_proto_rawDescGZIP(), []int{0}
}

func (x *Definition) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Definition) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *Definition) GetRules() []string {
	if x != nil {
		return x.Rules
	}
	return nil
}

func (x *Definition) GetSourceLocation() string {
	if x != nil {
		return x.SourceLocation
	}
	return ""
}

func (x *Definition) GetTargetLocation() string {
	if x != nil {
		return x.TargetLocation
	}
	return ""
}

func (x *Definition) GetInvocationPath() string {
	if x != nil {
		return x.InvocationPath
	}
	return ""
}

func (x *Definition) GetOwners() []string {
	if x != nil {
		return x.Owners
	}
	return nil
}

type Definitions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Definitions   []*Definition         `protobuf:"bytes,1,rep,name=definitions,proto3" json:"definitions,omitempty"`
	CheckerConfig *CheckerConfiguration `protobuf:"bytes,2,opt,name=checker_config,json=checkerConfig,proto3" json:"checker_config,omitempty"`
}

func (x *Definitions) Reset() {
	*x = Definitions{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analyzer_proto_analyzer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Definitions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Definitions) ProtoMessage() {}

func (x *Definitions) ProtoReflect() protoreflect.Message {
	mi := &file_analyzer_proto_analyzer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Definitions.ProtoReflect.Descriptor instead.
func (*Definitions) Descriptor() ([]byte, []int) {
	return file_analyzer_proto_analyzer_proto_rawDescGZIP(), []int{1}
}

func (x *Definitions) GetDefinitions() []*Definition {
	if x != nil {
		return x.Definitions
	}
	return nil
}

func (x *Definitions) GetCheckerConfig() *CheckerConfiguration {
	if x != nil {
		return x.CheckerConfig
	}
	return nil
}

type CheckerConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// System library options for CSA checker.
	CsaSystemLibOptions string `protobuf:"bytes,1,opt,name=csa_system_lib_options,json=csaSystemLibOptions,proto3" json:"csa_system_lib_options,omitempty"`
	InferBin            string `protobuf:"bytes,2,opt,name=infer_bin,json=inferBin,proto3" json:"infer_bin,omitempty"`
	ClangBin            string `protobuf:"bytes,3,opt,name=clang_bin,json=clangBin,proto3" json:"clang_bin,omitempty"`
	CodeCheckerBin      string `protobuf:"bytes,4,opt,name=code_checker_bin,json=codeCheckerBin,proto3" json:"code_checker_bin,omitempty"`
	CppcheckBin         string `protobuf:"bytes,5,opt,name=cppcheck_bin,json=cppcheckBin,proto3" json:"cppcheck_bin,omitempty"`
	PythonBin           string `protobuf:"bytes,6,opt,name=python_bin,json=pythonBin,proto3" json:"python_bin,omitempty"`
	ClangtidyBin        string `protobuf:"bytes,7,opt,name=clangtidy_bin,json=clangtidyBin,proto3" json:"clangtidy_bin,omitempty"`
	ClangqueryBin       string `protobuf:"bytes,8,opt,name=clangquery_bin,json=clangqueryBin,proto3" json:"clangquery_bin,omitempty"`
	MisraCheckerPath    string `protobuf:"bytes,9,opt,name=misra_checker_path,json=misraCheckerPath,proto3" json:"misra_checker_path,omitempty"`
	NumWorkers          int32  `protobuf:"varint,10,opt,name=num_workers,json=numWorkers,proto3" json:"num_workers,omitempty"`
	InferExtraOptions   string `protobuf:"bytes,11,opt,name=infer_extra_options,json=inferExtraOptions,proto3" json:"infer_extra_options,omitempty"`
	GccPredefinedMacros string `protobuf:"bytes,12,opt,name=gcc_predefined_macros,json=gccPredefinedMacros,proto3" json:"gcc_predefined_macros,omitempty"`
	ClangmappingBin     string `protobuf:"bytes,13,opt,name=clangmapping_bin,json=clangmappingBin,proto3" json:"clangmapping_bin,omitempty"`
	InferJobs           int64  `protobuf:"varint,14,opt,name=infer_jobs,json=inferJobs,proto3" json:"infer_jobs,omitempty"`
	CpplintScript       string `protobuf:"bytes,15,opt,name=cpplint_script,json=cpplintScript,proto3" json:"cpplint_script,omitempty"`
}

func (x *CheckerConfiguration) Reset() {
	*x = CheckerConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_analyzer_proto_analyzer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckerConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckerConfiguration) ProtoMessage() {}

func (x *CheckerConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_analyzer_proto_analyzer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckerConfiguration.ProtoReflect.Descriptor instead.
func (*CheckerConfiguration) Descriptor() ([]byte, []int) {
	return file_analyzer_proto_analyzer_proto_rawDescGZIP(), []int{2}
}

func (x *CheckerConfiguration) GetCsaSystemLibOptions() string {
	if x != nil {
		return x.CsaSystemLibOptions
	}
	return ""
}

func (x *CheckerConfiguration) GetInferBin() string {
	if x != nil {
		return x.InferBin
	}
	return ""
}

func (x *CheckerConfiguration) GetClangBin() string {
	if x != nil {
		return x.ClangBin
	}
	return ""
}

func (x *CheckerConfiguration) GetCodeCheckerBin() string {
	if x != nil {
		return x.CodeCheckerBin
	}
	return ""
}

func (x *CheckerConfiguration) GetCppcheckBin() string {
	if x != nil {
		return x.CppcheckBin
	}
	return ""
}

func (x *CheckerConfiguration) GetPythonBin() string {
	if x != nil {
		return x.PythonBin
	}
	return ""
}

func (x *CheckerConfiguration) GetClangtidyBin() string {
	if x != nil {
		return x.ClangtidyBin
	}
	return ""
}

func (x *CheckerConfiguration) GetClangqueryBin() string {
	if x != nil {
		return x.ClangqueryBin
	}
	return ""
}

func (x *CheckerConfiguration) GetMisraCheckerPath() string {
	if x != nil {
		return x.MisraCheckerPath
	}
	return ""
}

func (x *CheckerConfiguration) GetNumWorkers() int32 {
	if x != nil {
		return x.NumWorkers
	}
	return 0
}

func (x *CheckerConfiguration) GetInferExtraOptions() string {
	if x != nil {
		return x.InferExtraOptions
	}
	return ""
}

func (x *CheckerConfiguration) GetGccPredefinedMacros() string {
	if x != nil {
		return x.GccPredefinedMacros
	}
	return ""
}

func (x *CheckerConfiguration) GetClangmappingBin() string {
	if x != nil {
		return x.ClangmappingBin
	}
	return ""
}

func (x *CheckerConfiguration) GetInferJobs() int64 {
	if x != nil {
		return x.InferJobs
	}
	return 0
}

func (x *CheckerConfiguration) GetCpplintScript() string {
	if x != nil {
		return x.CpplintScript
	}
	return ""
}

var File_analyzer_proto_analyzer_proto protoreflect.FileDescriptor

var file_analyzer_proto_analyzer_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x2f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xeb, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x72, 0x75, 0x6c, 0x65, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x5f, 0x6c, 0x6f,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x27, 0x0a, 0x0f,
	0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x69, 0x6e, 0x76, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x18,
	0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x06, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x73, 0x22, 0x98, 0x01,
	0x0a, 0x0b, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x3c, 0x0a,
	0x0b, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x2e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x4b, 0x0a, 0x0e, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0xe1, 0x04, 0x0a, 0x14, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x33, 0x0a, 0x16, 0x63, 0x73, 0x61, 0x5f, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x5f,
	0x6c, 0x69, 0x62, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x63, 0x73, 0x61, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x4c, 0x69, 0x62, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x5f,
	0x62, 0x69, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x69, 0x6e, 0x66, 0x65, 0x72,
	0x42, 0x69, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x5f, 0x62, 0x69, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x42, 0x69, 0x6e,
	0x12, 0x28, 0x0a, 0x10, 0x63, 0x6f, 0x64, 0x65, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72,
	0x5f, 0x62, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x64, 0x65,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x42, 0x69, 0x6e, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x70,
	0x70, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x70, 0x70, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x42, 0x69, 0x6e, 0x12, 0x1d, 0x0a,
	0x0a, 0x70, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x79, 0x74, 0x68, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x12, 0x23, 0x0a, 0x0d,
	0x63, 0x6c, 0x61, 0x6e, 0x67, 0x74, 0x69, 0x64, 0x79, 0x5f, 0x62, 0x69, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x74, 0x69, 0x64, 0x79, 0x42, 0x69,
	0x6e, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x71, 0x75, 0x65, 0x72, 0x79, 0x5f,
	0x62, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6c, 0x61, 0x6e, 0x67,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x42, 0x69, 0x6e, 0x12, 0x2c, 0x0a, 0x12, 0x6d, 0x69, 0x73, 0x72,
	0x61, 0x5f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x72, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6d, 0x69, 0x73, 0x72, 0x61, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x65, 0x72, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x5f, 0x77, 0x6f,
	0x72, 0x6b, 0x65, 0x72, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d,
	0x57, 0x6f, 0x72, 0x6b, 0x65, 0x72, 0x73, 0x12, 0x2e, 0x0a, 0x13, 0x69, 0x6e, 0x66, 0x65, 0x72,
	0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x5f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x32, 0x0a, 0x15, 0x67, 0x63, 0x63, 0x5f, 0x70,
	0x72, 0x65, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x65, 0x64, 0x5f, 0x6d, 0x61, 0x63, 0x72, 0x6f, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x13, 0x67, 0x63, 0x63, 0x50, 0x72, 0x65, 0x64, 0x65,
	0x66, 0x69, 0x6e, 0x65, 0x64, 0x4d, 0x61, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x29, 0x0a, 0x10, 0x63,
	0x6c, 0x61, 0x6e, 0x67, 0x6d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x5f, 0x62, 0x69, 0x6e, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x6c, 0x61, 0x6e, 0x67, 0x6d, 0x61, 0x70, 0x70,
	0x69, 0x6e, 0x67, 0x42, 0x69, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x66, 0x65, 0x72, 0x5f,
	0x6a, 0x6f, 0x62, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x69, 0x6e, 0x66, 0x65,
	0x72, 0x4a, 0x6f, 0x62, 0x73, 0x12, 0x25, 0x0a, 0x0e, 0x63, 0x70, 0x70, 0x6c, 0x69, 0x6e, 0x74,
	0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x63,
	0x70, 0x70, 0x6c, 0x69, 0x6e, 0x74, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x42, 0x10, 0x5a, 0x0e,
	0x61, 0x6e, 0x61, 0x6c, 0x79, 0x7a, 0x65, 0x72, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_analyzer_proto_analyzer_proto_rawDescOnce sync.Once
	file_analyzer_proto_analyzer_proto_rawDescData = file_analyzer_proto_analyzer_proto_rawDesc
)

func file_analyzer_proto_analyzer_proto_rawDescGZIP() []byte {
	file_analyzer_proto_analyzer_proto_rawDescOnce.Do(func() {
		file_analyzer_proto_analyzer_proto_rawDescData = protoimpl.X.CompressGZIP(file_analyzer_proto_analyzer_proto_rawDescData)
	})
	return file_analyzer_proto_analyzer_proto_rawDescData
}

var file_analyzer_proto_analyzer_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_analyzer_proto_analyzer_proto_goTypes = []interface{}{
	(*Definition)(nil),           // 0: analyzer.proto.Definition
	(*Definitions)(nil),          // 1: analyzer.proto.Definitions
	(*CheckerConfiguration)(nil), // 2: analyzer.proto.CheckerConfiguration
}
var file_analyzer_proto_analyzer_proto_depIdxs = []int32{
	0, // 0: analyzer.proto.Definitions.definitions:type_name -> analyzer.proto.Definition
	2, // 1: analyzer.proto.Definitions.checker_config:type_name -> analyzer.proto.CheckerConfiguration
	2, // [2:2] is the sub-list for method output_type
	2, // [2:2] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_analyzer_proto_analyzer_proto_init() }
func file_analyzer_proto_analyzer_proto_init() {
	if File_analyzer_proto_analyzer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_analyzer_proto_analyzer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Definition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analyzer_proto_analyzer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Definitions); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_analyzer_proto_analyzer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckerConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_analyzer_proto_analyzer_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_analyzer_proto_analyzer_proto_goTypes,
		DependencyIndexes: file_analyzer_proto_analyzer_proto_depIdxs,
		MessageInfos:      file_analyzer_proto_analyzer_proto_msgTypes,
	}.Build()
	File_analyzer_proto_analyzer_proto = out.File
	file_analyzer_proto_analyzer_proto_rawDesc = nil
	file_analyzer_proto_analyzer_proto_goTypes = nil
	file_analyzer_proto_analyzer_proto_depIdxs = nil
}
