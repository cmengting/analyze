Typing in MISRA C++ 2008

# Implicit Conversion

There are 3 implicit conversions: (1) integral promotion conversions, (2) assigning conversions, (3) balancing conversions.

Integral promotion conversions (C++2003 4.5) converts
  {char, signed char, short int, unsigned short int} into {int, unsigned int},
  {wchar_t, enum_type} into {int, unsigned int, long, unsigned long},
  {bool} into {int}.

Assigning conversions occur in assignment/initializing/retuning/etc.

Balancing conversions (C++2003 5 usual arithmetic conversions) occur in some binary operations, preceded by integral promotion conversions.

# Underlying Type

Underlying type is a concept used to detect dangerous integral promotion and implicit converions.

An expression is called "cvalue expression" if shoult not undergo futher type conversions.

Who are cvalue expressions?

1. Function argument expressions
2. Return expressions
3. Unary operators: ++expr, --expr, ~expr, -expr, !expr
4. Multiplicative operators: exp*exp, exp/exp, exp%exp
5. Additive operators: exp+exp, exp-exp
6. Shift operators: exp<<exp, exp>>exp
7. Relational operators: exp<exp, exp>exp, exp<=exp, exp>=exp
8. Equality operators: exp==exp, exp!=exp
9. Bitwise AND operator: exp&exp
10. Bitwise exclusive OR operator: exp^exp
11. Bitwise inclusive OR operator: exp|exp
12. Logical AND operator: exp&&exp
13. Logical OR operator: exp||exp
14. Conditional operator: exp?exp:exp
15. Assignment operator: =, *=, /=, %=, +=, -=, >>=, <<=, &=, ^=, |=
16. Comma operator: ,
